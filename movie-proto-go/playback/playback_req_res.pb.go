// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: playback/playback_req_res.proto

package playback

import (
	common "github.com/movie-stream-platform/movie-proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Create playback session request
type CreatePlaybackSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                                                // User ID
	ContentId     string                 `protobuf:"bytes,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                                                                       // Content ID to play
	DeviceId      string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                                                                                          // Device ID
	ClientType    string                 `protobuf:"bytes,5,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`                                                                                    // Client type (web, mobile, tv)
	SessionParams map[string]string      `protobuf:"bytes,6,rep,name=session_params,json=sessionParams,proto3" json:"session_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Session parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePlaybackSessionRequest) Reset() {
	*x = CreatePlaybackSessionRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlaybackSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaybackSessionRequest) ProtoMessage() {}

func (x *CreatePlaybackSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaybackSessionRequest.ProtoReflect.Descriptor instead.
func (*CreatePlaybackSessionRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePlaybackSessionRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *CreatePlaybackSessionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreatePlaybackSessionRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *CreatePlaybackSessionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CreatePlaybackSessionRequest) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *CreatePlaybackSessionRequest) GetSessionParams() map[string]string {
	if x != nil {
		return x.SessionParams
	}
	return nil
}

// Create playback session response
type CreatePlaybackSessionResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse       *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Session            *PlaybackSession       `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`                                                 // Created session
	StreamingUrl       string                 `protobuf:"bytes,3,opt,name=streaming_url,json=streamingUrl,proto3" json:"streaming_url,omitempty"`                   // Initial streaming URL
	AvailableQualities []string               `protobuf:"bytes,4,rep,name=available_qualities,json=availableQualities,proto3" json:"available_qualities,omitempty"` // Available quality options
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreatePlaybackSessionResponse) Reset() {
	*x = CreatePlaybackSessionResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlaybackSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlaybackSessionResponse) ProtoMessage() {}

func (x *CreatePlaybackSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlaybackSessionResponse.ProtoReflect.Descriptor instead.
func (*CreatePlaybackSessionResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePlaybackSessionResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *CreatePlaybackSessionResponse) GetSession() *PlaybackSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *CreatePlaybackSessionResponse) GetStreamingUrl() string {
	if x != nil {
		return x.StreamingUrl
	}
	return ""
}

func (x *CreatePlaybackSessionResponse) GetAvailableQualities() []string {
	if x != nil {
		return x.AvailableQualities
	}
	return nil
}

// Get playback session request
type GetPlaybackSessionRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest     *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId       string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                    // Session ID to retrieve
	IncludeProgress bool                   `protobuf:"varint,3,opt,name=include_progress,json=includeProgress,proto3" json:"include_progress,omitempty"` // Include progress information
	IncludeMetrics  bool                   `protobuf:"varint,4,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`    // Include streaming metrics
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetPlaybackSessionRequest) Reset() {
	*x = GetPlaybackSessionRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackSessionRequest) ProtoMessage() {}

func (x *GetPlaybackSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackSessionRequest.ProtoReflect.Descriptor instead.
func (*GetPlaybackSessionRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlaybackSessionRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetPlaybackSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetPlaybackSessionRequest) GetIncludeProgress() bool {
	if x != nil {
		return x.IncludeProgress
	}
	return false
}

func (x *GetPlaybackSessionRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

// Get playback session response
type GetPlaybackSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Session       *PlaybackSession       `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`   // Session information
	Progress      *PlaybackProgress      `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"` // Current progress (if requested)
	Metrics       *StreamingMetrics      `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`   // Streaming metrics (if requested)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaybackSessionResponse) Reset() {
	*x = GetPlaybackSessionResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackSessionResponse) ProtoMessage() {}

func (x *GetPlaybackSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackSessionResponse.ProtoReflect.Descriptor instead.
func (*GetPlaybackSessionResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlaybackSessionResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetPlaybackSessionResponse) GetSession() *PlaybackSession {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetPlaybackSessionResponse) GetProgress() *PlaybackProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetPlaybackSessionResponse) GetMetrics() *StreamingMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Update playback session request
type UpdatePlaybackSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                      // Session ID to update
	Updates       map[string]string      `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Fields to update
	Quality       string                 `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`                                                                           // New quality setting
	DeviceId      string                 `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                                                         // New device ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePlaybackSessionRequest) Reset() {
	*x = UpdatePlaybackSessionRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaybackSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaybackSessionRequest) ProtoMessage() {}

func (x *UpdatePlaybackSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaybackSessionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlaybackSessionRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{4}
}

func (x *UpdatePlaybackSessionRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *UpdatePlaybackSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdatePlaybackSessionRequest) GetUpdates() map[string]string {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdatePlaybackSessionRequest) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *UpdatePlaybackSessionRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// Update playback session response
type UpdatePlaybackSessionResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	UpdatedSession  *PlaybackSession       `protobuf:"bytes,2,opt,name=updated_session,json=updatedSession,proto3" json:"updated_session,omitempty"`      // Updated session
	QualityChanged  bool                   `protobuf:"varint,3,opt,name=quality_changed,json=qualityChanged,proto3" json:"quality_changed,omitempty"`     // Whether quality was changed
	NewStreamingUrl string                 `protobuf:"bytes,4,opt,name=new_streaming_url,json=newStreamingUrl,proto3" json:"new_streaming_url,omitempty"` // New streaming URL if quality changed
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdatePlaybackSessionResponse) Reset() {
	*x = UpdatePlaybackSessionResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaybackSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaybackSessionResponse) ProtoMessage() {}

func (x *UpdatePlaybackSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaybackSessionResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlaybackSessionResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePlaybackSessionResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UpdatePlaybackSessionResponse) GetUpdatedSession() *PlaybackSession {
	if x != nil {
		return x.UpdatedSession
	}
	return nil
}

func (x *UpdatePlaybackSessionResponse) GetQualityChanged() bool {
	if x != nil {
		return x.QualityChanged
	}
	return false
}

func (x *UpdatePlaybackSessionResponse) GetNewStreamingUrl() string {
	if x != nil {
		return x.NewStreamingUrl
	}
	return ""
}

// End playback session request
type EndPlaybackSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`           // Session ID to end
	EndReason     string                 `protobuf:"bytes,3,opt,name=end_reason,json=endReason,proto3" json:"end_reason,omitempty"`           // Reason for ending
	SaveProgress  bool                   `protobuf:"varint,4,opt,name=save_progress,json=saveProgress,proto3" json:"save_progress,omitempty"` // Whether to save progress
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndPlaybackSessionRequest) Reset() {
	*x = EndPlaybackSessionRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndPlaybackSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPlaybackSessionRequest) ProtoMessage() {}

func (x *EndPlaybackSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPlaybackSessionRequest.ProtoReflect.Descriptor instead.
func (*EndPlaybackSessionRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{6}
}

func (x *EndPlaybackSessionRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *EndPlaybackSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EndPlaybackSessionRequest) GetEndReason() string {
	if x != nil {
		return x.EndReason
	}
	return ""
}

func (x *EndPlaybackSessionRequest) GetSaveProgress() bool {
	if x != nil {
		return x.SaveProgress
	}
	return false
}

// End playback session response
type EndPlaybackSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	SessionEnded  bool                   `protobuf:"varint,2,opt,name=session_ended,json=sessionEnded,proto3" json:"session_ended,omitempty"`   // Whether session was ended
	FinalProgress *PlaybackProgress      `protobuf:"bytes,3,opt,name=final_progress,json=finalProgress,proto3" json:"final_progress,omitempty"` // Final progress if saved
	EndedAt       *common.DateTime       `protobuf:"bytes,4,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`                   // When session ended
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndPlaybackSessionResponse) Reset() {
	*x = EndPlaybackSessionResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndPlaybackSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndPlaybackSessionResponse) ProtoMessage() {}

func (x *EndPlaybackSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndPlaybackSessionResponse.ProtoReflect.Descriptor instead.
func (*EndPlaybackSessionResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{7}
}

func (x *EndPlaybackSessionResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *EndPlaybackSessionResponse) GetSessionEnded() bool {
	if x != nil {
		return x.SessionEnded
	}
	return false
}

func (x *EndPlaybackSessionResponse) GetFinalProgress() *PlaybackProgress {
	if x != nil {
		return x.FinalProgress
	}
	return nil
}

func (x *EndPlaybackSessionResponse) GetEndedAt() *common.DateTime {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

// Start playback request
type StartPlaybackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`              // Session ID
	StartPosition int64                  `protobuf:"varint,3,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"` // Start position in milliseconds
	Quality       string                 `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`                                   // Preferred quality
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartPlaybackRequest) Reset() {
	*x = StartPlaybackRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPlaybackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlaybackRequest) ProtoMessage() {}

func (x *StartPlaybackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlaybackRequest.ProtoReflect.Descriptor instead.
func (*StartPlaybackRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{8}
}

func (x *StartPlaybackRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *StartPlaybackRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StartPlaybackRequest) GetStartPosition() int64 {
	if x != nil {
		return x.StartPosition
	}
	return 0
}

func (x *StartPlaybackRequest) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

// Start playback response
type StartPlaybackResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	PlaybackStarted bool                   `protobuf:"varint,2,opt,name=playback_started,json=playbackStarted,proto3" json:"playback_started,omitempty"` // Whether playback started
	StreamingUrl    string                 `protobuf:"bytes,3,opt,name=streaming_url,json=streamingUrl,proto3" json:"streaming_url,omitempty"`           // Streaming URL
	StartedAt       *common.DateTime       `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`                    // When playback started
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StartPlaybackResponse) Reset() {
	*x = StartPlaybackResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPlaybackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPlaybackResponse) ProtoMessage() {}

func (x *StartPlaybackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPlaybackResponse.ProtoReflect.Descriptor instead.
func (*StartPlaybackResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{9}
}

func (x *StartPlaybackResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *StartPlaybackResponse) GetPlaybackStarted() bool {
	if x != nil {
		return x.PlaybackStarted
	}
	return false
}

func (x *StartPlaybackResponse) GetStreamingUrl() string {
	if x != nil {
		return x.StreamingUrl
	}
	return ""
}

func (x *StartPlaybackResponse) GetStartedAt() *common.DateTime {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

// Pause playback request
type PausePlaybackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`              // Session ID
	PausePosition int64                  `protobuf:"varint,3,opt,name=pause_position,json=pausePosition,proto3" json:"pause_position,omitempty"` // Position where paused
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PausePlaybackRequest) Reset() {
	*x = PausePlaybackRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PausePlaybackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PausePlaybackRequest) ProtoMessage() {}

func (x *PausePlaybackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PausePlaybackRequest.ProtoReflect.Descriptor instead.
func (*PausePlaybackRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{10}
}

func (x *PausePlaybackRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *PausePlaybackRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PausePlaybackRequest) GetPausePosition() int64 {
	if x != nil {
		return x.PausePosition
	}
	return 0
}

// Pause playback response
type PausePlaybackResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse   *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	PlaybackPaused bool                   `protobuf:"varint,2,opt,name=playback_paused,json=playbackPaused,proto3" json:"playback_paused,omitempty"` // Whether playback was paused
	PausedPosition int64                  `protobuf:"varint,3,opt,name=paused_position,json=pausedPosition,proto3" json:"paused_position,omitempty"` // Position where paused
	PausedAt       *common.DateTime       `protobuf:"bytes,4,opt,name=paused_at,json=pausedAt,proto3" json:"paused_at,omitempty"`                    // When playback was paused
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PausePlaybackResponse) Reset() {
	*x = PausePlaybackResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PausePlaybackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PausePlaybackResponse) ProtoMessage() {}

func (x *PausePlaybackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PausePlaybackResponse.ProtoReflect.Descriptor instead.
func (*PausePlaybackResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{11}
}

func (x *PausePlaybackResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *PausePlaybackResponse) GetPlaybackPaused() bool {
	if x != nil {
		return x.PlaybackPaused
	}
	return false
}

func (x *PausePlaybackResponse) GetPausedPosition() int64 {
	if x != nil {
		return x.PausedPosition
	}
	return 0
}

func (x *PausePlaybackResponse) GetPausedAt() *common.DateTime {
	if x != nil {
		return x.PausedAt
	}
	return nil
}

// Resume playback request
type ResumePlaybackRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest    *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId      string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                 // Session ID
	ResumePosition int64                  `protobuf:"varint,3,opt,name=resume_position,json=resumePosition,proto3" json:"resume_position,omitempty"` // Position to resume from
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResumePlaybackRequest) Reset() {
	*x = ResumePlaybackRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumePlaybackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumePlaybackRequest) ProtoMessage() {}

func (x *ResumePlaybackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumePlaybackRequest.ProtoReflect.Descriptor instead.
func (*ResumePlaybackRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{12}
}

func (x *ResumePlaybackRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *ResumePlaybackRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ResumePlaybackRequest) GetResumePosition() int64 {
	if x != nil {
		return x.ResumePosition
	}
	return 0
}

// Resume playback response
type ResumePlaybackResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	PlaybackResumed bool                   `protobuf:"varint,2,opt,name=playback_resumed,json=playbackResumed,proto3" json:"playback_resumed,omitempty"` // Whether playback resumed
	StreamingUrl    string                 `protobuf:"bytes,3,opt,name=streaming_url,json=streamingUrl,proto3" json:"streaming_url,omitempty"`           // Updated streaming URL
	ResumedAt       *common.DateTime       `protobuf:"bytes,4,opt,name=resumed_at,json=resumedAt,proto3" json:"resumed_at,omitempty"`                    // When playback resumed
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResumePlaybackResponse) Reset() {
	*x = ResumePlaybackResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumePlaybackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumePlaybackResponse) ProtoMessage() {}

func (x *ResumePlaybackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumePlaybackResponse.ProtoReflect.Descriptor instead.
func (*ResumePlaybackResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{13}
}

func (x *ResumePlaybackResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *ResumePlaybackResponse) GetPlaybackResumed() bool {
	if x != nil {
		return x.PlaybackResumed
	}
	return false
}

func (x *ResumePlaybackResponse) GetStreamingUrl() string {
	if x != nil {
		return x.StreamingUrl
	}
	return ""
}

func (x *ResumePlaybackResponse) GetResumedAt() *common.DateTime {
	if x != nil {
		return x.ResumedAt
	}
	return nil
}

// Stop playback request
type StopPlaybackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`           // Session ID
	StopPosition  int64                  `protobuf:"varint,3,opt,name=stop_position,json=stopPosition,proto3" json:"stop_position,omitempty"` // Position where stopped
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPlaybackRequest) Reset() {
	*x = StopPlaybackRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPlaybackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPlaybackRequest) ProtoMessage() {}

func (x *StopPlaybackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPlaybackRequest.ProtoReflect.Descriptor instead.
func (*StopPlaybackRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{14}
}

func (x *StopPlaybackRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *StopPlaybackRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StopPlaybackRequest) GetStopPosition() int64 {
	if x != nil {
		return x.StopPosition
	}
	return 0
}

// Stop playback response
type StopPlaybackResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	PlaybackStopped bool                   `protobuf:"varint,2,opt,name=playback_stopped,json=playbackStopped,proto3" json:"playback_stopped,omitempty"` // Whether playback was stopped
	StoppedPosition int64                  `protobuf:"varint,3,opt,name=stopped_position,json=stoppedPosition,proto3" json:"stopped_position,omitempty"` // Position where stopped
	StoppedAt       *common.DateTime       `protobuf:"bytes,4,opt,name=stopped_at,json=stoppedAt,proto3" json:"stopped_at,omitempty"`                    // When playback was stopped
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StopPlaybackResponse) Reset() {
	*x = StopPlaybackResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPlaybackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPlaybackResponse) ProtoMessage() {}

func (x *StopPlaybackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPlaybackResponse.ProtoReflect.Descriptor instead.
func (*StopPlaybackResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{15}
}

func (x *StopPlaybackResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *StopPlaybackResponse) GetPlaybackStopped() bool {
	if x != nil {
		return x.PlaybackStopped
	}
	return false
}

func (x *StopPlaybackResponse) GetStoppedPosition() int64 {
	if x != nil {
		return x.StoppedPosition
	}
	return 0
}

func (x *StopPlaybackResponse) GetStoppedAt() *common.DateTime {
	if x != nil {
		return x.StoppedAt
	}
	return nil
}

// Seek playback request
type SeekPlaybackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`           // Session ID
	SeekPosition  int64                  `protobuf:"varint,3,opt,name=seek_position,json=seekPosition,proto3" json:"seek_position,omitempty"` // Position to seek to
	SeekMode      string                 `protobuf:"bytes,4,opt,name=seek_mode,json=seekMode,proto3" json:"seek_mode,omitempty"`              // Seek mode (exact, keyframe)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeekPlaybackRequest) Reset() {
	*x = SeekPlaybackRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeekPlaybackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekPlaybackRequest) ProtoMessage() {}

func (x *SeekPlaybackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekPlaybackRequest.ProtoReflect.Descriptor instead.
func (*SeekPlaybackRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{16}
}

func (x *SeekPlaybackRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *SeekPlaybackRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SeekPlaybackRequest) GetSeekPosition() int64 {
	if x != nil {
		return x.SeekPosition
	}
	return 0
}

func (x *SeekPlaybackRequest) GetSeekMode() string {
	if x != nil {
		return x.SeekMode
	}
	return ""
}

// Seek playback response
type SeekPlaybackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	SeekCompleted bool                   `protobuf:"varint,2,opt,name=seek_completed,json=seekCompleted,proto3" json:"seek_completed,omitempty"` // Whether seek was completed
	NewPosition   int64                  `protobuf:"varint,3,opt,name=new_position,json=newPosition,proto3" json:"new_position,omitempty"`       // New position after seek
	StreamingUrl  string                 `protobuf:"bytes,4,opt,name=streaming_url,json=streamingUrl,proto3" json:"streaming_url,omitempty"`     // Updated streaming URL
	SeekedAt      *common.DateTime       `protobuf:"bytes,5,opt,name=seeked_at,json=seekedAt,proto3" json:"seeked_at,omitempty"`                 // When seek was completed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeekPlaybackResponse) Reset() {
	*x = SeekPlaybackResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeekPlaybackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekPlaybackResponse) ProtoMessage() {}

func (x *SeekPlaybackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekPlaybackResponse.ProtoReflect.Descriptor instead.
func (*SeekPlaybackResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{17}
}

func (x *SeekPlaybackResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *SeekPlaybackResponse) GetSeekCompleted() bool {
	if x != nil {
		return x.SeekCompleted
	}
	return false
}

func (x *SeekPlaybackResponse) GetNewPosition() int64 {
	if x != nil {
		return x.NewPosition
	}
	return 0
}

func (x *SeekPlaybackResponse) GetStreamingUrl() string {
	if x != nil {
		return x.StreamingUrl
	}
	return ""
}

func (x *SeekPlaybackResponse) GetSeekedAt() *common.DateTime {
	if x != nil {
		return x.SeekedAt
	}
	return nil
}

// Update playback progress request
type UpdatePlaybackProgressRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest     *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId       string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                        // Session ID
	CurrentPosition int64                  `protobuf:"varint,3,opt,name=current_position,json=currentPosition,proto3" json:"current_position,omitempty"`                                     // Current position in milliseconds
	PlaybackRate    float32                `protobuf:"fixed32,4,opt,name=playback_rate,json=playbackRate,proto3" json:"playback_rate,omitempty"`                                             // Current playback rate
	Quality         string                 `protobuf:"bytes,5,opt,name=quality,proto3" json:"quality,omitempty"`                                                                             // Current quality
	Metadata        map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional progress metadata
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdatePlaybackProgressRequest) Reset() {
	*x = UpdatePlaybackProgressRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaybackProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaybackProgressRequest) ProtoMessage() {}

func (x *UpdatePlaybackProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaybackProgressRequest.ProtoReflect.Descriptor instead.
func (*UpdatePlaybackProgressRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{18}
}

func (x *UpdatePlaybackProgressRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *UpdatePlaybackProgressRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UpdatePlaybackProgressRequest) GetCurrentPosition() int64 {
	if x != nil {
		return x.CurrentPosition
	}
	return 0
}

func (x *UpdatePlaybackProgressRequest) GetPlaybackRate() float32 {
	if x != nil {
		return x.PlaybackRate
	}
	return 0
}

func (x *UpdatePlaybackProgressRequest) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *UpdatePlaybackProgressRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Update playback progress response
type UpdatePlaybackProgressResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	ProgressUpdated bool                   `protobuf:"varint,2,opt,name=progress_updated,json=progressUpdated,proto3" json:"progress_updated,omitempty"` // Whether progress was updated
	UpdatedProgress *PlaybackProgress      `protobuf:"bytes,3,opt,name=updated_progress,json=updatedProgress,proto3" json:"updated_progress,omitempty"`  // Updated progress
	UpdatedAt       *common.DateTime       `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                    // When progress was updated
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdatePlaybackProgressResponse) Reset() {
	*x = UpdatePlaybackProgressResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePlaybackProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlaybackProgressResponse) ProtoMessage() {}

func (x *UpdatePlaybackProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlaybackProgressResponse.ProtoReflect.Descriptor instead.
func (*UpdatePlaybackProgressResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{19}
}

func (x *UpdatePlaybackProgressResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UpdatePlaybackProgressResponse) GetProgressUpdated() bool {
	if x != nil {
		return x.ProgressUpdated
	}
	return false
}

func (x *UpdatePlaybackProgressResponse) GetUpdatedProgress() *PlaybackProgress {
	if x != nil {
		return x.UpdatedProgress
	}
	return nil
}

func (x *UpdatePlaybackProgressResponse) GetUpdatedAt() *common.DateTime {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Get playback progress request
type GetPlaybackProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Session ID
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // User ID (optional, for cross-device sync)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaybackProgressRequest) Reset() {
	*x = GetPlaybackProgressRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackProgressRequest) ProtoMessage() {}

func (x *GetPlaybackProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackProgressRequest.ProtoReflect.Descriptor instead.
func (*GetPlaybackProgressRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{20}
}

func (x *GetPlaybackProgressRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetPlaybackProgressRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetPlaybackProgressRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Get playback progress response
type GetPlaybackProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Progress      *PlaybackProgress      `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"` // Current progress
	History       []*PlaybackProgress    `protobuf:"bytes,3,rep,name=history,proto3" json:"history,omitempty"`   // Progress history
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaybackProgressResponse) Reset() {
	*x = GetPlaybackProgressResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackProgressResponse) ProtoMessage() {}

func (x *GetPlaybackProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackProgressResponse.ProtoReflect.Descriptor instead.
func (*GetPlaybackProgressResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{21}
}

func (x *GetPlaybackProgressResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetPlaybackProgressResponse) GetProgress() *PlaybackProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *GetPlaybackProgressResponse) GetHistory() []*PlaybackProgress {
	if x != nil {
		return x.History
	}
	return nil
}

// Get playback history request
type GetPlaybackHistoryRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest       `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	UserId        string                    `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // User ID
	ContentId     string                    `protobuf:"bytes,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // Content ID (optional)
	StartDate     *common.DateTime          `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // Start date for history
	EndDate       *common.DateTime          `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // End date for history
	Pagination    *common.PaginationRequest `protobuf:"bytes,6,opt,name=pagination,proto3" json:"pagination,omitempty"`                // Pagination options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaybackHistoryRequest) Reset() {
	*x = GetPlaybackHistoryRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackHistoryRequest) ProtoMessage() {}

func (x *GetPlaybackHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetPlaybackHistoryRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{22}
}

func (x *GetPlaybackHistoryRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetPlaybackHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPlaybackHistoryRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *GetPlaybackHistoryRequest) GetStartDate() *common.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetPlaybackHistoryRequest) GetEndDate() *common.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetPlaybackHistoryRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Get playback history response
type GetPlaybackHistoryResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse       `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Sessions      []*PlaybackSession         `protobuf:"bytes,2,rep,name=sessions,proto3" json:"sessions,omitempty"`                        // Playback sessions
	Pagination    *common.PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`                    // Pagination information
	TotalCount    int64                      `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Total number of sessions
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaybackHistoryResponse) Reset() {
	*x = GetPlaybackHistoryResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackHistoryResponse) ProtoMessage() {}

func (x *GetPlaybackHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetPlaybackHistoryResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{23}
}

func (x *GetPlaybackHistoryResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetPlaybackHistoryResponse) GetSessions() []*PlaybackSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *GetPlaybackHistoryResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetPlaybackHistoryResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Get available qualities request
type GetAvailableQualitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	ContentId     string                 `protobuf:"bytes,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`       // Content ID
	DeviceType    string                 `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`    // Device type
	NetworkType   string                 `protobuf:"bytes,4,opt,name=network_type,json=networkType,proto3" json:"network_type,omitempty"` // Network type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableQualitiesRequest) Reset() {
	*x = GetAvailableQualitiesRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableQualitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableQualitiesRequest) ProtoMessage() {}

func (x *GetAvailableQualitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableQualitiesRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableQualitiesRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{24}
}

func (x *GetAvailableQualitiesRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetAvailableQualitiesRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *GetAvailableQualitiesRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *GetAvailableQualitiesRequest) GetNetworkType() string {
	if x != nil {
		return x.NetworkType
	}
	return ""
}

// Get available qualities response
type GetAvailableQualitiesResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse       *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Qualities          []*QualityOption       `protobuf:"bytes,2,rep,name=qualities,proto3" json:"qualities,omitempty"`                                             // Available quality options
	RecommendedQuality string                 `protobuf:"bytes,3,opt,name=recommended_quality,json=recommendedQuality,proto3" json:"recommended_quality,omitempty"` // Recommended quality
	AdaptationInfo     *QualityAdaptationInfo `protobuf:"bytes,4,opt,name=adaptation_info,json=adaptationInfo,proto3" json:"adaptation_info,omitempty"`             // Quality adaptation information
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetAvailableQualitiesResponse) Reset() {
	*x = GetAvailableQualitiesResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableQualitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableQualitiesResponse) ProtoMessage() {}

func (x *GetAvailableQualitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableQualitiesResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableQualitiesResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{25}
}

func (x *GetAvailableQualitiesResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetAvailableQualitiesResponse) GetQualities() []*QualityOption {
	if x != nil {
		return x.Qualities
	}
	return nil
}

func (x *GetAvailableQualitiesResponse) GetRecommendedQuality() string {
	if x != nil {
		return x.RecommendedQuality
	}
	return ""
}

func (x *GetAvailableQualitiesResponse) GetAdaptationInfo() *QualityAdaptationInfo {
	if x != nil {
		return x.AdaptationInfo
	}
	return nil
}

// Change playback quality request
type ChangePlaybackQualityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`    // Session ID
	NewQuality    string                 `protobuf:"bytes,3,opt,name=new_quality,json=newQuality,proto3" json:"new_quality,omitempty"` // New quality to switch to
	Adaptive      bool                   `protobuf:"varint,4,opt,name=adaptive,proto3" json:"adaptive,omitempty"`                      // Whether to use adaptive switching
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePlaybackQualityRequest) Reset() {
	*x = ChangePlaybackQualityRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePlaybackQualityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlaybackQualityRequest) ProtoMessage() {}

func (x *ChangePlaybackQualityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlaybackQualityRequest.ProtoReflect.Descriptor instead.
func (*ChangePlaybackQualityRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{26}
}

func (x *ChangePlaybackQualityRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *ChangePlaybackQualityRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ChangePlaybackQualityRequest) GetNewQuality() string {
	if x != nil {
		return x.NewQuality
	}
	return ""
}

func (x *ChangePlaybackQualityRequest) GetAdaptive() bool {
	if x != nil {
		return x.Adaptive
	}
	return false
}

// Change playback quality response
type ChangePlaybackQualityResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	QualityChanged  bool                   `protobuf:"varint,2,opt,name=quality_changed,json=qualityChanged,proto3" json:"quality_changed,omitempty"`     // Whether quality was changed
	NewStreamingUrl string                 `protobuf:"bytes,3,opt,name=new_streaming_url,json=newStreamingUrl,proto3" json:"new_streaming_url,omitempty"` // New streaming URL
	PreviousQuality string                 `protobuf:"bytes,4,opt,name=previous_quality,json=previousQuality,proto3" json:"previous_quality,omitempty"`   // Previous quality
	ChangedAt       *common.DateTime       `protobuf:"bytes,5,opt,name=changed_at,json=changedAt,proto3" json:"changed_at,omitempty"`                     // When quality was changed
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChangePlaybackQualityResponse) Reset() {
	*x = ChangePlaybackQualityResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePlaybackQualityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlaybackQualityResponse) ProtoMessage() {}

func (x *ChangePlaybackQualityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlaybackQualityResponse.ProtoReflect.Descriptor instead.
func (*ChangePlaybackQualityResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{27}
}

func (x *ChangePlaybackQualityResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *ChangePlaybackQualityResponse) GetQualityChanged() bool {
	if x != nil {
		return x.QualityChanged
	}
	return false
}

func (x *ChangePlaybackQualityResponse) GetNewStreamingUrl() string {
	if x != nil {
		return x.NewStreamingUrl
	}
	return ""
}

func (x *ChangePlaybackQualityResponse) GetPreviousQuality() string {
	if x != nil {
		return x.PreviousQuality
	}
	return ""
}

func (x *ChangePlaybackQualityResponse) GetChangedAt() *common.DateTime {
	if x != nil {
		return x.ChangedAt
	}
	return nil
}

// Get adaptive bitrate info request
type GetAdaptiveBitrateInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Session ID
	ContentId     string                 `protobuf:"bytes,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // Content ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdaptiveBitrateInfoRequest) Reset() {
	*x = GetAdaptiveBitrateInfoRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdaptiveBitrateInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdaptiveBitrateInfoRequest) ProtoMessage() {}

func (x *GetAdaptiveBitrateInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdaptiveBitrateInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAdaptiveBitrateInfoRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{28}
}

func (x *GetAdaptiveBitrateInfoRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetAdaptiveBitrateInfoRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetAdaptiveBitrateInfoRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

// Get adaptive bitrate info response
type GetAdaptiveBitrateInfoResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse     *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	AbrInfo          *AdaptiveBitrateInfo   `protobuf:"bytes,2,opt,name=abr_info,json=abrInfo,proto3" json:"abr_info,omitempty"`                            // Adaptive bitrate information
	Segments         []*QualitySegment      `protobuf:"bytes,3,rep,name=segments,proto3" json:"segments,omitempty"`                                         // Quality segments
	CurrentAlgorithm string                 `protobuf:"bytes,4,opt,name=current_algorithm,json=currentAlgorithm,proto3" json:"current_algorithm,omitempty"` // Current ABR algorithm
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetAdaptiveBitrateInfoResponse) Reset() {
	*x = GetAdaptiveBitrateInfoResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdaptiveBitrateInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdaptiveBitrateInfoResponse) ProtoMessage() {}

func (x *GetAdaptiveBitrateInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdaptiveBitrateInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAdaptiveBitrateInfoResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{29}
}

func (x *GetAdaptiveBitrateInfoResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetAdaptiveBitrateInfoResponse) GetAbrInfo() *AdaptiveBitrateInfo {
	if x != nil {
		return x.AbrInfo
	}
	return nil
}

func (x *GetAdaptiveBitrateInfoResponse) GetSegments() []*QualitySegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *GetAdaptiveBitrateInfoResponse) GetCurrentAlgorithm() string {
	if x != nil {
		return x.CurrentAlgorithm
	}
	return ""
}

// Get streaming URL request
type GetStreamingURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	ContentId     string                 `protobuf:"bytes,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                                    // Content ID
	Quality       string                 `protobuf:"bytes,3,opt,name=quality,proto3" json:"quality,omitempty"`                                                                         // Quality level
	SessionId     string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                    // Session ID (optional)
	Params        map[string]string      `protobuf:"bytes,5,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamingURLRequest) Reset() {
	*x = GetStreamingURLRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamingURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingURLRequest) ProtoMessage() {}

func (x *GetStreamingURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingURLRequest.ProtoReflect.Descriptor instead.
func (*GetStreamingURLRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{30}
}

func (x *GetStreamingURLRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetStreamingURLRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *GetStreamingURLRequest) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *GetStreamingURLRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetStreamingURLRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

// Get streaming URL response
type GetStreamingURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	StreamingUrl  string                 `protobuf:"bytes,2,opt,name=streaming_url,json=streamingUrl,proto3" json:"streaming_url,omitempty"`                                             // Streaming URL
	ManifestUrl   string                 `protobuf:"bytes,3,opt,name=manifest_url,json=manifestUrl,proto3" json:"manifest_url,omitempty"`                                                // Manifest URL (for HLS/DASH)
	ExpiresAt     *common.DateTime       `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                                                      // When URL expires
	Headers       map[string]string      `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Required headers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamingURLResponse) Reset() {
	*x = GetStreamingURLResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamingURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingURLResponse) ProtoMessage() {}

func (x *GetStreamingURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingURLResponse.ProtoReflect.Descriptor instead.
func (*GetStreamingURLResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{31}
}

func (x *GetStreamingURLResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetStreamingURLResponse) GetStreamingUrl() string {
	if x != nil {
		return x.StreamingUrl
	}
	return ""
}

func (x *GetStreamingURLResponse) GetManifestUrl() string {
	if x != nil {
		return x.ManifestUrl
	}
	return ""
}

func (x *GetStreamingURLResponse) GetExpiresAt() *common.DateTime {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *GetStreamingURLResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

// Validate streaming access request
type ValidateStreamingAccessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // User ID
	ContentId     string                 `protobuf:"bytes,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // Content ID
	SessionId     string                 `protobuf:"bytes,4,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Session ID
	DeviceId      string                 `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`    // Device ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateStreamingAccessRequest) Reset() {
	*x = ValidateStreamingAccessRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateStreamingAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateStreamingAccessRequest) ProtoMessage() {}

func (x *ValidateStreamingAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateStreamingAccessRequest.ProtoReflect.Descriptor instead.
func (*ValidateStreamingAccessRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{32}
}

func (x *ValidateStreamingAccessRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *ValidateStreamingAccessRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ValidateStreamingAccessRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *ValidateStreamingAccessRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ValidateStreamingAccessRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// Validate streaming access response
type ValidateStreamingAccessResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	AccessGranted   bool                   `protobuf:"varint,2,opt,name=access_granted,json=accessGranted,proto3" json:"access_granted,omitempty"`        // Whether access is granted
	AccessLevel     string                 `protobuf:"bytes,3,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"`               // Access level (free, premium, etc.)
	Restrictions    []string               `protobuf:"bytes,4,rep,name=restrictions,proto3" json:"restrictions,omitempty"`                                // Any access restrictions
	AccessExpiresAt *common.DateTime       `protobuf:"bytes,5,opt,name=access_expires_at,json=accessExpiresAt,proto3" json:"access_expires_at,omitempty"` // When access expires
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ValidateStreamingAccessResponse) Reset() {
	*x = ValidateStreamingAccessResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateStreamingAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateStreamingAccessResponse) ProtoMessage() {}

func (x *ValidateStreamingAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateStreamingAccessResponse.ProtoReflect.Descriptor instead.
func (*ValidateStreamingAccessResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{33}
}

func (x *ValidateStreamingAccessResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *ValidateStreamingAccessResponse) GetAccessGranted() bool {
	if x != nil {
		return x.AccessGranted
	}
	return false
}

func (x *ValidateStreamingAccessResponse) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

func (x *ValidateStreamingAccessResponse) GetRestrictions() []string {
	if x != nil {
		return x.Restrictions
	}
	return nil
}

func (x *ValidateStreamingAccessResponse) GetAccessExpiresAt() *common.DateTime {
	if x != nil {
		return x.AccessExpiresAt
	}
	return nil
}

// Get streaming metrics request
type GetStreamingMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`    // Session ID
	MetricType    string                 `protobuf:"bytes,3,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"` // Type of metrics
	StartTime     *common.DateTime       `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`    // Start time for metrics
	EndTime       *common.DateTime       `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`          // End time for metrics
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamingMetricsRequest) Reset() {
	*x = GetStreamingMetricsRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamingMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingMetricsRequest) ProtoMessage() {}

func (x *GetStreamingMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetStreamingMetricsRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{34}
}

func (x *GetStreamingMetricsRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetStreamingMetricsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetStreamingMetricsRequest) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *GetStreamingMetricsRequest) GetStartTime() *common.DateTime {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetStreamingMetricsRequest) GetEndTime() *common.DateTime {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Get streaming metrics response
type GetStreamingMetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Metrics       *StreamingMetrics      `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`                                  // Streaming metrics
	DataPoints    []*MetricDataPoint     `protobuf:"bytes,3,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`          // Detailed metric data
	MetricsFormat string                 `protobuf:"bytes,4,opt,name=metrics_format,json=metricsFormat,proto3" json:"metrics_format,omitempty"` // Format of metrics data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStreamingMetricsResponse) Reset() {
	*x = GetStreamingMetricsResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamingMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingMetricsResponse) ProtoMessage() {}

func (x *GetStreamingMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetStreamingMetricsResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{35}
}

func (x *GetStreamingMetricsResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetStreamingMetricsResponse) GetMetrics() *StreamingMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetStreamingMetricsResponse) GetDataPoints() []*MetricDataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *GetStreamingMetricsResponse) GetMetricsFormat() string {
	if x != nil {
		return x.MetricsFormat
	}
	return ""
}

// Track playback event request
type TrackPlaybackEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                                           // Session ID
	EventType     string                 `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`                                                                           // Event type
	EventPosition int64                  `protobuf:"varint,4,opt,name=event_position,json=eventPosition,proto3" json:"event_position,omitempty"`                                                              // Position when event occurred
	EventData     map[string]string      `protobuf:"bytes,5,rep,name=event_data,json=eventData,proto3" json:"event_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Event-specific data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackPlaybackEventRequest) Reset() {
	*x = TrackPlaybackEventRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackPlaybackEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPlaybackEventRequest) ProtoMessage() {}

func (x *TrackPlaybackEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPlaybackEventRequest.ProtoReflect.Descriptor instead.
func (*TrackPlaybackEventRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{36}
}

func (x *TrackPlaybackEventRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *TrackPlaybackEventRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *TrackPlaybackEventRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *TrackPlaybackEventRequest) GetEventPosition() int64 {
	if x != nil {
		return x.EventPosition
	}
	return 0
}

func (x *TrackPlaybackEventRequest) GetEventData() map[string]string {
	if x != nil {
		return x.EventData
	}
	return nil
}

// Track playback event response
type TrackPlaybackEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	EventTracked  bool                   `protobuf:"varint,2,opt,name=event_tracked,json=eventTracked,proto3" json:"event_tracked,omitempty"` // Whether event was tracked
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                 // Event ID
	TrackedAt     *common.DateTime       `protobuf:"bytes,4,opt,name=tracked_at,json=trackedAt,proto3" json:"tracked_at,omitempty"`           // When event was tracked
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackPlaybackEventResponse) Reset() {
	*x = TrackPlaybackEventResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackPlaybackEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPlaybackEventResponse) ProtoMessage() {}

func (x *TrackPlaybackEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPlaybackEventResponse.ProtoReflect.Descriptor instead.
func (*TrackPlaybackEventResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{37}
}

func (x *TrackPlaybackEventResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *TrackPlaybackEventResponse) GetEventTracked() bool {
	if x != nil {
		return x.EventTracked
	}
	return false
}

func (x *TrackPlaybackEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TrackPlaybackEventResponse) GetTrackedAt() *common.DateTime {
	if x != nil {
		return x.TrackedAt
	}
	return nil
}

// Get playback analytics request
type GetPlaybackAnalyticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // User ID (optional)
	ContentId     string                 `protobuf:"bytes,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`       // Content ID (optional)
	StartDate     *common.DateTime       `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`       // Start date
	EndDate       *common.DateTime       `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`             // End date
	MetricTypes   []string               `protobuf:"bytes,6,rep,name=metric_types,json=metricTypes,proto3" json:"metric_types,omitempty"` // Types of metrics
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaybackAnalyticsRequest) Reset() {
	*x = GetPlaybackAnalyticsRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackAnalyticsRequest) ProtoMessage() {}

func (x *GetPlaybackAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetPlaybackAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{38}
}

func (x *GetPlaybackAnalyticsRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetPlaybackAnalyticsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetPlaybackAnalyticsRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *GetPlaybackAnalyticsRequest) GetStartDate() *common.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetPlaybackAnalyticsRequest) GetEndDate() *common.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetPlaybackAnalyticsRequest) GetMetricTypes() []string {
	if x != nil {
		return x.MetricTypes
	}
	return nil
}

// Get playback analytics response
type GetPlaybackAnalyticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Metrics       []*AnalyticsMetric     `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`                            // Analytics metrics
	Insights      *PlaybackInsights      `protobuf:"bytes,3,opt,name=insights,proto3" json:"insights,omitempty"`                          // Playback insights
	GeneratedAt   *common.DateTime       `protobuf:"bytes,4,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"` // When analytics were generated
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlaybackAnalyticsResponse) Reset() {
	*x = GetPlaybackAnalyticsResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlaybackAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaybackAnalyticsResponse) ProtoMessage() {}

func (x *GetPlaybackAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaybackAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*GetPlaybackAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{39}
}

func (x *GetPlaybackAnalyticsResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetPlaybackAnalyticsResponse) GetMetrics() []*AnalyticsMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetPlaybackAnalyticsResponse) GetInsights() *PlaybackInsights {
	if x != nil {
		return x.Insights
	}
	return nil
}

func (x *GetPlaybackAnalyticsResponse) GetGeneratedAt() *common.DateTime {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

// Get streaming performance request
type GetStreamingPerformanceRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest     *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	SessionId       string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                   // Session ID
	PerformanceType string                 `protobuf:"bytes,3,opt,name=performance_type,json=performanceType,proto3" json:"performance_type,omitempty"` // Type of performance metrics
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetStreamingPerformanceRequest) Reset() {
	*x = GetStreamingPerformanceRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamingPerformanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingPerformanceRequest) ProtoMessage() {}

func (x *GetStreamingPerformanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingPerformanceRequest.ProtoReflect.Descriptor instead.
func (*GetStreamingPerformanceRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{40}
}

func (x *GetStreamingPerformanceRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetStreamingPerformanceRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetStreamingPerformanceRequest) GetPerformanceType() string {
	if x != nil {
		return x.PerformanceType
	}
	return ""
}

// Get streaming performance response
type GetStreamingPerformanceResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse     *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Performance      *StreamingPerformance  `protobuf:"bytes,2,opt,name=performance,proto3" json:"performance,omitempty"`                                   // Streaming performance data
	Issues           []*PerformanceIssue    `protobuf:"bytes,3,rep,name=issues,proto3" json:"issues,omitempty"`                                             // Performance issues detected
	PerformanceGrade string                 `protobuf:"bytes,4,opt,name=performance_grade,json=performanceGrade,proto3" json:"performance_grade,omitempty"` // Overall performance grade
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetStreamingPerformanceResponse) Reset() {
	*x = GetStreamingPerformanceResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStreamingPerformanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamingPerformanceResponse) ProtoMessage() {}

func (x *GetStreamingPerformanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamingPerformanceResponse.ProtoReflect.Descriptor instead.
func (*GetStreamingPerformanceResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{41}
}

func (x *GetStreamingPerformanceResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetStreamingPerformanceResponse) GetPerformance() *StreamingPerformance {
	if x != nil {
		return x.Performance
	}
	return nil
}

func (x *GetStreamingPerformanceResponse) GetIssues() []*PerformanceIssue {
	if x != nil {
		return x.Issues
	}
	return nil
}

func (x *GetStreamingPerformanceResponse) GetPerformanceGrade() string {
	if x != nil {
		return x.PerformanceGrade
	}
	return ""
}

// Get DRM license request
type GetDRMLicenseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	ContentId     string                 `protobuf:"bytes,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // Content ID
	DrmType       string                 `protobuf:"bytes,3,opt,name=drm_type,json=drmType,proto3" json:"drm_type,omitempty"`       // DRM type (Widevine, PlayReady, etc.)
	DeviceId      string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`    // Device ID
	SessionId     string                 `protobuf:"bytes,5,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Session ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDRMLicenseRequest) Reset() {
	*x = GetDRMLicenseRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDRMLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDRMLicenseRequest) ProtoMessage() {}

func (x *GetDRMLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDRMLicenseRequest.ProtoReflect.Descriptor instead.
func (*GetDRMLicenseRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{42}
}

func (x *GetDRMLicenseRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetDRMLicenseRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *GetDRMLicenseRequest) GetDrmType() string {
	if x != nil {
		return x.DrmType
	}
	return ""
}

func (x *GetDRMLicenseRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetDRMLicenseRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// Get DRM license response
type GetDRMLicenseResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse     *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	LicenseUrl       string                 `protobuf:"bytes,2,opt,name=license_url,json=licenseUrl,proto3" json:"license_url,omitempty"`                                                                                    // License server URL
	LicenseToken     string                 `protobuf:"bytes,3,opt,name=license_token,json=licenseToken,proto3" json:"license_token,omitempty"`                                                                              // License token
	LicenseExpiresAt *common.DateTime       `protobuf:"bytes,4,opt,name=license_expires_at,json=licenseExpiresAt,proto3" json:"license_expires_at,omitempty"`                                                                // When license expires
	LicenseParams    map[string]string      `protobuf:"bytes,5,rep,name=license_params,json=licenseParams,proto3" json:"license_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // License parameters
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetDRMLicenseResponse) Reset() {
	*x = GetDRMLicenseResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDRMLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDRMLicenseResponse) ProtoMessage() {}

func (x *GetDRMLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDRMLicenseResponse.ProtoReflect.Descriptor instead.
func (*GetDRMLicenseResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{43}
}

func (x *GetDRMLicenseResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetDRMLicenseResponse) GetLicenseUrl() string {
	if x != nil {
		return x.LicenseUrl
	}
	return ""
}

func (x *GetDRMLicenseResponse) GetLicenseToken() string {
	if x != nil {
		return x.LicenseToken
	}
	return ""
}

func (x *GetDRMLicenseResponse) GetLicenseExpiresAt() *common.DateTime {
	if x != nil {
		return x.LicenseExpiresAt
	}
	return nil
}

func (x *GetDRMLicenseResponse) GetLicenseParams() map[string]string {
	if x != nil {
		return x.LicenseParams
	}
	return nil
}

// Validate DRM token request
type ValidateDRMTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	DrmToken      string                 `protobuf:"bytes,2,opt,name=drm_token,json=drmToken,proto3" json:"drm_token,omitempty"`    // DRM token to validate
	DeviceId      string                 `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`    // Device ID
	ContentId     string                 `protobuf:"bytes,4,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"` // Content ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateDRMTokenRequest) Reset() {
	*x = ValidateDRMTokenRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateDRMTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDRMTokenRequest) ProtoMessage() {}

func (x *ValidateDRMTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDRMTokenRequest.ProtoReflect.Descriptor instead.
func (*ValidateDRMTokenRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{44}
}

func (x *ValidateDRMTokenRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *ValidateDRMTokenRequest) GetDrmToken() string {
	if x != nil {
		return x.DrmToken
	}
	return ""
}

func (x *ValidateDRMTokenRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ValidateDRMTokenRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

// Validate DRM token response
type ValidateDRMTokenResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse   *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	TokenValid     bool                   `protobuf:"varint,2,opt,name=token_valid,json=tokenValid,proto3" json:"token_valid,omitempty"`              // Whether token is valid
	TokenType      string                 `protobuf:"bytes,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`                  // Type of token
	TokenExpiresAt *common.DateTime       `protobuf:"bytes,4,opt,name=token_expires_at,json=tokenExpiresAt,proto3" json:"token_expires_at,omitempty"` // When token expires
	Permissions    []string               `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`                               // Token permissions
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ValidateDRMTokenResponse) Reset() {
	*x = ValidateDRMTokenResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateDRMTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateDRMTokenResponse) ProtoMessage() {}

func (x *ValidateDRMTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateDRMTokenResponse.ProtoReflect.Descriptor instead.
func (*ValidateDRMTokenResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{45}
}

func (x *ValidateDRMTokenResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *ValidateDRMTokenResponse) GetTokenValid() bool {
	if x != nil {
		return x.TokenValid
	}
	return false
}

func (x *ValidateDRMTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *ValidateDRMTokenResponse) GetTokenExpiresAt() *common.DateTime {
	if x != nil {
		return x.TokenExpiresAt
	}
	return nil
}

func (x *ValidateDRMTokenResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// Get content protection request
type GetContentProtectionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest    *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	ContentId      string                 `protobuf:"bytes,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                // Content ID
	ProtectionType string                 `protobuf:"bytes,3,opt,name=protection_type,json=protectionType,proto3" json:"protection_type,omitempty"` // Type of protection
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetContentProtectionRequest) Reset() {
	*x = GetContentProtectionRequest{}
	mi := &file_playback_playback_req_res_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContentProtectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentProtectionRequest) ProtoMessage() {}

func (x *GetContentProtectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentProtectionRequest.ProtoReflect.Descriptor instead.
func (*GetContentProtectionRequest) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{46}
}

func (x *GetContentProtectionRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetContentProtectionRequest) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *GetContentProtectionRequest) GetProtectionType() string {
	if x != nil {
		return x.ProtectionType
	}
	return ""
}

// Get content protection response
type GetContentProtectionResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse      *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Protection        *ContentProtection     `protobuf:"bytes,2,opt,name=protection,proto3" json:"protection,omitempty"`                                          // Content protection information
	SupportedDrmTypes []string               `protobuf:"bytes,3,rep,name=supported_drm_types,json=supportedDrmTypes,proto3" json:"supported_drm_types,omitempty"` // Supported DRM types
	ProtectionLevel   string                 `protobuf:"bytes,4,opt,name=protection_level,json=protectionLevel,proto3" json:"protection_level,omitempty"`         // Protection level
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetContentProtectionResponse) Reset() {
	*x = GetContentProtectionResponse{}
	mi := &file_playback_playback_req_res_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContentProtectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentProtectionResponse) ProtoMessage() {}

func (x *GetContentProtectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentProtectionResponse.ProtoReflect.Descriptor instead.
func (*GetContentProtectionResponse) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{47}
}

func (x *GetContentProtectionResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetContentProtectionResponse) GetProtection() *ContentProtection {
	if x != nil {
		return x.Protection
	}
	return nil
}

func (x *GetContentProtectionResponse) GetSupportedDrmTypes() []string {
	if x != nil {
		return x.SupportedDrmTypes
	}
	return nil
}

func (x *GetContentProtectionResponse) GetProtectionLevel() string {
	if x != nil {
		return x.ProtectionLevel
	}
	return ""
}

// Playback session
type PlaybackSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                         // Unique session ID
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                  // User ID
	ContentId     string                 `protobuf:"bytes,3,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                                         // Content ID
	DeviceId      string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                                                            // Device ID
	ClientType    string                 `protobuf:"bytes,5,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`                                                      // Client type
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                                                                // Session status
	Quality       string                 `protobuf:"bytes,7,opt,name=quality,proto3" json:"quality,omitempty"`                                                                              // Current quality
	CreatedAt     *common.DateTime       `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                         // When session was created
	LastUpdated   *common.DateTime       `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`                                                   // When session was last updated
	ExpiresAt     *common.DateTime       `protobuf:"bytes,10,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                                                        // When session expires
	Metadata      map[string]string      `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Session metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaybackSession) Reset() {
	*x = PlaybackSession{}
	mi := &file_playback_playback_req_res_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackSession) ProtoMessage() {}

func (x *PlaybackSession) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackSession.ProtoReflect.Descriptor instead.
func (*PlaybackSession) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{48}
}

func (x *PlaybackSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PlaybackSession) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlaybackSession) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *PlaybackSession) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PlaybackSession) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *PlaybackSession) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PlaybackSession) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *PlaybackSession) GetCreatedAt() *common.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PlaybackSession) GetLastUpdated() *common.DateTime {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *PlaybackSession) GetExpiresAt() *common.DateTime {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *PlaybackSession) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Playback progress
type PlaybackProgress struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SessionId       string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                                                        // Session ID
	CurrentPosition int64                  `protobuf:"varint,2,opt,name=current_position,json=currentPosition,proto3" json:"current_position,omitempty"`                                     // Current position in milliseconds
	TotalDuration   int64                  `protobuf:"varint,3,opt,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty"`                                           // Total duration in milliseconds
	PlaybackRate    float32                `protobuf:"fixed32,4,opt,name=playback_rate,json=playbackRate,proto3" json:"playback_rate,omitempty"`                                             // Current playback rate
	Quality         string                 `protobuf:"bytes,5,opt,name=quality,proto3" json:"quality,omitempty"`                                                                             // Current quality
	Status          string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                                                               // Playback status
	LastUpdated     *common.DateTime       `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`                                                  // When progress was last updated
	Metadata        map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Progress metadata
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PlaybackProgress) Reset() {
	*x = PlaybackProgress{}
	mi := &file_playback_playback_req_res_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackProgress) ProtoMessage() {}

func (x *PlaybackProgress) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackProgress.ProtoReflect.Descriptor instead.
func (*PlaybackProgress) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{49}
}

func (x *PlaybackProgress) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *PlaybackProgress) GetCurrentPosition() int64 {
	if x != nil {
		return x.CurrentPosition
	}
	return 0
}

func (x *PlaybackProgress) GetTotalDuration() int64 {
	if x != nil {
		return x.TotalDuration
	}
	return 0
}

func (x *PlaybackProgress) GetPlaybackRate() float32 {
	if x != nil {
		return x.PlaybackRate
	}
	return 0
}

func (x *PlaybackProgress) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *PlaybackProgress) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PlaybackProgress) GetLastUpdated() *common.DateTime {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *PlaybackProgress) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Streaming metrics
type StreamingMetrics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SessionId        string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                        // Session ID
	Bitrate          float32                `protobuf:"fixed32,2,opt,name=bitrate,proto3" json:"bitrate,omitempty"`                                           // Current bitrate
	Framerate        float32                `protobuf:"fixed32,3,opt,name=framerate,proto3" json:"framerate,omitempty"`                                       // Current framerate
	BufferLevel      float32                `protobuf:"fixed32,4,opt,name=buffer_level,json=bufferLevel,proto3" json:"buffer_level,omitempty"`                // Buffer level
	NetworkBandwidth float32                `protobuf:"fixed32,5,opt,name=network_bandwidth,json=networkBandwidth,proto3" json:"network_bandwidth,omitempty"` // Network bandwidth
	DroppedFrames    int32                  `protobuf:"varint,6,opt,name=dropped_frames,json=droppedFrames,proto3" json:"dropped_frames,omitempty"`           // Number of dropped frames
	QualitySwitches  int32                  `protobuf:"varint,7,opt,name=quality_switches,json=qualitySwitches,proto3" json:"quality_switches,omitempty"`     // Number of quality switches
	MetricsTime      *common.DateTime       `protobuf:"bytes,8,opt,name=metrics_time,json=metricsTime,proto3" json:"metrics_time,omitempty"`                  // When metrics were collected
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StreamingMetrics) Reset() {
	*x = StreamingMetrics{}
	mi := &file_playback_playback_req_res_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingMetrics) ProtoMessage() {}

func (x *StreamingMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingMetrics.ProtoReflect.Descriptor instead.
func (*StreamingMetrics) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{50}
}

func (x *StreamingMetrics) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StreamingMetrics) GetBitrate() float32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *StreamingMetrics) GetFramerate() float32 {
	if x != nil {
		return x.Framerate
	}
	return 0
}

func (x *StreamingMetrics) GetBufferLevel() float32 {
	if x != nil {
		return x.BufferLevel
	}
	return 0
}

func (x *StreamingMetrics) GetNetworkBandwidth() float32 {
	if x != nil {
		return x.NetworkBandwidth
	}
	return 0
}

func (x *StreamingMetrics) GetDroppedFrames() int32 {
	if x != nil {
		return x.DroppedFrames
	}
	return 0
}

func (x *StreamingMetrics) GetQualitySwitches() int32 {
	if x != nil {
		return x.QualitySwitches
	}
	return 0
}

func (x *StreamingMetrics) GetMetricsTime() *common.DateTime {
	if x != nil {
		return x.MetricsTime
	}
	return nil
}

// Quality option
type QualityOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QualityName   string                 `protobuf:"bytes,1,opt,name=quality_name,json=qualityName,proto3" json:"quality_name,omitempty"`    // Quality name (e.g., "1080p", "720p")
	Bitrate       int32                  `protobuf:"varint,2,opt,name=bitrate,proto3" json:"bitrate,omitempty"`                              // Bitrate in kbps
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`                                  // Video width
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`                                // Video height
	Codec         string                 `protobuf:"bytes,5,opt,name=codec,proto3" json:"codec,omitempty"`                                   // Video codec
	Available     bool                   `protobuf:"varint,6,opt,name=available,proto3" json:"available,omitempty"`                          // Whether quality is available
	StreamingUrl  string                 `protobuf:"bytes,7,opt,name=streaming_url,json=streamingUrl,proto3" json:"streaming_url,omitempty"` // Streaming URL for this quality
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QualityOption) Reset() {
	*x = QualityOption{}
	mi := &file_playback_playback_req_res_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityOption) ProtoMessage() {}

func (x *QualityOption) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityOption.ProtoReflect.Descriptor instead.
func (*QualityOption) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{51}
}

func (x *QualityOption) GetQualityName() string {
	if x != nil {
		return x.QualityName
	}
	return ""
}

func (x *QualityOption) GetBitrate() int32 {
	if x != nil {
		return x.Bitrate
	}
	return 0
}

func (x *QualityOption) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *QualityOption) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *QualityOption) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *QualityOption) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *QualityOption) GetStreamingUrl() string {
	if x != nil {
		return x.StreamingUrl
	}
	return ""
}

// Quality adaptation info
type QualityAdaptationInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Algorithm       string                 `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`                                    // Adaptation algorithm
	TargetBuffer    float32                `protobuf:"fixed32,2,opt,name=target_buffer,json=targetBuffer,proto3" json:"target_buffer,omitempty"`        // Target buffer level
	MinBuffer       float32                `protobuf:"fixed32,3,opt,name=min_buffer,json=minBuffer,proto3" json:"min_buffer,omitempty"`                 // Minimum buffer level
	MaxBuffer       float32                `protobuf:"fixed32,4,opt,name=max_buffer,json=maxBuffer,proto3" json:"max_buffer,omitempty"`                 // Maximum buffer level
	AdaptationRules []string               `protobuf:"bytes,5,rep,name=adaptation_rules,json=adaptationRules,proto3" json:"adaptation_rules,omitempty"` // Adaptation rules
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QualityAdaptationInfo) Reset() {
	*x = QualityAdaptationInfo{}
	mi := &file_playback_playback_req_res_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualityAdaptationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualityAdaptationInfo) ProtoMessage() {}

func (x *QualityAdaptationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualityAdaptationInfo.ProtoReflect.Descriptor instead.
func (*QualityAdaptationInfo) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{52}
}

func (x *QualityAdaptationInfo) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *QualityAdaptationInfo) GetTargetBuffer() float32 {
	if x != nil {
		return x.TargetBuffer
	}
	return 0
}

func (x *QualityAdaptationInfo) GetMinBuffer() float32 {
	if x != nil {
		return x.MinBuffer
	}
	return 0
}

func (x *QualityAdaptationInfo) GetMaxBuffer() float32 {
	if x != nil {
		return x.MaxBuffer
	}
	return 0
}

func (x *QualityAdaptationInfo) GetAdaptationRules() []string {
	if x != nil {
		return x.AdaptationRules
	}
	return nil
}

// Quality segment
type QualitySegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SegmentNumber int32                  `protobuf:"varint,1,opt,name=segment_number,json=segmentNumber,proto3" json:"segment_number,omitempty"`                                           // Segment number
	Quality       string                 `protobuf:"bytes,2,opt,name=quality,proto3" json:"quality,omitempty"`                                                                             // Quality of segment
	Duration      int64                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`                                                                          // Segment duration
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                                                                                     // Segment URL
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Segment metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QualitySegment) Reset() {
	*x = QualitySegment{}
	mi := &file_playback_playback_req_res_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QualitySegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QualitySegment) ProtoMessage() {}

func (x *QualitySegment) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QualitySegment.ProtoReflect.Descriptor instead.
func (*QualitySegment) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{53}
}

func (x *QualitySegment) GetSegmentNumber() int32 {
	if x != nil {
		return x.SegmentNumber
	}
	return 0
}

func (x *QualitySegment) GetQuality() string {
	if x != nil {
		return x.Quality
	}
	return ""
}

func (x *QualitySegment) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *QualitySegment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *QualitySegment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Adaptive bitrate info
type AdaptiveBitrateInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ContentId           string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                               // Content ID
	AvailableQualities  []string               `protobuf:"bytes,2,rep,name=available_qualities,json=availableQualities,proto3" json:"available_qualities,omitempty"`    // Available qualities
	CurrentQuality      string                 `protobuf:"bytes,3,opt,name=current_quality,json=currentQuality,proto3" json:"current_quality,omitempty"`                // Current quality
	BufferLevel         float32                `protobuf:"fixed32,4,opt,name=buffer_level,json=bufferLevel,proto3" json:"buffer_level,omitempty"`                       // Current buffer level
	AdaptationAlgorithm string                 `protobuf:"bytes,5,opt,name=adaptation_algorithm,json=adaptationAlgorithm,proto3" json:"adaptation_algorithm,omitempty"` // Current adaptation algorithm
	Segments            []*QualitySegment      `protobuf:"bytes,6,rep,name=segments,proto3" json:"segments,omitempty"`                                                  // Quality segments
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AdaptiveBitrateInfo) Reset() {
	*x = AdaptiveBitrateInfo{}
	mi := &file_playback_playback_req_res_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdaptiveBitrateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdaptiveBitrateInfo) ProtoMessage() {}

func (x *AdaptiveBitrateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdaptiveBitrateInfo.ProtoReflect.Descriptor instead.
func (*AdaptiveBitrateInfo) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{54}
}

func (x *AdaptiveBitrateInfo) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *AdaptiveBitrateInfo) GetAvailableQualities() []string {
	if x != nil {
		return x.AvailableQualities
	}
	return nil
}

func (x *AdaptiveBitrateInfo) GetCurrentQuality() string {
	if x != nil {
		return x.CurrentQuality
	}
	return ""
}

func (x *AdaptiveBitrateInfo) GetBufferLevel() float32 {
	if x != nil {
		return x.BufferLevel
	}
	return 0
}

func (x *AdaptiveBitrateInfo) GetAdaptationAlgorithm() string {
	if x != nil {
		return x.AdaptationAlgorithm
	}
	return ""
}

func (x *AdaptiveBitrateInfo) GetSegments() []*QualitySegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

// Metric data point
type MetricDataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *common.DateTime       `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                             // Timestamp
	MetricName    string                 `protobuf:"bytes,2,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`                                                         // Metric name
	MetricValue   float32                `protobuf:"fixed32,3,opt,name=metric_value,json=metricValue,proto3" json:"metric_value,omitempty"`                                                    // Metric value
	MetricUnit    string                 `protobuf:"bytes,4,opt,name=metric_unit,json=metricUnit,proto3" json:"metric_unit,omitempty"`                                                         // Metric unit
	Dimensions    map[string]string      `protobuf:"bytes,5,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Metric dimensions
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricDataPoint) Reset() {
	*x = MetricDataPoint{}
	mi := &file_playback_playback_req_res_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDataPoint) ProtoMessage() {}

func (x *MetricDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDataPoint.ProtoReflect.Descriptor instead.
func (*MetricDataPoint) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{55}
}

func (x *MetricDataPoint) GetTimestamp() *common.DateTime {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricDataPoint) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *MetricDataPoint) GetMetricValue() float32 {
	if x != nil {
		return x.MetricValue
	}
	return 0
}

func (x *MetricDataPoint) GetMetricUnit() string {
	if x != nil {
		return x.MetricUnit
	}
	return ""
}

func (x *MetricDataPoint) GetDimensions() map[string]string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

// Analytics metric
type AnalyticsMetric struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MetricName       string                 `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`                                                         // Metric name
	MetricValue      float32                `protobuf:"fixed32,2,opt,name=metric_value,json=metricValue,proto3" json:"metric_value,omitempty"`                                                    // Metric value
	MetricUnit       string                 `protobuf:"bytes,3,opt,name=metric_unit,json=metricUnit,proto3" json:"metric_unit,omitempty"`                                                         // Metric unit
	MetricDate       *common.DateTime       `protobuf:"bytes,4,opt,name=metric_date,json=metricDate,proto3" json:"metric_date,omitempty"`                                                         // Date of metric
	AggregationLevel string                 `protobuf:"bytes,5,opt,name=aggregation_level,json=aggregationLevel,proto3" json:"aggregation_level,omitempty"`                                       // Aggregation level
	Dimensions       map[string]string      `protobuf:"bytes,6,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Metric dimensions
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AnalyticsMetric) Reset() {
	*x = AnalyticsMetric{}
	mi := &file_playback_playback_req_res_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyticsMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyticsMetric) ProtoMessage() {}

func (x *AnalyticsMetric) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyticsMetric.ProtoReflect.Descriptor instead.
func (*AnalyticsMetric) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{56}
}

func (x *AnalyticsMetric) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *AnalyticsMetric) GetMetricValue() float32 {
	if x != nil {
		return x.MetricValue
	}
	return 0
}

func (x *AnalyticsMetric) GetMetricUnit() string {
	if x != nil {
		return x.MetricUnit
	}
	return ""
}

func (x *AnalyticsMetric) GetMetricDate() *common.DateTime {
	if x != nil {
		return x.MetricDate
	}
	return nil
}

func (x *AnalyticsMetric) GetAggregationLevel() string {
	if x != nil {
		return x.AggregationLevel
	}
	return ""
}

func (x *AnalyticsMetric) GetDimensions() map[string]string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

// Playback insights
type PlaybackInsights struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                     // User ID
	AvgWatchTime       float32                `protobuf:"fixed32,2,opt,name=avg_watch_time,json=avgWatchTime,proto3" json:"avg_watch_time,omitempty"`               // Average watch time
	CompletionRate     float32                `protobuf:"fixed32,3,opt,name=completion_rate,json=completionRate,proto3" json:"completion_rate,omitempty"`           // Content completion rate
	PreferredQualities []string               `protobuf:"bytes,4,rep,name=preferred_qualities,json=preferredQualities,proto3" json:"preferred_qualities,omitempty"` // Preferred quality levels
	PreferredGenres    []string               `protobuf:"bytes,5,rep,name=preferred_genres,json=preferredGenres,proto3" json:"preferred_genres,omitempty"`          // Preferred content genres
	ViewingPattern     string                 `protobuf:"bytes,6,opt,name=viewing_pattern,json=viewingPattern,proto3" json:"viewing_pattern,omitempty"`             // Viewing pattern (binge, casual, etc.)
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PlaybackInsights) Reset() {
	*x = PlaybackInsights{}
	mi := &file_playback_playback_req_res_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaybackInsights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackInsights) ProtoMessage() {}

func (x *PlaybackInsights) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackInsights.ProtoReflect.Descriptor instead.
func (*PlaybackInsights) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{57}
}

func (x *PlaybackInsights) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlaybackInsights) GetAvgWatchTime() float32 {
	if x != nil {
		return x.AvgWatchTime
	}
	return 0
}

func (x *PlaybackInsights) GetCompletionRate() float32 {
	if x != nil {
		return x.CompletionRate
	}
	return 0
}

func (x *PlaybackInsights) GetPreferredQualities() []string {
	if x != nil {
		return x.PreferredQualities
	}
	return nil
}

func (x *PlaybackInsights) GetPreferredGenres() []string {
	if x != nil {
		return x.PreferredGenres
	}
	return nil
}

func (x *PlaybackInsights) GetViewingPattern() string {
	if x != nil {
		return x.ViewingPattern
	}
	return ""
}

// Streaming performance
type StreamingPerformance struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SessionId         string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                             // Session ID
	OverallScore      float32                `protobuf:"fixed32,2,opt,name=overall_score,json=overallScore,proto3" json:"overall_score,omitempty"`                  // Overall performance score
	VideoQualityScore float32                `protobuf:"fixed32,3,opt,name=video_quality_score,json=videoQualityScore,proto3" json:"video_quality_score,omitempty"` // Video quality score
	AudioQualityScore float32                `protobuf:"fixed32,4,opt,name=audio_quality_score,json=audioQualityScore,proto3" json:"audio_quality_score,omitempty"` // Audio quality score
	BufferingScore    float32                `protobuf:"fixed32,5,opt,name=buffering_score,json=bufferingScore,proto3" json:"buffering_score,omitempty"`            // Buffering performance score
	NetworkScore      float32                `protobuf:"fixed32,6,opt,name=network_score,json=networkScore,proto3" json:"network_score,omitempty"`                  // Network performance score
	Metrics           []*PerformanceMetric   `protobuf:"bytes,7,rep,name=metrics,proto3" json:"metrics,omitempty"`                                                  // Detailed performance metrics
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StreamingPerformance) Reset() {
	*x = StreamingPerformance{}
	mi := &file_playback_playback_req_res_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamingPerformance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingPerformance) ProtoMessage() {}

func (x *StreamingPerformance) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingPerformance.ProtoReflect.Descriptor instead.
func (*StreamingPerformance) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{58}
}

func (x *StreamingPerformance) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StreamingPerformance) GetOverallScore() float32 {
	if x != nil {
		return x.OverallScore
	}
	return 0
}

func (x *StreamingPerformance) GetVideoQualityScore() float32 {
	if x != nil {
		return x.VideoQualityScore
	}
	return 0
}

func (x *StreamingPerformance) GetAudioQualityScore() float32 {
	if x != nil {
		return x.AudioQualityScore
	}
	return 0
}

func (x *StreamingPerformance) GetBufferingScore() float32 {
	if x != nil {
		return x.BufferingScore
	}
	return 0
}

func (x *StreamingPerformance) GetNetworkScore() float32 {
	if x != nil {
		return x.NetworkScore
	}
	return 0
}

func (x *StreamingPerformance) GetMetrics() []*PerformanceMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Performance issue
type PerformanceIssue struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IssueType       string                 `protobuf:"bytes,1,opt,name=issue_type,json=issueType,proto3" json:"issue_type,omitempty"`    // Type of issue
	Severity        string                 `protobuf:"bytes,2,opt,name=severity,proto3" json:"severity,omitempty"`                       // Issue severity
	Description     string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                 // Issue description
	DetectedAt      *common.DateTime       `protobuf:"bytes,4,opt,name=detected_at,json=detectedAt,proto3" json:"detected_at,omitempty"` // When issue was detected
	Recommendations []string               `protobuf:"bytes,5,rep,name=recommendations,proto3" json:"recommendations,omitempty"`         // Recommendations to fix
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PerformanceIssue) Reset() {
	*x = PerformanceIssue{}
	mi := &file_playback_playback_req_res_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceIssue) ProtoMessage() {}

func (x *PerformanceIssue) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceIssue.ProtoReflect.Descriptor instead.
func (*PerformanceIssue) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{59}
}

func (x *PerformanceIssue) GetIssueType() string {
	if x != nil {
		return x.IssueType
	}
	return ""
}

func (x *PerformanceIssue) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *PerformanceIssue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PerformanceIssue) GetDetectedAt() *common.DateTime {
	if x != nil {
		return x.DetectedAt
	}
	return nil
}

func (x *PerformanceIssue) GetRecommendations() []string {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

// Performance metric
type PerformanceMetric struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MetricName      string                 `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`                 // Metric name
	MetricValue     float32                `protobuf:"fixed32,2,opt,name=metric_value,json=metricValue,proto3" json:"metric_value,omitempty"`            // Metric value
	MetricUnit      string                 `protobuf:"bytes,3,opt,name=metric_unit,json=metricUnit,proto3" json:"metric_unit,omitempty"`                 // Metric unit
	Threshold       float32                `protobuf:"fixed32,4,opt,name=threshold,proto3" json:"threshold,omitempty"`                                   // Threshold value
	WithinThreshold bool                   `protobuf:"varint,5,opt,name=within_threshold,json=withinThreshold,proto3" json:"within_threshold,omitempty"` // Whether within threshold
	MeasuredAt      *common.DateTime       `protobuf:"bytes,6,opt,name=measured_at,json=measuredAt,proto3" json:"measured_at,omitempty"`                 // When metric was measured
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PerformanceMetric) Reset() {
	*x = PerformanceMetric{}
	mi := &file_playback_playback_req_res_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PerformanceMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformanceMetric) ProtoMessage() {}

func (x *PerformanceMetric) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformanceMetric.ProtoReflect.Descriptor instead.
func (*PerformanceMetric) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{60}
}

func (x *PerformanceMetric) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *PerformanceMetric) GetMetricValue() float32 {
	if x != nil {
		return x.MetricValue
	}
	return 0
}

func (x *PerformanceMetric) GetMetricUnit() string {
	if x != nil {
		return x.MetricUnit
	}
	return ""
}

func (x *PerformanceMetric) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *PerformanceMetric) GetWithinThreshold() bool {
	if x != nil {
		return x.WithinThreshold
	}
	return false
}

func (x *PerformanceMetric) GetMeasuredAt() *common.DateTime {
	if x != nil {
		return x.MeasuredAt
	}
	return nil
}

// Content protection
type ContentProtection struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContentId        string                 `protobuf:"bytes,1,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`                                                                                                // Content ID
	ProtectionType   string                 `protobuf:"bytes,2,opt,name=protection_type,json=protectionType,proto3" json:"protection_type,omitempty"`                                                                                 // Type of protection
	ProtectionLevel  string                 `protobuf:"bytes,3,opt,name=protection_level,json=protectionLevel,proto3" json:"protection_level,omitempty"`                                                                              // Protection level
	DrmSystems       []string               `protobuf:"bytes,4,rep,name=drm_systems,json=drmSystems,proto3" json:"drm_systems,omitempty"`                                                                                             // Supported DRM systems
	Watermarking     string                 `protobuf:"bytes,5,opt,name=watermarking,proto3" json:"watermarking,omitempty"`                                                                                                           // Watermarking information
	ProtectionParams map[string]string      `protobuf:"bytes,6,rep,name=protection_params,json=protectionParams,proto3" json:"protection_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Protection parameters
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContentProtection) Reset() {
	*x = ContentProtection{}
	mi := &file_playback_playback_req_res_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContentProtection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentProtection) ProtoMessage() {}

func (x *ContentProtection) ProtoReflect() protoreflect.Message {
	mi := &file_playback_playback_req_res_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentProtection.ProtoReflect.Descriptor instead.
func (*ContentProtection) Descriptor() ([]byte, []int) {
	return file_playback_playback_req_res_proto_rawDescGZIP(), []int{61}
}

func (x *ContentProtection) GetContentId() string {
	if x != nil {
		return x.ContentId
	}
	return ""
}

func (x *ContentProtection) GetProtectionType() string {
	if x != nil {
		return x.ProtectionType
	}
	return ""
}

func (x *ContentProtection) GetProtectionLevel() string {
	if x != nil {
		return x.ProtectionLevel
	}
	return ""
}

func (x *ContentProtection) GetDrmSystems() []string {
	if x != nil {
		return x.DrmSystems
	}
	return nil
}

func (x *ContentProtection) GetWatermarking() string {
	if x != nil {
		return x.Watermarking
	}
	return ""
}

func (x *ContentProtection) GetProtectionParams() map[string]string {
	if x != nil {
		return x.ProtectionParams
	}
	return nil
}

var File_playback_playback_req_res_proto protoreflect.FileDescriptor

const file_playback_playback_req_res_proto_rawDesc = "" +
	"\n" +
	"\x1fplayback/playback_req_res.proto\x12\x0eproto.playback\x1a\x19common/base_request.proto\x1a\x1acommon/base_response.proto\x1a\x19common/common_types.proto\x1a\x17common/pagination.proto\"\xfc\x02\n" +
	"\x1cCreatePlaybackSessionRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x03 \x01(\tR\tcontentId\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vclient_type\x18\x05 \x01(\tR\n" +
	"clientType\x12f\n" +
	"\x0esession_params\x18\x06 \x03(\v2?.proto.playback.CreatePlaybackSessionRequest.SessionParamsEntryR\rsessionParams\x1a@\n" +
	"\x12SessionParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf1\x01\n" +
	"\x1dCreatePlaybackSessionResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x129\n" +
	"\asession\x18\x02 \x01(\v2\x1f.proto.playback.PlaybackSessionR\asession\x12#\n" +
	"\rstreaming_url\x18\x03 \x01(\tR\fstreamingUrl\x12/\n" +
	"\x13available_qualities\x18\x04 \x03(\tR\x12availableQualities\"\xcc\x01\n" +
	"\x19GetPlaybackSessionRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12)\n" +
	"\x10include_progress\x18\x03 \x01(\bR\x0fincludeProgress\x12'\n" +
	"\x0finclude_metrics\x18\x04 \x01(\bR\x0eincludeMetrics\"\x92\x02\n" +
	"\x1aGetPlaybackSessionResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x129\n" +
	"\asession\x18\x02 \x01(\v2\x1f.proto.playback.PlaybackSessionR\asession\x12<\n" +
	"\bprogress\x18\x03 \x01(\v2 .proto.playback.PlaybackProgressR\bprogress\x12:\n" +
	"\ametrics\x18\x04 \x01(\v2 .proto.playback.StreamingMetricsR\ametrics\"\xc3\x02\n" +
	"\x1cUpdatePlaybackSessionRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12S\n" +
	"\aupdates\x18\x03 \x03(\v29.proto.playback.UpdatePlaybackSessionRequest.UpdatesEntryR\aupdates\x12\x18\n" +
	"\aquality\x18\x04 \x01(\tR\aquality\x12\x1b\n" +
	"\tdevice_id\x18\x05 \x01(\tR\bdeviceId\x1a:\n" +
	"\fUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xff\x01\n" +
	"\x1dUpdatePlaybackSessionResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12H\n" +
	"\x0fupdated_session\x18\x02 \x01(\v2\x1f.proto.playback.PlaybackSessionR\x0eupdatedSession\x12'\n" +
	"\x0fquality_changed\x18\x03 \x01(\bR\x0equalityChanged\x12*\n" +
	"\x11new_streaming_url\x18\x04 \x01(\tR\x0fnewStreamingUrl\"\xbc\x01\n" +
	"\x19EndPlaybackSessionRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"end_reason\x18\x03 \x01(\tR\tendReason\x12#\n" +
	"\rsave_progress\x18\x04 \x01(\bR\fsaveProgress\"\xfe\x01\n" +
	"\x1aEndPlaybackSessionResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12#\n" +
	"\rsession_ended\x18\x02 \x01(\bR\fsessionEnded\x12G\n" +
	"\x0efinal_progress\x18\x03 \x01(\v2 .proto.playback.PlaybackProgressR\rfinalProgress\x121\n" +
	"\bended_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\aendedAt\"\xb4\x01\n" +
	"\x14StartPlaybackRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12%\n" +
	"\x0estart_position\x18\x03 \x01(\x03R\rstartPosition\x12\x18\n" +
	"\aquality\x18\x04 \x01(\tR\aquality\"\xdf\x01\n" +
	"\x15StartPlaybackResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12)\n" +
	"\x10playback_started\x18\x02 \x01(\bR\x0fplaybackStarted\x12#\n" +
	"\rstreaming_url\x18\x03 \x01(\tR\fstreamingUrl\x125\n" +
	"\n" +
	"started_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\tstartedAt\"\x9a\x01\n" +
	"\x14PausePlaybackRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12%\n" +
	"\x0epause_position\x18\x03 \x01(\x03R\rpausePosition\"\xdf\x01\n" +
	"\x15PausePlaybackResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12'\n" +
	"\x0fplayback_paused\x18\x02 \x01(\bR\x0eplaybackPaused\x12'\n" +
	"\x0fpaused_position\x18\x03 \x01(\x03R\x0epausedPosition\x123\n" +
	"\tpaused_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\bpausedAt\"\x9d\x01\n" +
	"\x15ResumePlaybackRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12'\n" +
	"\x0fresume_position\x18\x03 \x01(\x03R\x0eresumePosition\"\xe0\x01\n" +
	"\x16ResumePlaybackResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12)\n" +
	"\x10playback_resumed\x18\x02 \x01(\bR\x0fplaybackResumed\x12#\n" +
	"\rstreaming_url\x18\x03 \x01(\tR\fstreamingUrl\x125\n" +
	"\n" +
	"resumed_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\tresumedAt\"\x97\x01\n" +
	"\x13StopPlaybackRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12#\n" +
	"\rstop_position\x18\x03 \x01(\x03R\fstopPosition\"\xe4\x01\n" +
	"\x14StopPlaybackResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12)\n" +
	"\x10playback_stopped\x18\x02 \x01(\bR\x0fplaybackStopped\x12)\n" +
	"\x10stopped_position\x18\x03 \x01(\x03R\x0fstoppedPosition\x125\n" +
	"\n" +
	"stopped_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\tstoppedAt\"\xb4\x01\n" +
	"\x13SeekPlaybackRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12#\n" +
	"\rseek_position\x18\x03 \x01(\x03R\fseekPosition\x12\x1b\n" +
	"\tseek_mode\x18\x04 \x01(\tR\bseekMode\"\xfb\x01\n" +
	"\x14SeekPlaybackResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12%\n" +
	"\x0eseek_completed\x18\x02 \x01(\bR\rseekCompleted\x12!\n" +
	"\fnew_position\x18\x03 \x01(\x03R\vnewPosition\x12#\n" +
	"\rstreaming_url\x18\x04 \x01(\tR\fstreamingUrl\x123\n" +
	"\tseeked_at\x18\x05 \x01(\v2\x16.proto.common.DateTimeR\bseekedAt\"\xfc\x02\n" +
	"\x1dUpdatePlaybackProgressRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12)\n" +
	"\x10current_position\x18\x03 \x01(\x03R\x0fcurrentPosition\x12#\n" +
	"\rplayback_rate\x18\x04 \x01(\x02R\fplaybackRate\x12\x18\n" +
	"\aquality\x18\x05 \x01(\tR\aquality\x12W\n" +
	"\bmetadata\x18\x06 \x03(\v2;.proto.playback.UpdatePlaybackProgressRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x02\n" +
	"\x1eUpdatePlaybackProgressResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12)\n" +
	"\x10progress_updated\x18\x02 \x01(\bR\x0fprogressUpdated\x12K\n" +
	"\x10updated_progress\x18\x03 \x01(\v2 .proto.playback.PlaybackProgressR\x0fupdatedProgress\x125\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\tupdatedAt\"\x92\x01\n" +
	"\x1aGetPlaybackProgressRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\"\xd8\x01\n" +
	"\x1bGetPlaybackProgressResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12<\n" +
	"\bprogress\x18\x02 \x01(\v2 .proto.playback.PlaybackProgressR\bprogress\x12:\n" +
	"\ahistory\x18\x03 \x03(\v2 .proto.playback.PlaybackProgressR\ahistory\"\xbc\x02\n" +
	"\x19GetPlaybackHistoryRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x03 \x01(\tR\tcontentId\x125\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\tstartDate\x121\n" +
	"\bend_date\x18\x05 \x01(\v2\x16.proto.common.DateTimeR\aendDate\x12?\n" +
	"\n" +
	"pagination\x18\x06 \x01(\v2\x1f.proto.common.PaginationRequestR\n" +
	"pagination\"\xfd\x01\n" +
	"\x1aGetPlaybackHistoryResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12;\n" +
	"\bsessions\x18\x02 \x03(\v2\x1f.proto.playback.PlaybackSessionR\bsessions\x12@\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2 .proto.common.PaginationResponseR\n" +
	"pagination\x12\x1f\n" +
	"\vtotal_count\x18\x04 \x01(\x03R\n" +
	"totalCount\"\xbf\x01\n" +
	"\x1cGetAvailableQualitiesRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x02 \x01(\tR\tcontentId\x12\x1f\n" +
	"\vdevice_type\x18\x03 \x01(\tR\n" +
	"deviceType\x12!\n" +
	"\fnetwork_type\x18\x04 \x01(\tR\vnetworkType\"\x9e\x02\n" +
	"\x1dGetAvailableQualitiesResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12;\n" +
	"\tqualities\x18\x02 \x03(\v2\x1d.proto.playback.QualityOptionR\tqualities\x12/\n" +
	"\x13recommended_quality\x18\x03 \x01(\tR\x12recommendedQuality\x12N\n" +
	"\x0fadaptation_info\x18\x04 \x01(\v2%.proto.playback.QualityAdaptationInfoR\x0eadaptationInfo\"\xb8\x01\n" +
	"\x1cChangePlaybackQualityRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vnew_quality\x18\x03 \x01(\tR\n" +
	"newQuality\x12\x1a\n" +
	"\badaptive\x18\x04 \x01(\bR\badaptive\"\x97\x02\n" +
	"\x1dChangePlaybackQualityResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12'\n" +
	"\x0fquality_changed\x18\x02 \x01(\bR\x0equalityChanged\x12*\n" +
	"\x11new_streaming_url\x18\x03 \x01(\tR\x0fnewStreamingUrl\x12)\n" +
	"\x10previous_quality\x18\x04 \x01(\tR\x0fpreviousQuality\x125\n" +
	"\n" +
	"changed_at\x18\x05 \x01(\v2\x16.proto.common.DateTimeR\tchangedAt\"\x9b\x01\n" +
	"\x1dGetAdaptiveBitrateInfoRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x03 \x01(\tR\tcontentId\"\x8a\x02\n" +
	"\x1eGetAdaptiveBitrateInfoResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12>\n" +
	"\babr_info\x18\x02 \x01(\v2#.proto.playback.AdaptiveBitrateInfoR\aabrInfo\x12:\n" +
	"\bsegments\x18\x03 \x03(\v2\x1e.proto.playback.QualitySegmentR\bsegments\x12+\n" +
	"\x11current_algorithm\x18\x04 \x01(\tR\x10currentAlgorithm\"\xb5\x02\n" +
	"\x16GetStreamingURLRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x02 \x01(\tR\tcontentId\x12\x18\n" +
	"\aquality\x18\x03 \x01(\tR\aquality\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\x12J\n" +
	"\x06params\x18\x05 \x03(\v22.proto.playback.GetStreamingURLRequest.ParamsEntryR\x06params\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe5\x02\n" +
	"\x17GetStreamingURLResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12#\n" +
	"\rstreaming_url\x18\x02 \x01(\tR\fstreamingUrl\x12!\n" +
	"\fmanifest_url\x18\x03 \x01(\tR\vmanifestUrl\x125\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\texpiresAt\x12N\n" +
	"\aheaders\x18\x05 \x03(\v24.proto.playback.GetStreamingURLResponse.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd2\x01\n" +
	"\x1eValidateStreamingAccessRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x03 \x01(\tR\tcontentId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x04 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tdevice_id\x18\x05 \x01(\tR\bdeviceId\"\x94\x02\n" +
	"\x1fValidateStreamingAccessResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12%\n" +
	"\x0eaccess_granted\x18\x02 \x01(\bR\raccessGranted\x12!\n" +
	"\faccess_level\x18\x03 \x01(\tR\vaccessLevel\x12\"\n" +
	"\frestrictions\x18\x04 \x03(\tR\frestrictions\x12B\n" +
	"\x11access_expires_at\x18\x05 \x01(\v2\x16.proto.common.DateTimeR\x0faccessExpiresAt\"\x84\x02\n" +
	"\x1aGetStreamingMetricsRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vmetric_type\x18\x03 \x01(\tR\n" +
	"metricType\x125\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\tstartTime\x121\n" +
	"\bend_time\x18\x05 \x01(\v2\x16.proto.common.DateTimeR\aendTime\"\x83\x02\n" +
	"\x1bGetStreamingMetricsResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12:\n" +
	"\ametrics\x18\x02 \x01(\v2 .proto.playback.StreamingMetricsR\ametrics\x12@\n" +
	"\vdata_points\x18\x03 \x03(\v2\x1f.proto.playback.MetricDataPointR\n" +
	"dataPoints\x12%\n" +
	"\x0emetrics_format\x18\x04 \x01(\tR\rmetricsFormat\"\xd5\x02\n" +
	"\x19TrackPlaybackEventRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x12%\n" +
	"\x0eevent_position\x18\x04 \x01(\x03R\reventPosition\x12W\n" +
	"\n" +
	"event_data\x18\x05 \x03(\v28.proto.playback.TrackPlaybackEventRequest.EventDataEntryR\teventData\x1a<\n" +
	"\x0eEventDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x01\n" +
	"\x1aTrackPlaybackEventResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12#\n" +
	"\revent_tracked\x18\x02 \x01(\bR\feventTracked\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\tR\aeventId\x125\n" +
	"\n" +
	"tracked_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\ttrackedAt\"\xa0\x02\n" +
	"\x1bGetPlaybackAnalyticsRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x03 \x01(\tR\tcontentId\x125\n" +
	"\n" +
	"start_date\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\tstartDate\x121\n" +
	"\bend_date\x18\x05 \x01(\v2\x16.proto.common.DateTimeR\aendDate\x12!\n" +
	"\fmetric_types\x18\x06 \x03(\tR\vmetricTypes\"\x93\x02\n" +
	"\x1cGetPlaybackAnalyticsResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x129\n" +
	"\ametrics\x18\x02 \x03(\v2\x1f.proto.playback.AnalyticsMetricR\ametrics\x12<\n" +
	"\binsights\x18\x03 \x01(\v2 .proto.playback.PlaybackInsightsR\binsights\x129\n" +
	"\fgenerated_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\vgeneratedAt\"\xa8\x01\n" +
	"\x1eGetStreamingPerformanceRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12)\n" +
	"\x10performance_type\x18\x03 \x01(\tR\x0fperformanceType\"\x91\x02\n" +
	"\x1fGetStreamingPerformanceResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12F\n" +
	"\vperformance\x18\x02 \x01(\v2$.proto.playback.StreamingPerformanceR\vperformance\x128\n" +
	"\x06issues\x18\x03 \x03(\v2 .proto.playback.PerformanceIssueR\x06issues\x12+\n" +
	"\x11performance_grade\x18\x04 \x01(\tR\x10performanceGrade\"\xca\x01\n" +
	"\x14GetDRMLicenseRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x02 \x01(\tR\tcontentId\x12\x19\n" +
	"\bdrm_type\x18\x03 \x01(\tR\adrmType\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x05 \x01(\tR\tsessionId\"\x87\x03\n" +
	"\x15GetDRMLicenseResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12\x1f\n" +
	"\vlicense_url\x18\x02 \x01(\tR\n" +
	"licenseUrl\x12#\n" +
	"\rlicense_token\x18\x03 \x01(\tR\flicenseToken\x12D\n" +
	"\x12license_expires_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\x10licenseExpiresAt\x12_\n" +
	"\x0elicense_params\x18\x05 \x03(\v28.proto.playback.GetDRMLicenseResponse.LicenseParamsEntryR\rlicenseParams\x1a@\n" +
	"\x12LicenseParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x01\n" +
	"\x17ValidateDRMTokenRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1b\n" +
	"\tdrm_token\x18\x02 \x01(\tR\bdrmToken\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x04 \x01(\tR\tcontentId\"\xff\x01\n" +
	"\x18ValidateDRMTokenResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12\x1f\n" +
	"\vtoken_valid\x18\x02 \x01(\bR\n" +
	"tokenValid\x12\x1d\n" +
	"\n" +
	"token_type\x18\x03 \x01(\tR\ttokenType\x12@\n" +
	"\x10token_expires_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\x0etokenExpiresAt\x12 \n" +
	"\vpermissions\x18\x05 \x03(\tR\vpermissions\"\xa3\x01\n" +
	"\x1bGetContentProtectionRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1d\n" +
	"\n" +
	"content_id\x18\x02 \x01(\tR\tcontentId\x12'\n" +
	"\x0fprotection_type\x18\x03 \x01(\tR\x0eprotectionType\"\xfd\x01\n" +
	"\x1cGetContentProtectionResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12A\n" +
	"\n" +
	"protection\x18\x02 \x01(\v2!.proto.playback.ContentProtectionR\n" +
	"protection\x12.\n" +
	"\x13supported_drm_types\x18\x03 \x03(\tR\x11supportedDrmTypes\x12)\n" +
	"\x10protection_level\x18\x04 \x01(\tR\x0fprotectionLevel\"\x89\x04\n" +
	"\x0fPlaybackSession\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x03 \x01(\tR\tcontentId\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x1f\n" +
	"\vclient_type\x18\x05 \x01(\tR\n" +
	"clientType\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x18\n" +
	"\aquality\x18\a \x01(\tR\aquality\x125\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x16.proto.common.DateTimeR\tcreatedAt\x129\n" +
	"\flast_updated\x18\t \x01(\v2\x16.proto.common.DateTimeR\vlastUpdated\x125\n" +
	"\n" +
	"expires_at\x18\n" +
	" \x01(\v2\x16.proto.common.DateTimeR\texpiresAt\x12I\n" +
	"\bmetadata\x18\v \x03(\v2-.proto.playback.PlaybackSession.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9e\x03\n" +
	"\x10PlaybackProgress\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12)\n" +
	"\x10current_position\x18\x02 \x01(\x03R\x0fcurrentPosition\x12%\n" +
	"\x0etotal_duration\x18\x03 \x01(\x03R\rtotalDuration\x12#\n" +
	"\rplayback_rate\x18\x04 \x01(\x02R\fplaybackRate\x12\x18\n" +
	"\aquality\x18\x05 \x01(\tR\aquality\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x129\n" +
	"\flast_updated\x18\a \x01(\v2\x16.proto.common.DateTimeR\vlastUpdated\x12J\n" +
	"\bmetadata\x18\b \x03(\v2..proto.playback.PlaybackProgress.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x02\n" +
	"\x10StreamingMetrics\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x18\n" +
	"\abitrate\x18\x02 \x01(\x02R\abitrate\x12\x1c\n" +
	"\tframerate\x18\x03 \x01(\x02R\tframerate\x12!\n" +
	"\fbuffer_level\x18\x04 \x01(\x02R\vbufferLevel\x12+\n" +
	"\x11network_bandwidth\x18\x05 \x01(\x02R\x10networkBandwidth\x12%\n" +
	"\x0edropped_frames\x18\x06 \x01(\x05R\rdroppedFrames\x12)\n" +
	"\x10quality_switches\x18\a \x01(\x05R\x0fqualitySwitches\x129\n" +
	"\fmetrics_time\x18\b \x01(\v2\x16.proto.common.DateTimeR\vmetricsTime\"\xd3\x01\n" +
	"\rQualityOption\x12!\n" +
	"\fquality_name\x18\x01 \x01(\tR\vqualityName\x12\x18\n" +
	"\abitrate\x18\x02 \x01(\x05R\abitrate\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\x12\x14\n" +
	"\x05codec\x18\x05 \x01(\tR\x05codec\x12\x1c\n" +
	"\tavailable\x18\x06 \x01(\bR\tavailable\x12#\n" +
	"\rstreaming_url\x18\a \x01(\tR\fstreamingUrl\"\xc3\x01\n" +
	"\x15QualityAdaptationInfo\x12\x1c\n" +
	"\talgorithm\x18\x01 \x01(\tR\talgorithm\x12#\n" +
	"\rtarget_buffer\x18\x02 \x01(\x02R\ftargetBuffer\x12\x1d\n" +
	"\n" +
	"min_buffer\x18\x03 \x01(\x02R\tminBuffer\x12\x1d\n" +
	"\n" +
	"max_buffer\x18\x04 \x01(\x02R\tmaxBuffer\x12)\n" +
	"\x10adaptation_rules\x18\x05 \x03(\tR\x0fadaptationRules\"\x86\x02\n" +
	"\x0eQualitySegment\x12%\n" +
	"\x0esegment_number\x18\x01 \x01(\x05R\rsegmentNumber\x12\x18\n" +
	"\aquality\x18\x02 \x01(\tR\aquality\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x03R\bduration\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12H\n" +
	"\bmetadata\x18\x05 \x03(\v2,.proto.playback.QualitySegment.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa0\x02\n" +
	"\x13AdaptiveBitrateInfo\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\x12/\n" +
	"\x13available_qualities\x18\x02 \x03(\tR\x12availableQualities\x12'\n" +
	"\x0fcurrent_quality\x18\x03 \x01(\tR\x0ecurrentQuality\x12!\n" +
	"\fbuffer_level\x18\x04 \x01(\x02R\vbufferLevel\x121\n" +
	"\x14adaptation_algorithm\x18\x05 \x01(\tR\x13adaptationAlgorithm\x12:\n" +
	"\bsegments\x18\x06 \x03(\v2\x1e.proto.playback.QualitySegmentR\bsegments\"\xbc\x02\n" +
	"\x0fMetricDataPoint\x124\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x16.proto.common.DateTimeR\ttimestamp\x12\x1f\n" +
	"\vmetric_name\x18\x02 \x01(\tR\n" +
	"metricName\x12!\n" +
	"\fmetric_value\x18\x03 \x01(\x02R\vmetricValue\x12\x1f\n" +
	"\vmetric_unit\x18\x04 \x01(\tR\n" +
	"metricUnit\x12O\n" +
	"\n" +
	"dimensions\x18\x05 \x03(\v2/.proto.playback.MetricDataPoint.DimensionsEntryR\n" +
	"dimensions\x1a=\n" +
	"\x0fDimensionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x02\n" +
	"\x0fAnalyticsMetric\x12\x1f\n" +
	"\vmetric_name\x18\x01 \x01(\tR\n" +
	"metricName\x12!\n" +
	"\fmetric_value\x18\x02 \x01(\x02R\vmetricValue\x12\x1f\n" +
	"\vmetric_unit\x18\x03 \x01(\tR\n" +
	"metricUnit\x127\n" +
	"\vmetric_date\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\n" +
	"metricDate\x12+\n" +
	"\x11aggregation_level\x18\x05 \x01(\tR\x10aggregationLevel\x12O\n" +
	"\n" +
	"dimensions\x18\x06 \x03(\v2/.proto.playback.AnalyticsMetric.DimensionsEntryR\n" +
	"dimensions\x1a=\n" +
	"\x0fDimensionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xff\x01\n" +
	"\x10PlaybackInsights\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12$\n" +
	"\x0eavg_watch_time\x18\x02 \x01(\x02R\favgWatchTime\x12'\n" +
	"\x0fcompletion_rate\x18\x03 \x01(\x02R\x0ecompletionRate\x12/\n" +
	"\x13preferred_qualities\x18\x04 \x03(\tR\x12preferredQualities\x12)\n" +
	"\x10preferred_genres\x18\x05 \x03(\tR\x0fpreferredGenres\x12'\n" +
	"\x0fviewing_pattern\x18\x06 \x01(\tR\x0eviewingPattern\"\xc5\x02\n" +
	"\x14StreamingPerformance\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12#\n" +
	"\roverall_score\x18\x02 \x01(\x02R\foverallScore\x12.\n" +
	"\x13video_quality_score\x18\x03 \x01(\x02R\x11videoQualityScore\x12.\n" +
	"\x13audio_quality_score\x18\x04 \x01(\x02R\x11audioQualityScore\x12'\n" +
	"\x0fbuffering_score\x18\x05 \x01(\x02R\x0ebufferingScore\x12#\n" +
	"\rnetwork_score\x18\x06 \x01(\x02R\fnetworkScore\x12;\n" +
	"\ametrics\x18\a \x03(\v2!.proto.playback.PerformanceMetricR\ametrics\"\xd2\x01\n" +
	"\x10PerformanceIssue\x12\x1d\n" +
	"\n" +
	"issue_type\x18\x01 \x01(\tR\tissueType\x12\x1a\n" +
	"\bseverity\x18\x02 \x01(\tR\bseverity\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x127\n" +
	"\vdetected_at\x18\x04 \x01(\v2\x16.proto.common.DateTimeR\n" +
	"detectedAt\x12(\n" +
	"\x0frecommendations\x18\x05 \x03(\tR\x0frecommendations\"\xfa\x01\n" +
	"\x11PerformanceMetric\x12\x1f\n" +
	"\vmetric_name\x18\x01 \x01(\tR\n" +
	"metricName\x12!\n" +
	"\fmetric_value\x18\x02 \x01(\x02R\vmetricValue\x12\x1f\n" +
	"\vmetric_unit\x18\x03 \x01(\tR\n" +
	"metricUnit\x12\x1c\n" +
	"\tthreshold\x18\x04 \x01(\x02R\tthreshold\x12)\n" +
	"\x10within_threshold\x18\x05 \x01(\bR\x0fwithinThreshold\x127\n" +
	"\vmeasured_at\x18\x06 \x01(\v2\x16.proto.common.DateTimeR\n" +
	"measuredAt\"\xf6\x02\n" +
	"\x11ContentProtection\x12\x1d\n" +
	"\n" +
	"content_id\x18\x01 \x01(\tR\tcontentId\x12'\n" +
	"\x0fprotection_type\x18\x02 \x01(\tR\x0eprotectionType\x12)\n" +
	"\x10protection_level\x18\x03 \x01(\tR\x0fprotectionLevel\x12\x1f\n" +
	"\vdrm_systems\x18\x04 \x03(\tR\n" +
	"drmSystems\x12\"\n" +
	"\fwatermarking\x18\x05 \x01(\tR\fwatermarking\x12d\n" +
	"\x11protection_params\x18\x06 \x03(\v27.proto.playback.ContentProtection.ProtectionParamsEntryR\x10protectionParams\x1aC\n" +
	"\x15ProtectionParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01Bs\n" +
	" com.movieplatform.proto.playbackB\x13PlaybackReqResProtoP\x01Z8github.com/movie-stream-platform/movie-proto-go/playbackb\x06proto3"

var (
	file_playback_playback_req_res_proto_rawDescOnce sync.Once
	file_playback_playback_req_res_proto_rawDescData []byte
)

func file_playback_playback_req_res_proto_rawDescGZIP() []byte {
	file_playback_playback_req_res_proto_rawDescOnce.Do(func() {
		file_playback_playback_req_res_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_playback_playback_req_res_proto_rawDesc), len(file_playback_playback_req_res_proto_rawDesc)))
	})
	return file_playback_playback_req_res_proto_rawDescData
}

var file_playback_playback_req_res_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_playback_playback_req_res_proto_goTypes = []any{
	(*CreatePlaybackSessionRequest)(nil),    // 0: proto.playback.CreatePlaybackSessionRequest
	(*CreatePlaybackSessionResponse)(nil),   // 1: proto.playback.CreatePlaybackSessionResponse
	(*GetPlaybackSessionRequest)(nil),       // 2: proto.playback.GetPlaybackSessionRequest
	(*GetPlaybackSessionResponse)(nil),      // 3: proto.playback.GetPlaybackSessionResponse
	(*UpdatePlaybackSessionRequest)(nil),    // 4: proto.playback.UpdatePlaybackSessionRequest
	(*UpdatePlaybackSessionResponse)(nil),   // 5: proto.playback.UpdatePlaybackSessionResponse
	(*EndPlaybackSessionRequest)(nil),       // 6: proto.playback.EndPlaybackSessionRequest
	(*EndPlaybackSessionResponse)(nil),      // 7: proto.playback.EndPlaybackSessionResponse
	(*StartPlaybackRequest)(nil),            // 8: proto.playback.StartPlaybackRequest
	(*StartPlaybackResponse)(nil),           // 9: proto.playback.StartPlaybackResponse
	(*PausePlaybackRequest)(nil),            // 10: proto.playback.PausePlaybackRequest
	(*PausePlaybackResponse)(nil),           // 11: proto.playback.PausePlaybackResponse
	(*ResumePlaybackRequest)(nil),           // 12: proto.playback.ResumePlaybackRequest
	(*ResumePlaybackResponse)(nil),          // 13: proto.playback.ResumePlaybackResponse
	(*StopPlaybackRequest)(nil),             // 14: proto.playback.StopPlaybackRequest
	(*StopPlaybackResponse)(nil),            // 15: proto.playback.StopPlaybackResponse
	(*SeekPlaybackRequest)(nil),             // 16: proto.playback.SeekPlaybackRequest
	(*SeekPlaybackResponse)(nil),            // 17: proto.playback.SeekPlaybackResponse
	(*UpdatePlaybackProgressRequest)(nil),   // 18: proto.playback.UpdatePlaybackProgressRequest
	(*UpdatePlaybackProgressResponse)(nil),  // 19: proto.playback.UpdatePlaybackProgressResponse
	(*GetPlaybackProgressRequest)(nil),      // 20: proto.playback.GetPlaybackProgressRequest
	(*GetPlaybackProgressResponse)(nil),     // 21: proto.playback.GetPlaybackProgressResponse
	(*GetPlaybackHistoryRequest)(nil),       // 22: proto.playback.GetPlaybackHistoryRequest
	(*GetPlaybackHistoryResponse)(nil),      // 23: proto.playback.GetPlaybackHistoryResponse
	(*GetAvailableQualitiesRequest)(nil),    // 24: proto.playback.GetAvailableQualitiesRequest
	(*GetAvailableQualitiesResponse)(nil),   // 25: proto.playback.GetAvailableQualitiesResponse
	(*ChangePlaybackQualityRequest)(nil),    // 26: proto.playback.ChangePlaybackQualityRequest
	(*ChangePlaybackQualityResponse)(nil),   // 27: proto.playback.ChangePlaybackQualityResponse
	(*GetAdaptiveBitrateInfoRequest)(nil),   // 28: proto.playback.GetAdaptiveBitrateInfoRequest
	(*GetAdaptiveBitrateInfoResponse)(nil),  // 29: proto.playback.GetAdaptiveBitrateInfoResponse
	(*GetStreamingURLRequest)(nil),          // 30: proto.playback.GetStreamingURLRequest
	(*GetStreamingURLResponse)(nil),         // 31: proto.playback.GetStreamingURLResponse
	(*ValidateStreamingAccessRequest)(nil),  // 32: proto.playback.ValidateStreamingAccessRequest
	(*ValidateStreamingAccessResponse)(nil), // 33: proto.playback.ValidateStreamingAccessResponse
	(*GetStreamingMetricsRequest)(nil),      // 34: proto.playback.GetStreamingMetricsRequest
	(*GetStreamingMetricsResponse)(nil),     // 35: proto.playback.GetStreamingMetricsResponse
	(*TrackPlaybackEventRequest)(nil),       // 36: proto.playback.TrackPlaybackEventRequest
	(*TrackPlaybackEventResponse)(nil),      // 37: proto.playback.TrackPlaybackEventResponse
	(*GetPlaybackAnalyticsRequest)(nil),     // 38: proto.playback.GetPlaybackAnalyticsRequest
	(*GetPlaybackAnalyticsResponse)(nil),    // 39: proto.playback.GetPlaybackAnalyticsResponse
	(*GetStreamingPerformanceRequest)(nil),  // 40: proto.playback.GetStreamingPerformanceRequest
	(*GetStreamingPerformanceResponse)(nil), // 41: proto.playback.GetStreamingPerformanceResponse
	(*GetDRMLicenseRequest)(nil),            // 42: proto.playback.GetDRMLicenseRequest
	(*GetDRMLicenseResponse)(nil),           // 43: proto.playback.GetDRMLicenseResponse
	(*ValidateDRMTokenRequest)(nil),         // 44: proto.playback.ValidateDRMTokenRequest
	(*ValidateDRMTokenResponse)(nil),        // 45: proto.playback.ValidateDRMTokenResponse
	(*GetContentProtectionRequest)(nil),     // 46: proto.playback.GetContentProtectionRequest
	(*GetContentProtectionResponse)(nil),    // 47: proto.playback.GetContentProtectionResponse
	(*PlaybackSession)(nil),                 // 48: proto.playback.PlaybackSession
	(*PlaybackProgress)(nil),                // 49: proto.playback.PlaybackProgress
	(*StreamingMetrics)(nil),                // 50: proto.playback.StreamingMetrics
	(*QualityOption)(nil),                   // 51: proto.playback.QualityOption
	(*QualityAdaptationInfo)(nil),           // 52: proto.playback.QualityAdaptationInfo
	(*QualitySegment)(nil),                  // 53: proto.playback.QualitySegment
	(*AdaptiveBitrateInfo)(nil),             // 54: proto.playback.AdaptiveBitrateInfo
	(*MetricDataPoint)(nil),                 // 55: proto.playback.MetricDataPoint
	(*AnalyticsMetric)(nil),                 // 56: proto.playback.AnalyticsMetric
	(*PlaybackInsights)(nil),                // 57: proto.playback.PlaybackInsights
	(*StreamingPerformance)(nil),            // 58: proto.playback.StreamingPerformance
	(*PerformanceIssue)(nil),                // 59: proto.playback.PerformanceIssue
	(*PerformanceMetric)(nil),               // 60: proto.playback.PerformanceMetric
	(*ContentProtection)(nil),               // 61: proto.playback.ContentProtection
	nil,                                     // 62: proto.playback.CreatePlaybackSessionRequest.SessionParamsEntry
	nil,                                     // 63: proto.playback.UpdatePlaybackSessionRequest.UpdatesEntry
	nil,                                     // 64: proto.playback.UpdatePlaybackProgressRequest.MetadataEntry
	nil,                                     // 65: proto.playback.GetStreamingURLRequest.ParamsEntry
	nil,                                     // 66: proto.playback.GetStreamingURLResponse.HeadersEntry
	nil,                                     // 67: proto.playback.TrackPlaybackEventRequest.EventDataEntry
	nil,                                     // 68: proto.playback.GetDRMLicenseResponse.LicenseParamsEntry
	nil,                                     // 69: proto.playback.PlaybackSession.MetadataEntry
	nil,                                     // 70: proto.playback.PlaybackProgress.MetadataEntry
	nil,                                     // 71: proto.playback.QualitySegment.MetadataEntry
	nil,                                     // 72: proto.playback.MetricDataPoint.DimensionsEntry
	nil,                                     // 73: proto.playback.AnalyticsMetric.DimensionsEntry
	nil,                                     // 74: proto.playback.ContentProtection.ProtectionParamsEntry
	(*common.BaseRequest)(nil),              // 75: proto.common.BaseRequest
	(*common.BaseResponse)(nil),             // 76: proto.common.BaseResponse
	(*common.DateTime)(nil),                 // 77: proto.common.DateTime
	(*common.PaginationRequest)(nil),        // 78: proto.common.PaginationRequest
	(*common.PaginationResponse)(nil),       // 79: proto.common.PaginationResponse
}
var file_playback_playback_req_res_proto_depIdxs = []int32{
	75,  // 0: proto.playback.CreatePlaybackSessionRequest.base_request:type_name -> proto.common.BaseRequest
	62,  // 1: proto.playback.CreatePlaybackSessionRequest.session_params:type_name -> proto.playback.CreatePlaybackSessionRequest.SessionParamsEntry
	76,  // 2: proto.playback.CreatePlaybackSessionResponse.base_response:type_name -> proto.common.BaseResponse
	48,  // 3: proto.playback.CreatePlaybackSessionResponse.session:type_name -> proto.playback.PlaybackSession
	75,  // 4: proto.playback.GetPlaybackSessionRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 5: proto.playback.GetPlaybackSessionResponse.base_response:type_name -> proto.common.BaseResponse
	48,  // 6: proto.playback.GetPlaybackSessionResponse.session:type_name -> proto.playback.PlaybackSession
	49,  // 7: proto.playback.GetPlaybackSessionResponse.progress:type_name -> proto.playback.PlaybackProgress
	50,  // 8: proto.playback.GetPlaybackSessionResponse.metrics:type_name -> proto.playback.StreamingMetrics
	75,  // 9: proto.playback.UpdatePlaybackSessionRequest.base_request:type_name -> proto.common.BaseRequest
	63,  // 10: proto.playback.UpdatePlaybackSessionRequest.updates:type_name -> proto.playback.UpdatePlaybackSessionRequest.UpdatesEntry
	76,  // 11: proto.playback.UpdatePlaybackSessionResponse.base_response:type_name -> proto.common.BaseResponse
	48,  // 12: proto.playback.UpdatePlaybackSessionResponse.updated_session:type_name -> proto.playback.PlaybackSession
	75,  // 13: proto.playback.EndPlaybackSessionRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 14: proto.playback.EndPlaybackSessionResponse.base_response:type_name -> proto.common.BaseResponse
	49,  // 15: proto.playback.EndPlaybackSessionResponse.final_progress:type_name -> proto.playback.PlaybackProgress
	77,  // 16: proto.playback.EndPlaybackSessionResponse.ended_at:type_name -> proto.common.DateTime
	75,  // 17: proto.playback.StartPlaybackRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 18: proto.playback.StartPlaybackResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 19: proto.playback.StartPlaybackResponse.started_at:type_name -> proto.common.DateTime
	75,  // 20: proto.playback.PausePlaybackRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 21: proto.playback.PausePlaybackResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 22: proto.playback.PausePlaybackResponse.paused_at:type_name -> proto.common.DateTime
	75,  // 23: proto.playback.ResumePlaybackRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 24: proto.playback.ResumePlaybackResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 25: proto.playback.ResumePlaybackResponse.resumed_at:type_name -> proto.common.DateTime
	75,  // 26: proto.playback.StopPlaybackRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 27: proto.playback.StopPlaybackResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 28: proto.playback.StopPlaybackResponse.stopped_at:type_name -> proto.common.DateTime
	75,  // 29: proto.playback.SeekPlaybackRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 30: proto.playback.SeekPlaybackResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 31: proto.playback.SeekPlaybackResponse.seeked_at:type_name -> proto.common.DateTime
	75,  // 32: proto.playback.UpdatePlaybackProgressRequest.base_request:type_name -> proto.common.BaseRequest
	64,  // 33: proto.playback.UpdatePlaybackProgressRequest.metadata:type_name -> proto.playback.UpdatePlaybackProgressRequest.MetadataEntry
	76,  // 34: proto.playback.UpdatePlaybackProgressResponse.base_response:type_name -> proto.common.BaseResponse
	49,  // 35: proto.playback.UpdatePlaybackProgressResponse.updated_progress:type_name -> proto.playback.PlaybackProgress
	77,  // 36: proto.playback.UpdatePlaybackProgressResponse.updated_at:type_name -> proto.common.DateTime
	75,  // 37: proto.playback.GetPlaybackProgressRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 38: proto.playback.GetPlaybackProgressResponse.base_response:type_name -> proto.common.BaseResponse
	49,  // 39: proto.playback.GetPlaybackProgressResponse.progress:type_name -> proto.playback.PlaybackProgress
	49,  // 40: proto.playback.GetPlaybackProgressResponse.history:type_name -> proto.playback.PlaybackProgress
	75,  // 41: proto.playback.GetPlaybackHistoryRequest.base_request:type_name -> proto.common.BaseRequest
	77,  // 42: proto.playback.GetPlaybackHistoryRequest.start_date:type_name -> proto.common.DateTime
	77,  // 43: proto.playback.GetPlaybackHistoryRequest.end_date:type_name -> proto.common.DateTime
	78,  // 44: proto.playback.GetPlaybackHistoryRequest.pagination:type_name -> proto.common.PaginationRequest
	76,  // 45: proto.playback.GetPlaybackHistoryResponse.base_response:type_name -> proto.common.BaseResponse
	48,  // 46: proto.playback.GetPlaybackHistoryResponse.sessions:type_name -> proto.playback.PlaybackSession
	79,  // 47: proto.playback.GetPlaybackHistoryResponse.pagination:type_name -> proto.common.PaginationResponse
	75,  // 48: proto.playback.GetAvailableQualitiesRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 49: proto.playback.GetAvailableQualitiesResponse.base_response:type_name -> proto.common.BaseResponse
	51,  // 50: proto.playback.GetAvailableQualitiesResponse.qualities:type_name -> proto.playback.QualityOption
	52,  // 51: proto.playback.GetAvailableQualitiesResponse.adaptation_info:type_name -> proto.playback.QualityAdaptationInfo
	75,  // 52: proto.playback.ChangePlaybackQualityRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 53: proto.playback.ChangePlaybackQualityResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 54: proto.playback.ChangePlaybackQualityResponse.changed_at:type_name -> proto.common.DateTime
	75,  // 55: proto.playback.GetAdaptiveBitrateInfoRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 56: proto.playback.GetAdaptiveBitrateInfoResponse.base_response:type_name -> proto.common.BaseResponse
	54,  // 57: proto.playback.GetAdaptiveBitrateInfoResponse.abr_info:type_name -> proto.playback.AdaptiveBitrateInfo
	53,  // 58: proto.playback.GetAdaptiveBitrateInfoResponse.segments:type_name -> proto.playback.QualitySegment
	75,  // 59: proto.playback.GetStreamingURLRequest.base_request:type_name -> proto.common.BaseRequest
	65,  // 60: proto.playback.GetStreamingURLRequest.params:type_name -> proto.playback.GetStreamingURLRequest.ParamsEntry
	76,  // 61: proto.playback.GetStreamingURLResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 62: proto.playback.GetStreamingURLResponse.expires_at:type_name -> proto.common.DateTime
	66,  // 63: proto.playback.GetStreamingURLResponse.headers:type_name -> proto.playback.GetStreamingURLResponse.HeadersEntry
	75,  // 64: proto.playback.ValidateStreamingAccessRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 65: proto.playback.ValidateStreamingAccessResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 66: proto.playback.ValidateStreamingAccessResponse.access_expires_at:type_name -> proto.common.DateTime
	75,  // 67: proto.playback.GetStreamingMetricsRequest.base_request:type_name -> proto.common.BaseRequest
	77,  // 68: proto.playback.GetStreamingMetricsRequest.start_time:type_name -> proto.common.DateTime
	77,  // 69: proto.playback.GetStreamingMetricsRequest.end_time:type_name -> proto.common.DateTime
	76,  // 70: proto.playback.GetStreamingMetricsResponse.base_response:type_name -> proto.common.BaseResponse
	50,  // 71: proto.playback.GetStreamingMetricsResponse.metrics:type_name -> proto.playback.StreamingMetrics
	55,  // 72: proto.playback.GetStreamingMetricsResponse.data_points:type_name -> proto.playback.MetricDataPoint
	75,  // 73: proto.playback.TrackPlaybackEventRequest.base_request:type_name -> proto.common.BaseRequest
	67,  // 74: proto.playback.TrackPlaybackEventRequest.event_data:type_name -> proto.playback.TrackPlaybackEventRequest.EventDataEntry
	76,  // 75: proto.playback.TrackPlaybackEventResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 76: proto.playback.TrackPlaybackEventResponse.tracked_at:type_name -> proto.common.DateTime
	75,  // 77: proto.playback.GetPlaybackAnalyticsRequest.base_request:type_name -> proto.common.BaseRequest
	77,  // 78: proto.playback.GetPlaybackAnalyticsRequest.start_date:type_name -> proto.common.DateTime
	77,  // 79: proto.playback.GetPlaybackAnalyticsRequest.end_date:type_name -> proto.common.DateTime
	76,  // 80: proto.playback.GetPlaybackAnalyticsResponse.base_response:type_name -> proto.common.BaseResponse
	56,  // 81: proto.playback.GetPlaybackAnalyticsResponse.metrics:type_name -> proto.playback.AnalyticsMetric
	57,  // 82: proto.playback.GetPlaybackAnalyticsResponse.insights:type_name -> proto.playback.PlaybackInsights
	77,  // 83: proto.playback.GetPlaybackAnalyticsResponse.generated_at:type_name -> proto.common.DateTime
	75,  // 84: proto.playback.GetStreamingPerformanceRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 85: proto.playback.GetStreamingPerformanceResponse.base_response:type_name -> proto.common.BaseResponse
	58,  // 86: proto.playback.GetStreamingPerformanceResponse.performance:type_name -> proto.playback.StreamingPerformance
	59,  // 87: proto.playback.GetStreamingPerformanceResponse.issues:type_name -> proto.playback.PerformanceIssue
	75,  // 88: proto.playback.GetDRMLicenseRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 89: proto.playback.GetDRMLicenseResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 90: proto.playback.GetDRMLicenseResponse.license_expires_at:type_name -> proto.common.DateTime
	68,  // 91: proto.playback.GetDRMLicenseResponse.license_params:type_name -> proto.playback.GetDRMLicenseResponse.LicenseParamsEntry
	75,  // 92: proto.playback.ValidateDRMTokenRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 93: proto.playback.ValidateDRMTokenResponse.base_response:type_name -> proto.common.BaseResponse
	77,  // 94: proto.playback.ValidateDRMTokenResponse.token_expires_at:type_name -> proto.common.DateTime
	75,  // 95: proto.playback.GetContentProtectionRequest.base_request:type_name -> proto.common.BaseRequest
	76,  // 96: proto.playback.GetContentProtectionResponse.base_response:type_name -> proto.common.BaseResponse
	61,  // 97: proto.playback.GetContentProtectionResponse.protection:type_name -> proto.playback.ContentProtection
	77,  // 98: proto.playback.PlaybackSession.created_at:type_name -> proto.common.DateTime
	77,  // 99: proto.playback.PlaybackSession.last_updated:type_name -> proto.common.DateTime
	77,  // 100: proto.playback.PlaybackSession.expires_at:type_name -> proto.common.DateTime
	69,  // 101: proto.playback.PlaybackSession.metadata:type_name -> proto.playback.PlaybackSession.MetadataEntry
	77,  // 102: proto.playback.PlaybackProgress.last_updated:type_name -> proto.common.DateTime
	70,  // 103: proto.playback.PlaybackProgress.metadata:type_name -> proto.playback.PlaybackProgress.MetadataEntry
	77,  // 104: proto.playback.StreamingMetrics.metrics_time:type_name -> proto.common.DateTime
	71,  // 105: proto.playback.QualitySegment.metadata:type_name -> proto.playback.QualitySegment.MetadataEntry
	53,  // 106: proto.playback.AdaptiveBitrateInfo.segments:type_name -> proto.playback.QualitySegment
	77,  // 107: proto.playback.MetricDataPoint.timestamp:type_name -> proto.common.DateTime
	72,  // 108: proto.playback.MetricDataPoint.dimensions:type_name -> proto.playback.MetricDataPoint.DimensionsEntry
	77,  // 109: proto.playback.AnalyticsMetric.metric_date:type_name -> proto.common.DateTime
	73,  // 110: proto.playback.AnalyticsMetric.dimensions:type_name -> proto.playback.AnalyticsMetric.DimensionsEntry
	60,  // 111: proto.playback.StreamingPerformance.metrics:type_name -> proto.playback.PerformanceMetric
	77,  // 112: proto.playback.PerformanceIssue.detected_at:type_name -> proto.common.DateTime
	77,  // 113: proto.playback.PerformanceMetric.measured_at:type_name -> proto.common.DateTime
	74,  // 114: proto.playback.ContentProtection.protection_params:type_name -> proto.playback.ContentProtection.ProtectionParamsEntry
	115, // [115:115] is the sub-list for method output_type
	115, // [115:115] is the sub-list for method input_type
	115, // [115:115] is the sub-list for extension type_name
	115, // [115:115] is the sub-list for extension extendee
	0,   // [0:115] is the sub-list for field type_name
}

func init() { file_playback_playback_req_res_proto_init() }
func file_playback_playback_req_res_proto_init() {
	if File_playback_playback_req_res_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_playback_playback_req_res_proto_rawDesc), len(file_playback_playback_req_res_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_playback_playback_req_res_proto_goTypes,
		DependencyIndexes: file_playback_playback_req_res_proto_depIdxs,
		MessageInfos:      file_playback_playback_req_res_proto_msgTypes,
	}.Build()
	File_playback_playback_req_res_proto = out.File
	file_playback_playback_req_res_proto_goTypes = nil
	file_playback_playback_req_res_proto_depIdxs = nil
}
