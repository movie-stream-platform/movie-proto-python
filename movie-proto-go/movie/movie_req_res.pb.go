// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: movie/movie_req_res.proto

package movie

import (
	common "github.com/movie-stream-platform/movie-proto-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Content rating enumeration
type ContentRating int32

const (
	ContentRating_CONTENT_RATING_UNSPECIFIED ContentRating = 0
	ContentRating_CONTENT_RATING_G           ContentRating = 1  // General audience
	ContentRating_CONTENT_RATING_PG          ContentRating = 2  // Parental guidance suggested
	ContentRating_CONTENT_RATING_PG13        ContentRating = 3  // Parents strongly cautioned
	ContentRating_CONTENT_RATING_R           ContentRating = 4  // Restricted
	ContentRating_CONTENT_RATING_NC17        ContentRating = 5  // Adults only
	ContentRating_CONTENT_RATING_TV_Y        ContentRating = 6  // All children
	ContentRating_CONTENT_RATING_TV_Y7       ContentRating = 7  // Directed to older children
	ContentRating_CONTENT_RATING_TV_G        ContentRating = 8  // General audience
	ContentRating_CONTENT_RATING_TV_PG       ContentRating = 9  // Parental guidance suggested
	ContentRating_CONTENT_RATING_TV_14       ContentRating = 10 // Parents strongly cautioned
	ContentRating_CONTENT_RATING_TV_MA       ContentRating = 11 // Mature audience only
)

// Enum value maps for ContentRating.
var (
	ContentRating_name = map[int32]string{
		0:  "CONTENT_RATING_UNSPECIFIED",
		1:  "CONTENT_RATING_G",
		2:  "CONTENT_RATING_PG",
		3:  "CONTENT_RATING_PG13",
		4:  "CONTENT_RATING_R",
		5:  "CONTENT_RATING_NC17",
		6:  "CONTENT_RATING_TV_Y",
		7:  "CONTENT_RATING_TV_Y7",
		8:  "CONTENT_RATING_TV_G",
		9:  "CONTENT_RATING_TV_PG",
		10: "CONTENT_RATING_TV_14",
		11: "CONTENT_RATING_TV_MA",
	}
	ContentRating_value = map[string]int32{
		"CONTENT_RATING_UNSPECIFIED": 0,
		"CONTENT_RATING_G":           1,
		"CONTENT_RATING_PG":          2,
		"CONTENT_RATING_PG13":        3,
		"CONTENT_RATING_R":           4,
		"CONTENT_RATING_NC17":        5,
		"CONTENT_RATING_TV_Y":        6,
		"CONTENT_RATING_TV_Y7":       7,
		"CONTENT_RATING_TV_G":        8,
		"CONTENT_RATING_TV_PG":       9,
		"CONTENT_RATING_TV_14":       10,
		"CONTENT_RATING_TV_MA":       11,
	}
)

func (x ContentRating) Enum() *ContentRating {
	p := new(ContentRating)
	*p = x
	return p
}

func (x ContentRating) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentRating) Descriptor() protoreflect.EnumDescriptor {
	return file_movie_movie_req_res_proto_enumTypes[0].Descriptor()
}

func (ContentRating) Type() protoreflect.EnumType {
	return &file_movie_movie_req_res_proto_enumTypes[0]
}

func (x ContentRating) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentRating.Descriptor instead.
func (ContentRating) EnumDescriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{0}
}

// Movie status enumeration
type MovieStatus int32

const (
	MovieStatus_MOVIE_STATUS_UNSPECIFIED MovieStatus = 0
	MovieStatus_MOVIE_STATUS_DRAFT       MovieStatus = 1 // Draft/In progress
	MovieStatus_MOVIE_STATUS_PUBLISHED   MovieStatus = 2 // Published and available
	MovieStatus_MOVIE_STATUS_ARCHIVED    MovieStatus = 3 // Archived/Not available
	MovieStatus_MOVIE_STATUS_DELETED     MovieStatus = 4 // Deleted
)

// Enum value maps for MovieStatus.
var (
	MovieStatus_name = map[int32]string{
		0: "MOVIE_STATUS_UNSPECIFIED",
		1: "MOVIE_STATUS_DRAFT",
		2: "MOVIE_STATUS_PUBLISHED",
		3: "MOVIE_STATUS_ARCHIVED",
		4: "MOVIE_STATUS_DELETED",
	}
	MovieStatus_value = map[string]int32{
		"MOVIE_STATUS_UNSPECIFIED": 0,
		"MOVIE_STATUS_DRAFT":       1,
		"MOVIE_STATUS_PUBLISHED":   2,
		"MOVIE_STATUS_ARCHIVED":    3,
		"MOVIE_STATUS_DELETED":     4,
	}
)

func (x MovieStatus) Enum() *MovieStatus {
	p := new(MovieStatus)
	*p = x
	return p
}

func (x MovieStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovieStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_movie_movie_req_res_proto_enumTypes[1].Descriptor()
}

func (MovieStatus) Type() protoreflect.EnumType {
	return &file_movie_movie_req_res_proto_enumTypes[1]
}

func (x MovieStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovieStatus.Descriptor instead.
func (MovieStatus) EnumDescriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{1}
}

// Movie entity
type Movie struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MovieId         string                 `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`                                                   // Unique movie identifier
	Title           string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                      // Movie title
	OriginalTitle   string                 `protobuf:"bytes,3,opt,name=original_title,json=originalTitle,proto3" json:"original_title,omitempty"`                                 // Original language title
	Description     string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                          // Movie description
	Synopsis        string                 `protobuf:"bytes,5,opt,name=synopsis,proto3" json:"synopsis,omitempty"`                                                                // Short synopsis
	ReleaseYear     int32                  `protobuf:"varint,6,opt,name=release_year,json=releaseYear,proto3" json:"release_year,omitempty"`                                      // Release year
	ReleaseDate     string                 `protobuf:"bytes,7,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`                                       // Full release date
	DurationMinutes int32                  `protobuf:"varint,8,opt,name=duration_minutes,json=durationMinutes,proto3" json:"duration_minutes,omitempty"`                          // Movie duration
	ContentRating   ContentRating          `protobuf:"varint,9,opt,name=content_rating,json=contentRating,proto3,enum=proto.movie.ContentRating" json:"content_rating,omitempty"` // Age/content rating
	Genres          []string               `protobuf:"bytes,10,rep,name=genres,proto3" json:"genres,omitempty"`                                                                   // Movie genres
	Languages       []string               `protobuf:"bytes,11,rep,name=languages,proto3" json:"languages,omitempty"`                                                             // Available languages
	Countries       []string               `protobuf:"bytes,12,rep,name=countries,proto3" json:"countries,omitempty"`                                                             // Production countries
	Status          MovieStatus            `protobuf:"varint,13,opt,name=status,proto3,enum=proto.movie.MovieStatus" json:"status,omitempty"`                                     // Draft/Published/Archived
	Cast            []*CastMember          `protobuf:"bytes,14,rep,name=cast,proto3" json:"cast,omitempty"`                                                                       // Cast information
	Crew            []*CrewMember          `protobuf:"bytes,15,rep,name=crew,proto3" json:"crew,omitempty"`                                                                       // Crew information
	Metadata        *MovieMetadata         `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty"`                                                               // Additional metadata
	CreatedAt       *common.DateTime       `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *common.DateTime       `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PublishedAt     *common.DateTime       `protobuf:"bytes,19,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Movie) Reset() {
	*x = Movie{}
	mi := &file_movie_movie_req_res_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{0}
}

func (x *Movie) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *Movie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Movie) GetOriginalTitle() string {
	if x != nil {
		return x.OriginalTitle
	}
	return ""
}

func (x *Movie) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Movie) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *Movie) GetReleaseYear() int32 {
	if x != nil {
		return x.ReleaseYear
	}
	return 0
}

func (x *Movie) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *Movie) GetDurationMinutes() int32 {
	if x != nil {
		return x.DurationMinutes
	}
	return 0
}

func (x *Movie) GetContentRating() ContentRating {
	if x != nil {
		return x.ContentRating
	}
	return ContentRating_CONTENT_RATING_UNSPECIFIED
}

func (x *Movie) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *Movie) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *Movie) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *Movie) GetStatus() MovieStatus {
	if x != nil {
		return x.Status
	}
	return MovieStatus_MOVIE_STATUS_UNSPECIFIED
}

func (x *Movie) GetCast() []*CastMember {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *Movie) GetCrew() []*CrewMember {
	if x != nil {
		return x.Crew
	}
	return nil
}

func (x *Movie) GetMetadata() *MovieMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Movie) GetCreatedAt() *common.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Movie) GetUpdatedAt() *common.DateTime {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Movie) GetPublishedAt() *common.DateTime {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

// Cast member information
type CastMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonId      string                 `protobuf:"bytes,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Character     string                 `protobuf:"bytes,3,opt,name=character,proto3" json:"character,omitempty"`
	Role          string                 `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`    // Lead/Supporting/Extra
	Order         int32                  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"` // Billing order
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CastMember) Reset() {
	*x = CastMember{}
	mi := &file_movie_movie_req_res_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CastMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastMember) ProtoMessage() {}

func (x *CastMember) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastMember.ProtoReflect.Descriptor instead.
func (*CastMember) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{1}
}

func (x *CastMember) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *CastMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CastMember) GetCharacter() string {
	if x != nil {
		return x.Character
	}
	return ""
}

func (x *CastMember) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *CastMember) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

// Crew member information
type CrewMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PersonId      string                 `protobuf:"bytes,1,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Job           string                 `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`               // Director/Producer/etc.
	Department    string                 `protobuf:"bytes,4,opt,name=department,proto3" json:"department,omitempty"` // Department
	Order         int32                  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`          // Credit order
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrewMember) Reset() {
	*x = CrewMember{}
	mi := &file_movie_movie_req_res_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrewMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrewMember) ProtoMessage() {}

func (x *CrewMember) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrewMember.ProtoReflect.Descriptor instead.
func (*CrewMember) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{2}
}

func (x *CrewMember) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *CrewMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CrewMember) GetJob() string {
	if x != nil {
		return x.Job
	}
	return ""
}

func (x *CrewMember) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *CrewMember) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

// Movie metadata
type MovieMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImdbId        string                 `protobuf:"bytes,1,opt,name=imdb_id,json=imdbId,proto3" json:"imdb_id,omitempty"`                                                                                             // IMDB identifier
	TmdbId        string                 `protobuf:"bytes,2,opt,name=tmdb_id,json=tmdbId,proto3" json:"tmdb_id,omitempty"`                                                                                             // TMDB identifier
	Rating        float32                `protobuf:"fixed32,3,opt,name=rating,proto3" json:"rating,omitempty"`                                                                                                         // Average rating
	RatingCount   int32                  `protobuf:"varint,4,opt,name=rating_count,json=ratingCount,proto3" json:"rating_count,omitempty"`                                                                             // Number of ratings
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                                                                                                               // User-generated tags
	CustomFields  map[string]string      `protobuf:"bytes,6,rep,name=custom_fields,json=customFields,proto3" json:"custom_fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Custom metadata fields
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovieMetadata) Reset() {
	*x = MovieMetadata{}
	mi := &file_movie_movie_req_res_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovieMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieMetadata) ProtoMessage() {}

func (x *MovieMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieMetadata.ProtoReflect.Descriptor instead.
func (*MovieMetadata) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{3}
}

func (x *MovieMetadata) GetImdbId() string {
	if x != nil {
		return x.ImdbId
	}
	return ""
}

func (x *MovieMetadata) GetTmdbId() string {
	if x != nil {
		return x.TmdbId
	}
	return ""
}

func (x *MovieMetadata) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *MovieMetadata) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *MovieMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MovieMetadata) GetCustomFields() map[string]string {
	if x != nil {
		return x.CustomFields
	}
	return nil
}

// Create movie request
type CreateMovieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                                 // Movie title
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                     // Movie description
	ReleaseYear   int32                  `protobuf:"varint,4,opt,name=release_year,json=releaseYear,proto3" json:"release_year,omitempty"`                                                 // Release year
	Genres        []string               `protobuf:"bytes,5,rep,name=genres,proto3" json:"genres,omitempty"`                                                                               // Movie genres
	ContentRating ContentRating          `protobuf:"varint,6,opt,name=content_rating,json=contentRating,proto3,enum=proto.movie.ContentRating" json:"content_rating,omitempty"`            // Content rating
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieRequest) Reset() {
	*x = CreateMovieRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieRequest) ProtoMessage() {}

func (x *CreateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieRequest.ProtoReflect.Descriptor instead.
func (*CreateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMovieRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *CreateMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateMovieRequest) GetReleaseYear() int32 {
	if x != nil {
		return x.ReleaseYear
	}
	return 0
}

func (x *CreateMovieRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *CreateMovieRequest) GetContentRating() ContentRating {
	if x != nil {
		return x.ContentRating
	}
	return ContentRating_CONTENT_RATING_UNSPECIFIED
}

func (x *CreateMovieRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Create movie response
type CreateMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movie         *Movie                 `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"` // Created movie
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMovieResponse) Reset() {
	*x = CreateMovieResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovieResponse) ProtoMessage() {}

func (x *CreateMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovieResponse.ProtoReflect.Descriptor instead.
func (*CreateMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{5}
}

func (x *CreateMovieResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *CreateMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

// Get movie request
type GetMovieRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest     *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieId         string                 `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`                          // Movie ID to retrieve
	IncludeCast     bool                   `protobuf:"varint,3,opt,name=include_cast,json=includeCast,proto3" json:"include_cast,omitempty"`             // Include cast information
	IncludeCrew     bool                   `protobuf:"varint,4,opt,name=include_crew,json=includeCrew,proto3" json:"include_crew,omitempty"`             // Include crew information
	IncludeMetadata bool                   `protobuf:"varint,5,opt,name=include_metadata,json=includeMetadata,proto3" json:"include_metadata,omitempty"` // Include metadata
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMovieRequest) Reset() {
	*x = GetMovieRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieRequest) ProtoMessage() {}

func (x *GetMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieRequest.ProtoReflect.Descriptor instead.
func (*GetMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{6}
}

func (x *GetMovieRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetMovieRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *GetMovieRequest) GetIncludeCast() bool {
	if x != nil {
		return x.IncludeCast
	}
	return false
}

func (x *GetMovieRequest) GetIncludeCrew() bool {
	if x != nil {
		return x.IncludeCrew
	}
	return false
}

func (x *GetMovieRequest) GetIncludeMetadata() bool {
	if x != nil {
		return x.IncludeMetadata
	}
	return false
}

// Get movie response
type GetMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movie         *Movie                 `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"` // Movie information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovieResponse) Reset() {
	*x = GetMovieResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieResponse) ProtoMessage() {}

func (x *GetMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieResponse.ProtoReflect.Descriptor instead.
func (*GetMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{7}
}

func (x *GetMovieResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

// Update movie request
type UpdateMovieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieId       string                 `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`                                                              // Movie ID to update
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                                                                 // New title
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`                                                                     // New description
	Genres        []string               `protobuf:"bytes,5,rep,name=genres,proto3" json:"genres,omitempty"`                                                                               // New genres
	ContentRating ContentRating          `protobuf:"varint,6,opt,name=content_rating,json=contentRating,proto3,enum=proto.movie.ContentRating" json:"content_rating,omitempty"`            // New content rating
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Updated metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMovieRequest) Reset() {
	*x = UpdateMovieRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieRequest) ProtoMessage() {}

func (x *UpdateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateMovieRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *UpdateMovieRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *UpdateMovieRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMovieRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMovieRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *UpdateMovieRequest) GetContentRating() ContentRating {
	if x != nil {
		return x.ContentRating
	}
	return ContentRating_CONTENT_RATING_UNSPECIFIED
}

func (x *UpdateMovieRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Update movie response
type UpdateMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movie         *Movie                 `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"` // Updated movie
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMovieResponse) Reset() {
	*x = UpdateMovieResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovieResponse) ProtoMessage() {}

func (x *UpdateMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovieResponse.ProtoReflect.Descriptor instead.
func (*UpdateMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateMovieResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UpdateMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

// Delete movie request
type DeleteMovieRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest     *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieId         string                 `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`                          // Movie ID to delete
	PermanentDelete bool                   `protobuf:"varint,3,opt,name=permanent_delete,json=permanentDelete,proto3" json:"permanent_delete,omitempty"` // Whether to permanently delete
	Reason          string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                                           // Reason for deletion
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteMovieRequest) Reset() {
	*x = DeleteMovieRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieRequest) ProtoMessage() {}

func (x *DeleteMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteMovieRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *DeleteMovieRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *DeleteMovieRequest) GetPermanentDelete() bool {
	if x != nil {
		return x.PermanentDelete
	}
	return false
}

func (x *DeleteMovieRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Delete movie response
type DeleteMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Deleted       bool                   `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`                     // Whether movie was deleted
	DeletedAt     *common.DateTime       `protobuf:"bytes,3,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"` // Deletion timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMovieResponse) Reset() {
	*x = DeleteMovieResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovieResponse) ProtoMessage() {}

func (x *DeleteMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovieResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMovieResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *DeleteMovieResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *DeleteMovieResponse) GetDeletedAt() *common.DateTime {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

// Get movies by IDs request
type GetMoviesByIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieIds      []string               `protobuf:"bytes,2,rep,name=movie_ids,json=movieIds,proto3" json:"movie_ids,omitempty"`           // List of movie IDs
	IncludeCast   bool                   `protobuf:"varint,3,opt,name=include_cast,json=includeCast,proto3" json:"include_cast,omitempty"` // Include cast information
	IncludeCrew   bool                   `protobuf:"varint,4,opt,name=include_crew,json=includeCrew,proto3" json:"include_crew,omitempty"` // Include crew information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMoviesByIDsRequest) Reset() {
	*x = GetMoviesByIDsRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMoviesByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoviesByIDsRequest) ProtoMessage() {}

func (x *GetMoviesByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoviesByIDsRequest.ProtoReflect.Descriptor instead.
func (*GetMoviesByIDsRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{12}
}

func (x *GetMoviesByIDsRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetMoviesByIDsRequest) GetMovieIds() []string {
	if x != nil {
		return x.MovieIds
	}
	return nil
}

func (x *GetMoviesByIDsRequest) GetIncludeCast() bool {
	if x != nil {
		return x.IncludeCast
	}
	return false
}

func (x *GetMoviesByIDsRequest) GetIncludeCrew() bool {
	if x != nil {
		return x.IncludeCrew
	}
	return false
}

// Get movies by IDs response
type GetMoviesByIDsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movies        []*Movie               `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"` // Movie information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMoviesByIDsResponse) Reset() {
	*x = GetMoviesByIDsResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMoviesByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMoviesByIDsResponse) ProtoMessage() {}

func (x *GetMoviesByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMoviesByIDsResponse.ProtoReflect.Descriptor instead.
func (*GetMoviesByIDsResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{13}
}

func (x *GetMoviesByIDsResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetMoviesByIDsResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

// Bulk update movies request
type BulkUpdateMoviesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieIds      []string               `protobuf:"bytes,2,rep,name=movie_ids,json=movieIds,proto3" json:"movie_ids,omitempty"`                                                         // Movie IDs to update
	Updates       map[string]string      `protobuf:"bytes,3,rep,name=updates,proto3" json:"updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Field updates
	NewRating     ContentRating          `protobuf:"varint,4,opt,name=new_rating,json=newRating,proto3,enum=proto.movie.ContentRating" json:"new_rating,omitempty"`                      // New content rating
	NewStatus     MovieStatus            `protobuf:"varint,5,opt,name=new_status,json=newStatus,proto3,enum=proto.movie.MovieStatus" json:"new_status,omitempty"`                        // New status
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BulkUpdateMoviesRequest) Reset() {
	*x = BulkUpdateMoviesRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkUpdateMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateMoviesRequest) ProtoMessage() {}

func (x *BulkUpdateMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateMoviesRequest.ProtoReflect.Descriptor instead.
func (*BulkUpdateMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{14}
}

func (x *BulkUpdateMoviesRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *BulkUpdateMoviesRequest) GetMovieIds() []string {
	if x != nil {
		return x.MovieIds
	}
	return nil
}

func (x *BulkUpdateMoviesRequest) GetUpdates() map[string]string {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *BulkUpdateMoviesRequest) GetNewRating() ContentRating {
	if x != nil {
		return x.NewRating
	}
	return ContentRating_CONTENT_RATING_UNSPECIFIED
}

func (x *BulkUpdateMoviesRequest) GetNewStatus() MovieStatus {
	if x != nil {
		return x.NewStatus
	}
	return MovieStatus_MOVIE_STATUS_UNSPECIFIED
}

// Bulk update movies response
type BulkUpdateMoviesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	UpdatedCount    int32                  `protobuf:"varint,2,opt,name=updated_count,json=updatedCount,proto3" json:"updated_count,omitempty"`           // Number of movies updated
	UpdatedMovieIds []string               `protobuf:"bytes,3,rep,name=updated_movie_ids,json=updatedMovieIds,proto3" json:"updated_movie_ids,omitempty"` // IDs of updated movies
	FailedMovieIds  []string               `protobuf:"bytes,4,rep,name=failed_movie_ids,json=failedMovieIds,proto3" json:"failed_movie_ids,omitempty"`    // IDs of failed updates
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BulkUpdateMoviesResponse) Reset() {
	*x = BulkUpdateMoviesResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkUpdateMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkUpdateMoviesResponse) ProtoMessage() {}

func (x *BulkUpdateMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkUpdateMoviesResponse.ProtoReflect.Descriptor instead.
func (*BulkUpdateMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{15}
}

func (x *BulkUpdateMoviesResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *BulkUpdateMoviesResponse) GetUpdatedCount() int32 {
	if x != nil {
		return x.UpdatedCount
	}
	return 0
}

func (x *BulkUpdateMoviesResponse) GetUpdatedMovieIds() []string {
	if x != nil {
		return x.UpdatedMovieIds
	}
	return nil
}

func (x *BulkUpdateMoviesResponse) GetFailedMovieIds() []string {
	if x != nil {
		return x.FailedMovieIds
	}
	return nil
}

// Bulk delete movies request
type BulkDeleteMoviesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest     *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieIds        []string               `protobuf:"bytes,2,rep,name=movie_ids,json=movieIds,proto3" json:"movie_ids,omitempty"`                       // Movie IDs to delete
	PermanentDelete bool                   `protobuf:"varint,3,opt,name=permanent_delete,json=permanentDelete,proto3" json:"permanent_delete,omitempty"` // Whether to permanently delete
	Reason          string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                                           // Reason for deletion
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BulkDeleteMoviesRequest) Reset() {
	*x = BulkDeleteMoviesRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkDeleteMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDeleteMoviesRequest) ProtoMessage() {}

func (x *BulkDeleteMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDeleteMoviesRequest.ProtoReflect.Descriptor instead.
func (*BulkDeleteMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{16}
}

func (x *BulkDeleteMoviesRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *BulkDeleteMoviesRequest) GetMovieIds() []string {
	if x != nil {
		return x.MovieIds
	}
	return nil
}

func (x *BulkDeleteMoviesRequest) GetPermanentDelete() bool {
	if x != nil {
		return x.PermanentDelete
	}
	return false
}

func (x *BulkDeleteMoviesRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Bulk delete movies response
type BulkDeleteMoviesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	DeletedCount    int32                  `protobuf:"varint,2,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`           // Number of movies deleted
	DeletedMovieIds []string               `protobuf:"bytes,3,rep,name=deleted_movie_ids,json=deletedMovieIds,proto3" json:"deleted_movie_ids,omitempty"` // IDs of deleted movies
	FailedMovieIds  []string               `protobuf:"bytes,4,rep,name=failed_movie_ids,json=failedMovieIds,proto3" json:"failed_movie_ids,omitempty"`    // IDs of failed deletions
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BulkDeleteMoviesResponse) Reset() {
	*x = BulkDeleteMoviesResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkDeleteMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDeleteMoviesResponse) ProtoMessage() {}

func (x *BulkDeleteMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDeleteMoviesResponse.ProtoReflect.Descriptor instead.
func (*BulkDeleteMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{17}
}

func (x *BulkDeleteMoviesResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *BulkDeleteMoviesResponse) GetDeletedCount() int32 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *BulkDeleteMoviesResponse) GetDeletedMovieIds() []string {
	if x != nil {
		return x.DeletedMovieIds
	}
	return nil
}

func (x *BulkDeleteMoviesResponse) GetFailedMovieIds() []string {
	if x != nil {
		return x.FailedMovieIds
	}
	return nil
}

// Validate movie request
type ValidateMovieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	Movie         *Movie                 `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"` // Movie to validate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateMovieRequest) Reset() {
	*x = ValidateMovieRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMovieRequest) ProtoMessage() {}

func (x *ValidateMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMovieRequest.ProtoReflect.Descriptor instead.
func (*ValidateMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{18}
}

func (x *ValidateMovieRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *ValidateMovieRequest) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

// Validate movie response
type ValidateMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Valid         bool                   `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`      // Whether movie is valid
	Errors        []string               `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`     // Validation errors
	Warnings      []string               `protobuf:"bytes,4,rep,name=warnings,proto3" json:"warnings,omitempty"` // Validation warnings
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateMovieResponse) Reset() {
	*x = ValidateMovieResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateMovieResponse) ProtoMessage() {}

func (x *ValidateMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateMovieResponse.ProtoReflect.Descriptor instead.
func (*ValidateMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{19}
}

func (x *ValidateMovieResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *ValidateMovieResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ValidateMovieResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ValidateMovieResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

// Publish movie request
type PublishMovieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieId       string                 `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`             // Movie ID to publish
	PublishDate   *common.DateTime       `protobuf:"bytes,3,opt,name=publish_date,json=publishDate,proto3" json:"publish_date,omitempty"` // When to publish
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishMovieRequest) Reset() {
	*x = PublishMovieRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMovieRequest) ProtoMessage() {}

func (x *PublishMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMovieRequest.ProtoReflect.Descriptor instead.
func (*PublishMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{20}
}

func (x *PublishMovieRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *PublishMovieRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *PublishMovieRequest) GetPublishDate() *common.DateTime {
	if x != nil {
		return x.PublishDate
	}
	return nil
}

// Publish movie response
type PublishMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movie         *Movie                 `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"`                                // Published movie
	PublishedAt   *common.DateTime       `protobuf:"bytes,3,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"` // Publication timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishMovieResponse) Reset() {
	*x = PublishMovieResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishMovieResponse) ProtoMessage() {}

func (x *PublishMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishMovieResponse.ProtoReflect.Descriptor instead.
func (*PublishMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{21}
}

func (x *PublishMovieResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *PublishMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

func (x *PublishMovieResponse) GetPublishedAt() *common.DateTime {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

// Unpublish movie request
type UnpublishMovieRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieId       string                 `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"` // Movie ID to unpublish
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                  // Reason for unpublishing
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpublishMovieRequest) Reset() {
	*x = UnpublishMovieRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpublishMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishMovieRequest) ProtoMessage() {}

func (x *UnpublishMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishMovieRequest.ProtoReflect.Descriptor instead.
func (*UnpublishMovieRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{22}
}

func (x *UnpublishMovieRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *UnpublishMovieRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *UnpublishMovieRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Unpublish movie response
type UnpublishMovieResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movie         *Movie                 `protobuf:"bytes,2,opt,name=movie,proto3" json:"movie,omitempty"`                                      // Unpublished movie
	UnpublishedAt *common.DateTime       `protobuf:"bytes,3,opt,name=unpublished_at,json=unpublishedAt,proto3" json:"unpublished_at,omitempty"` // Unpublication timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpublishMovieResponse) Reset() {
	*x = UnpublishMovieResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpublishMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishMovieResponse) ProtoMessage() {}

func (x *UnpublishMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishMovieResponse.ProtoReflect.Descriptor instead.
func (*UnpublishMovieResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{23}
}

func (x *UnpublishMovieResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *UnpublishMovieResponse) GetMovie() *Movie {
	if x != nil {
		return x.Movie
	}
	return nil
}

func (x *UnpublishMovieResponse) GetUnpublishedAt() *common.DateTime {
	if x != nil {
		return x.UnpublishedAt
	}
	return nil
}

// Search movies request
type SearchMoviesRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest       `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	Query         string                    `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`                                                          // Search query
	Genres        []string                  `protobuf:"bytes,3,rep,name=genres,proto3" json:"genres,omitempty"`                                                        // Genre filters
	Languages     []string                  `protobuf:"bytes,4,rep,name=languages,proto3" json:"languages,omitempty"`                                                  // Language filters
	MinYear       int32                     `protobuf:"varint,5,opt,name=min_year,json=minYear,proto3" json:"min_year,omitempty"`                                      // Minimum release year
	MaxYear       int32                     `protobuf:"varint,6,opt,name=max_year,json=maxYear,proto3" json:"max_year,omitempty"`                                      // Maximum release year
	MaxRating     ContentRating             `protobuf:"varint,7,opt,name=max_rating,json=maxRating,proto3,enum=proto.movie.ContentRating" json:"max_rating,omitempty"` // Maximum content rating
	Pagination    *common.PaginationRequest `protobuf:"bytes,8,opt,name=pagination,proto3" json:"pagination,omitempty"`                                                // Pagination options
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMoviesRequest) Reset() {
	*x = SearchMoviesRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMoviesRequest) ProtoMessage() {}

func (x *SearchMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMoviesRequest.ProtoReflect.Descriptor instead.
func (*SearchMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{24}
}

func (x *SearchMoviesRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *SearchMoviesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchMoviesRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *SearchMoviesRequest) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *SearchMoviesRequest) GetMinYear() int32 {
	if x != nil {
		return x.MinYear
	}
	return 0
}

func (x *SearchMoviesRequest) GetMaxYear() int32 {
	if x != nil {
		return x.MaxYear
	}
	return 0
}

func (x *SearchMoviesRequest) GetMaxRating() ContentRating {
	if x != nil {
		return x.MaxRating
	}
	return ContentRating_CONTENT_RATING_UNSPECIFIED
}

func (x *SearchMoviesRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Search movies response
type SearchMoviesResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse       `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movies        []*Movie                   `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"`                            // Search results
	Pagination    *common.PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`                    // Pagination information
	TotalCount    int64                      `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // Total matching movies
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMoviesResponse) Reset() {
	*x = SearchMoviesResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMoviesResponse) ProtoMessage() {}

func (x *SearchMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMoviesResponse.ProtoReflect.Descriptor instead.
func (*SearchMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{25}
}

func (x *SearchMoviesResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *SearchMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *SearchMoviesResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SearchMoviesResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// Get popular movies request
type GetPopularMoviesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                            // Number of movies to return
	Genres        []string               `protobuf:"bytes,3,rep,name=genres,proto3" json:"genres,omitempty"`                           // Genre filters
	TimePeriod    string                 `protobuf:"bytes,4,opt,name=time_period,json=timePeriod,proto3" json:"time_period,omitempty"` // Time period (week/month/year)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPopularMoviesRequest) Reset() {
	*x = GetPopularMoviesRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPopularMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPopularMoviesRequest) ProtoMessage() {}

func (x *GetPopularMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPopularMoviesRequest.ProtoReflect.Descriptor instead.
func (*GetPopularMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{26}
}

func (x *GetPopularMoviesRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetPopularMoviesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPopularMoviesRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *GetPopularMoviesRequest) GetTimePeriod() string {
	if x != nil {
		return x.TimePeriod
	}
	return ""
}

// Get popular movies response
type GetPopularMoviesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movies        []*Movie               `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"` // Popular movies
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPopularMoviesResponse) Reset() {
	*x = GetPopularMoviesResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPopularMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPopularMoviesResponse) ProtoMessage() {}

func (x *GetPopularMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPopularMoviesResponse.ProtoReflect.Descriptor instead.
func (*GetPopularMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{27}
}

func (x *GetPopularMoviesResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetPopularMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

// Get trending movies request
type GetTrendingMoviesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                            // Number of movies to return
	TimePeriod    string                 `protobuf:"bytes,3,opt,name=time_period,json=timePeriod,proto3" json:"time_period,omitempty"` // Time period (day/week)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrendingMoviesRequest) Reset() {
	*x = GetTrendingMoviesRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrendingMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendingMoviesRequest) ProtoMessage() {}

func (x *GetTrendingMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendingMoviesRequest.ProtoReflect.Descriptor instead.
func (*GetTrendingMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{28}
}

func (x *GetTrendingMoviesRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetTrendingMoviesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetTrendingMoviesRequest) GetTimePeriod() string {
	if x != nil {
		return x.TimePeriod
	}
	return ""
}

// Get trending movies response
type GetTrendingMoviesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse  *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movies        []*Movie               `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"` // Trending movies
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrendingMoviesResponse) Reset() {
	*x = GetTrendingMoviesResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrendingMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrendingMoviesResponse) ProtoMessage() {}

func (x *GetTrendingMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrendingMoviesResponse.ProtoReflect.Descriptor instead.
func (*GetTrendingMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{29}
}

func (x *GetTrendingMoviesResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetTrendingMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

// Get similar movies request
type GetSimilarMoviesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseRequest   *common.BaseRequest    `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	MovieId       string                 `protobuf:"bytes,2,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`          // Movie ID to find similar for
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                            // Number of similar movies
	ExcludeIds    []string               `protobuf:"bytes,4,rep,name=exclude_ids,json=excludeIds,proto3" json:"exclude_ids,omitempty"` // Movie IDs to exclude
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSimilarMoviesRequest) Reset() {
	*x = GetSimilarMoviesRequest{}
	mi := &file_movie_movie_req_res_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSimilarMoviesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimilarMoviesRequest) ProtoMessage() {}

func (x *GetSimilarMoviesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimilarMoviesRequest.ProtoReflect.Descriptor instead.
func (*GetSimilarMoviesRequest) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{30}
}

func (x *GetSimilarMoviesRequest) GetBaseRequest() *common.BaseRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *GetSimilarMoviesRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

func (x *GetSimilarMoviesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSimilarMoviesRequest) GetExcludeIds() []string {
	if x != nil {
		return x.ExcludeIds
	}
	return nil
}

// Get similar movies response
type GetSimilarMoviesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BaseResponse    *common.BaseResponse   `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Movies          []*Movie               `protobuf:"bytes,2,rep,name=movies,proto3" json:"movies,omitempty"`                                            // Similar movies
	SimilarityScore float32                `protobuf:"fixed32,3,opt,name=similarity_score,json=similarityScore,proto3" json:"similarity_score,omitempty"` // Overall similarity score
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSimilarMoviesResponse) Reset() {
	*x = GetSimilarMoviesResponse{}
	mi := &file_movie_movie_req_res_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSimilarMoviesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSimilarMoviesResponse) ProtoMessage() {}

func (x *GetSimilarMoviesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_movie_movie_req_res_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSimilarMoviesResponse.ProtoReflect.Descriptor instead.
func (*GetSimilarMoviesResponse) Descriptor() ([]byte, []int) {
	return file_movie_movie_req_res_proto_rawDescGZIP(), []int{31}
}

func (x *GetSimilarMoviesResponse) GetBaseResponse() *common.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

func (x *GetSimilarMoviesResponse) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

func (x *GetSimilarMoviesResponse) GetSimilarityScore() float32 {
	if x != nil {
		return x.SimilarityScore
	}
	return 0
}

var File_movie_movie_req_res_proto protoreflect.FileDescriptor

const file_movie_movie_req_res_proto_rawDesc = "" +
	"\n" +
	"\x19movie/movie_req_res.proto\x12\vproto.movie\x1a\x19common/base_request.proto\x1a\x1acommon/base_response.proto\x1a\x19common/common_types.proto\x1a\x17common/pagination.proto\"\x92\x06\n" +
	"\x05Movie\x12\x19\n" +
	"\bmovie_id\x18\x01 \x01(\tR\amovieId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12%\n" +
	"\x0eoriginal_title\x18\x03 \x01(\tR\roriginalTitle\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bsynopsis\x18\x05 \x01(\tR\bsynopsis\x12!\n" +
	"\frelease_year\x18\x06 \x01(\x05R\vreleaseYear\x12!\n" +
	"\frelease_date\x18\a \x01(\tR\vreleaseDate\x12)\n" +
	"\x10duration_minutes\x18\b \x01(\x05R\x0fdurationMinutes\x12A\n" +
	"\x0econtent_rating\x18\t \x01(\x0e2\x1a.proto.movie.ContentRatingR\rcontentRating\x12\x16\n" +
	"\x06genres\x18\n" +
	" \x03(\tR\x06genres\x12\x1c\n" +
	"\tlanguages\x18\v \x03(\tR\tlanguages\x12\x1c\n" +
	"\tcountries\x18\f \x03(\tR\tcountries\x120\n" +
	"\x06status\x18\r \x01(\x0e2\x18.proto.movie.MovieStatusR\x06status\x12+\n" +
	"\x04cast\x18\x0e \x03(\v2\x17.proto.movie.CastMemberR\x04cast\x12+\n" +
	"\x04crew\x18\x0f \x03(\v2\x17.proto.movie.CrewMemberR\x04crew\x126\n" +
	"\bmetadata\x18\x10 \x01(\v2\x1a.proto.movie.MovieMetadataR\bmetadata\x125\n" +
	"\n" +
	"created_at\x18\x11 \x01(\v2\x16.proto.common.DateTimeR\tcreatedAt\x125\n" +
	"\n" +
	"updated_at\x18\x12 \x01(\v2\x16.proto.common.DateTimeR\tupdatedAt\x129\n" +
	"\fpublished_at\x18\x13 \x01(\v2\x16.proto.common.DateTimeR\vpublishedAt\"\x85\x01\n" +
	"\n" +
	"CastMember\x12\x1b\n" +
	"\tperson_id\x18\x01 \x01(\tR\bpersonId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n" +
	"\tcharacter\x18\x03 \x01(\tR\tcharacter\x12\x12\n" +
	"\x04role\x18\x04 \x01(\tR\x04role\x12\x14\n" +
	"\x05order\x18\x05 \x01(\x05R\x05order\"\x85\x01\n" +
	"\n" +
	"CrewMember\x12\x1b\n" +
	"\tperson_id\x18\x01 \x01(\tR\bpersonId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03job\x18\x03 \x01(\tR\x03job\x12\x1e\n" +
	"\n" +
	"department\x18\x04 \x01(\tR\n" +
	"department\x12\x14\n" +
	"\x05order\x18\x05 \x01(\x05R\x05order\"\xa4\x02\n" +
	"\rMovieMetadata\x12\x17\n" +
	"\aimdb_id\x18\x01 \x01(\tR\x06imdbId\x12\x17\n" +
	"\atmdb_id\x18\x02 \x01(\tR\x06tmdbId\x12\x16\n" +
	"\x06rating\x18\x03 \x01(\x02R\x06rating\x12!\n" +
	"\frating_count\x18\x04 \x01(\x05R\vratingCount\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12Q\n" +
	"\rcustom_fields\x18\x06 \x03(\v2,.proto.movie.MovieMetadata.CustomFieldsEntryR\fcustomFields\x1a?\n" +
	"\x11CustomFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x03\n" +
	"\x12CreateMovieRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12!\n" +
	"\frelease_year\x18\x04 \x01(\x05R\vreleaseYear\x12\x16\n" +
	"\x06genres\x18\x05 \x03(\tR\x06genres\x12A\n" +
	"\x0econtent_rating\x18\x06 \x01(\x0e2\x1a.proto.movie.ContentRatingR\rcontentRating\x12I\n" +
	"\bmetadata\x18\a \x03(\v2-.proto.movie.CreateMovieRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x01\n" +
	"\x13CreateMovieResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12(\n" +
	"\x05movie\x18\x02 \x01(\v2\x12.proto.movie.MovieR\x05movie\"\xdb\x01\n" +
	"\x0fGetMovieRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x19\n" +
	"\bmovie_id\x18\x02 \x01(\tR\amovieId\x12!\n" +
	"\finclude_cast\x18\x03 \x01(\bR\vincludeCast\x12!\n" +
	"\finclude_crew\x18\x04 \x01(\bR\vincludeCrew\x12)\n" +
	"\x10include_metadata\x18\x05 \x01(\bR\x0fincludeMetadata\"}\n" +
	"\x10GetMovieResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12(\n" +
	"\x05movie\x18\x02 \x01(\v2\x12.proto.movie.MovieR\x05movie\"\x88\x03\n" +
	"\x12UpdateMovieRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x19\n" +
	"\bmovie_id\x18\x02 \x01(\tR\amovieId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06genres\x18\x05 \x03(\tR\x06genres\x12A\n" +
	"\x0econtent_rating\x18\x06 \x01(\x0e2\x1a.proto.movie.ContentRatingR\rcontentRating\x12I\n" +
	"\bmetadata\x18\a \x03(\v2-.proto.movie.UpdateMovieRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x01\n" +
	"\x13UpdateMovieResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12(\n" +
	"\x05movie\x18\x02 \x01(\v2\x12.proto.movie.MovieR\x05movie\"\xb0\x01\n" +
	"\x12DeleteMovieRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x19\n" +
	"\bmovie_id\x18\x02 \x01(\tR\amovieId\x12)\n" +
	"\x10permanent_delete\x18\x03 \x01(\bR\x0fpermanentDelete\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\xa7\x01\n" +
	"\x13DeleteMovieResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12\x18\n" +
	"\adeleted\x18\x02 \x01(\bR\adeleted\x125\n" +
	"\n" +
	"deleted_at\x18\x03 \x01(\v2\x16.proto.common.DateTimeR\tdeletedAt\"\xb8\x01\n" +
	"\x15GetMoviesByIDsRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1b\n" +
	"\tmovie_ids\x18\x02 \x03(\tR\bmovieIds\x12!\n" +
	"\finclude_cast\x18\x03 \x01(\bR\vincludeCast\x12!\n" +
	"\finclude_crew\x18\x04 \x01(\bR\vincludeCrew\"\x85\x01\n" +
	"\x16GetMoviesByIDsResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12*\n" +
	"\x06movies\x18\x02 \x03(\v2\x12.proto.movie.MovieR\x06movies\"\xf1\x02\n" +
	"\x17BulkUpdateMoviesRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1b\n" +
	"\tmovie_ids\x18\x02 \x03(\tR\bmovieIds\x12K\n" +
	"\aupdates\x18\x03 \x03(\v21.proto.movie.BulkUpdateMoviesRequest.UpdatesEntryR\aupdates\x129\n" +
	"\n" +
	"new_rating\x18\x04 \x01(\x0e2\x1a.proto.movie.ContentRatingR\tnewRating\x127\n" +
	"\n" +
	"new_status\x18\x05 \x01(\x0e2\x18.proto.movie.MovieStatusR\tnewStatus\x1a:\n" +
	"\fUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd6\x01\n" +
	"\x18BulkUpdateMoviesResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12#\n" +
	"\rupdated_count\x18\x02 \x01(\x05R\fupdatedCount\x12*\n" +
	"\x11updated_movie_ids\x18\x03 \x03(\tR\x0fupdatedMovieIds\x12(\n" +
	"\x10failed_movie_ids\x18\x04 \x03(\tR\x0efailedMovieIds\"\xb7\x01\n" +
	"\x17BulkDeleteMoviesRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x1b\n" +
	"\tmovie_ids\x18\x02 \x03(\tR\bmovieIds\x12)\n" +
	"\x10permanent_delete\x18\x03 \x01(\bR\x0fpermanentDelete\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\xd6\x01\n" +
	"\x18BulkDeleteMoviesResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12#\n" +
	"\rdeleted_count\x18\x02 \x01(\x05R\fdeletedCount\x12*\n" +
	"\x11deleted_movie_ids\x18\x03 \x03(\tR\x0fdeletedMovieIds\x12(\n" +
	"\x10failed_movie_ids\x18\x04 \x03(\tR\x0efailedMovieIds\"~\n" +
	"\x14ValidateMovieRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12(\n" +
	"\x05movie\x18\x02 \x01(\v2\x12.proto.movie.MovieR\x05movie\"\xa2\x01\n" +
	"\x15ValidateMovieResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12\x14\n" +
	"\x05valid\x18\x02 \x01(\bR\x05valid\x12\x16\n" +
	"\x06errors\x18\x03 \x03(\tR\x06errors\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarnings\"\xa9\x01\n" +
	"\x13PublishMovieRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x19\n" +
	"\bmovie_id\x18\x02 \x01(\tR\amovieId\x129\n" +
	"\fpublish_date\x18\x03 \x01(\v2\x16.proto.common.DateTimeR\vpublishDate\"\xbc\x01\n" +
	"\x14PublishMovieResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12(\n" +
	"\x05movie\x18\x02 \x01(\v2\x12.proto.movie.MovieR\x05movie\x129\n" +
	"\fpublished_at\x18\x03 \x01(\v2\x16.proto.common.DateTimeR\vpublishedAt\"\x88\x01\n" +
	"\x15UnpublishMovieRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x19\n" +
	"\bmovie_id\x18\x02 \x01(\tR\amovieId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\xc2\x01\n" +
	"\x16UnpublishMovieResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12(\n" +
	"\x05movie\x18\x02 \x01(\v2\x12.proto.movie.MovieR\x05movie\x12=\n" +
	"\x0eunpublished_at\x18\x03 \x01(\v2\x16.proto.common.DateTimeR\runpublishedAt\"\xd1\x02\n" +
	"\x13SearchMoviesRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x16\n" +
	"\x06genres\x18\x03 \x03(\tR\x06genres\x12\x1c\n" +
	"\tlanguages\x18\x04 \x03(\tR\tlanguages\x12\x19\n" +
	"\bmin_year\x18\x05 \x01(\x05R\aminYear\x12\x19\n" +
	"\bmax_year\x18\x06 \x01(\x05R\amaxYear\x129\n" +
	"\n" +
	"max_rating\x18\a \x01(\x0e2\x1a.proto.movie.ContentRatingR\tmaxRating\x12?\n" +
	"\n" +
	"pagination\x18\b \x01(\v2\x1f.proto.common.PaginationRequestR\n" +
	"pagination\"\xe6\x01\n" +
	"\x14SearchMoviesResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12*\n" +
	"\x06movies\x18\x02 \x03(\v2\x12.proto.movie.MovieR\x06movies\x12@\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2 .proto.common.PaginationResponseR\n" +
	"pagination\x12\x1f\n" +
	"\vtotal_count\x18\x04 \x01(\x03R\n" +
	"totalCount\"\xa6\x01\n" +
	"\x17GetPopularMoviesRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06genres\x18\x03 \x03(\tR\x06genres\x12\x1f\n" +
	"\vtime_period\x18\x04 \x01(\tR\n" +
	"timePeriod\"\x87\x01\n" +
	"\x18GetPopularMoviesResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12*\n" +
	"\x06movies\x18\x02 \x03(\v2\x12.proto.movie.MovieR\x06movies\"\x8f\x01\n" +
	"\x18GetTrendingMoviesRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vtime_period\x18\x03 \x01(\tR\n" +
	"timePeriod\"\x88\x01\n" +
	"\x19GetTrendingMoviesResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12*\n" +
	"\x06movies\x18\x02 \x03(\v2\x12.proto.movie.MovieR\x06movies\"\xa9\x01\n" +
	"\x17GetSimilarMoviesRequest\x12<\n" +
	"\fbase_request\x18\x01 \x01(\v2\x19.proto.common.BaseRequestR\vbaseRequest\x12\x19\n" +
	"\bmovie_id\x18\x02 \x01(\tR\amovieId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vexclude_ids\x18\x04 \x03(\tR\n" +
	"excludeIds\"\xb2\x01\n" +
	"\x18GetSimilarMoviesResponse\x12?\n" +
	"\rbase_response\x18\x01 \x01(\v2\x1a.proto.common.BaseResponseR\fbaseResponse\x12*\n" +
	"\x06movies\x18\x02 \x03(\v2\x12.proto.movie.MovieR\x06movies\x12)\n" +
	"\x10similarity_score\x18\x03 \x01(\x02R\x0fsimilarityScore*\xbe\x02\n" +
	"\rContentRating\x12\x1e\n" +
	"\x1aCONTENT_RATING_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10CONTENT_RATING_G\x10\x01\x12\x15\n" +
	"\x11CONTENT_RATING_PG\x10\x02\x12\x17\n" +
	"\x13CONTENT_RATING_PG13\x10\x03\x12\x14\n" +
	"\x10CONTENT_RATING_R\x10\x04\x12\x17\n" +
	"\x13CONTENT_RATING_NC17\x10\x05\x12\x17\n" +
	"\x13CONTENT_RATING_TV_Y\x10\x06\x12\x18\n" +
	"\x14CONTENT_RATING_TV_Y7\x10\a\x12\x17\n" +
	"\x13CONTENT_RATING_TV_G\x10\b\x12\x18\n" +
	"\x14CONTENT_RATING_TV_PG\x10\t\x12\x18\n" +
	"\x14CONTENT_RATING_TV_14\x10\n" +
	"\x12\x18\n" +
	"\x14CONTENT_RATING_TV_MA\x10\v*\x94\x01\n" +
	"\vMovieStatus\x12\x1c\n" +
	"\x18MOVIE_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12MOVIE_STATUS_DRAFT\x10\x01\x12\x1a\n" +
	"\x16MOVIE_STATUS_PUBLISHED\x10\x02\x12\x19\n" +
	"\x15MOVIE_STATUS_ARCHIVED\x10\x03\x12\x18\n" +
	"\x14MOVIE_STATUS_DELETED\x10\x04Bj\n" +
	"\x1dcom.movieplatform.proto.movieB\x10MovieReqResProtoP\x01Z5github.com/movie-stream-platform/movie-proto-go/movieb\x06proto3"

var (
	file_movie_movie_req_res_proto_rawDescOnce sync.Once
	file_movie_movie_req_res_proto_rawDescData []byte
)

func file_movie_movie_req_res_proto_rawDescGZIP() []byte {
	file_movie_movie_req_res_proto_rawDescOnce.Do(func() {
		file_movie_movie_req_res_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_movie_movie_req_res_proto_rawDesc), len(file_movie_movie_req_res_proto_rawDesc)))
	})
	return file_movie_movie_req_res_proto_rawDescData
}

var file_movie_movie_req_res_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_movie_movie_req_res_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_movie_movie_req_res_proto_goTypes = []any{
	(ContentRating)(0),                // 0: proto.movie.ContentRating
	(MovieStatus)(0),                  // 1: proto.movie.MovieStatus
	(*Movie)(nil),                     // 2: proto.movie.Movie
	(*CastMember)(nil),                // 3: proto.movie.CastMember
	(*CrewMember)(nil),                // 4: proto.movie.CrewMember
	(*MovieMetadata)(nil),             // 5: proto.movie.MovieMetadata
	(*CreateMovieRequest)(nil),        // 6: proto.movie.CreateMovieRequest
	(*CreateMovieResponse)(nil),       // 7: proto.movie.CreateMovieResponse
	(*GetMovieRequest)(nil),           // 8: proto.movie.GetMovieRequest
	(*GetMovieResponse)(nil),          // 9: proto.movie.GetMovieResponse
	(*UpdateMovieRequest)(nil),        // 10: proto.movie.UpdateMovieRequest
	(*UpdateMovieResponse)(nil),       // 11: proto.movie.UpdateMovieResponse
	(*DeleteMovieRequest)(nil),        // 12: proto.movie.DeleteMovieRequest
	(*DeleteMovieResponse)(nil),       // 13: proto.movie.DeleteMovieResponse
	(*GetMoviesByIDsRequest)(nil),     // 14: proto.movie.GetMoviesByIDsRequest
	(*GetMoviesByIDsResponse)(nil),    // 15: proto.movie.GetMoviesByIDsResponse
	(*BulkUpdateMoviesRequest)(nil),   // 16: proto.movie.BulkUpdateMoviesRequest
	(*BulkUpdateMoviesResponse)(nil),  // 17: proto.movie.BulkUpdateMoviesResponse
	(*BulkDeleteMoviesRequest)(nil),   // 18: proto.movie.BulkDeleteMoviesRequest
	(*BulkDeleteMoviesResponse)(nil),  // 19: proto.movie.BulkDeleteMoviesResponse
	(*ValidateMovieRequest)(nil),      // 20: proto.movie.ValidateMovieRequest
	(*ValidateMovieResponse)(nil),     // 21: proto.movie.ValidateMovieResponse
	(*PublishMovieRequest)(nil),       // 22: proto.movie.PublishMovieRequest
	(*PublishMovieResponse)(nil),      // 23: proto.movie.PublishMovieResponse
	(*UnpublishMovieRequest)(nil),     // 24: proto.movie.UnpublishMovieRequest
	(*UnpublishMovieResponse)(nil),    // 25: proto.movie.UnpublishMovieResponse
	(*SearchMoviesRequest)(nil),       // 26: proto.movie.SearchMoviesRequest
	(*SearchMoviesResponse)(nil),      // 27: proto.movie.SearchMoviesResponse
	(*GetPopularMoviesRequest)(nil),   // 28: proto.movie.GetPopularMoviesRequest
	(*GetPopularMoviesResponse)(nil),  // 29: proto.movie.GetPopularMoviesResponse
	(*GetTrendingMoviesRequest)(nil),  // 30: proto.movie.GetTrendingMoviesRequest
	(*GetTrendingMoviesResponse)(nil), // 31: proto.movie.GetTrendingMoviesResponse
	(*GetSimilarMoviesRequest)(nil),   // 32: proto.movie.GetSimilarMoviesRequest
	(*GetSimilarMoviesResponse)(nil),  // 33: proto.movie.GetSimilarMoviesResponse
	nil,                               // 34: proto.movie.MovieMetadata.CustomFieldsEntry
	nil,                               // 35: proto.movie.CreateMovieRequest.MetadataEntry
	nil,                               // 36: proto.movie.UpdateMovieRequest.MetadataEntry
	nil,                               // 37: proto.movie.BulkUpdateMoviesRequest.UpdatesEntry
	(*common.DateTime)(nil),           // 38: proto.common.DateTime
	(*common.BaseRequest)(nil),        // 39: proto.common.BaseRequest
	(*common.BaseResponse)(nil),       // 40: proto.common.BaseResponse
	(*common.PaginationRequest)(nil),  // 41: proto.common.PaginationRequest
	(*common.PaginationResponse)(nil), // 42: proto.common.PaginationResponse
}
var file_movie_movie_req_res_proto_depIdxs = []int32{
	0,  // 0: proto.movie.Movie.content_rating:type_name -> proto.movie.ContentRating
	1,  // 1: proto.movie.Movie.status:type_name -> proto.movie.MovieStatus
	3,  // 2: proto.movie.Movie.cast:type_name -> proto.movie.CastMember
	4,  // 3: proto.movie.Movie.crew:type_name -> proto.movie.CrewMember
	5,  // 4: proto.movie.Movie.metadata:type_name -> proto.movie.MovieMetadata
	38, // 5: proto.movie.Movie.created_at:type_name -> proto.common.DateTime
	38, // 6: proto.movie.Movie.updated_at:type_name -> proto.common.DateTime
	38, // 7: proto.movie.Movie.published_at:type_name -> proto.common.DateTime
	34, // 8: proto.movie.MovieMetadata.custom_fields:type_name -> proto.movie.MovieMetadata.CustomFieldsEntry
	39, // 9: proto.movie.CreateMovieRequest.base_request:type_name -> proto.common.BaseRequest
	0,  // 10: proto.movie.CreateMovieRequest.content_rating:type_name -> proto.movie.ContentRating
	35, // 11: proto.movie.CreateMovieRequest.metadata:type_name -> proto.movie.CreateMovieRequest.MetadataEntry
	40, // 12: proto.movie.CreateMovieResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 13: proto.movie.CreateMovieResponse.movie:type_name -> proto.movie.Movie
	39, // 14: proto.movie.GetMovieRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 15: proto.movie.GetMovieResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 16: proto.movie.GetMovieResponse.movie:type_name -> proto.movie.Movie
	39, // 17: proto.movie.UpdateMovieRequest.base_request:type_name -> proto.common.BaseRequest
	0,  // 18: proto.movie.UpdateMovieRequest.content_rating:type_name -> proto.movie.ContentRating
	36, // 19: proto.movie.UpdateMovieRequest.metadata:type_name -> proto.movie.UpdateMovieRequest.MetadataEntry
	40, // 20: proto.movie.UpdateMovieResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 21: proto.movie.UpdateMovieResponse.movie:type_name -> proto.movie.Movie
	39, // 22: proto.movie.DeleteMovieRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 23: proto.movie.DeleteMovieResponse.base_response:type_name -> proto.common.BaseResponse
	38, // 24: proto.movie.DeleteMovieResponse.deleted_at:type_name -> proto.common.DateTime
	39, // 25: proto.movie.GetMoviesByIDsRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 26: proto.movie.GetMoviesByIDsResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 27: proto.movie.GetMoviesByIDsResponse.movies:type_name -> proto.movie.Movie
	39, // 28: proto.movie.BulkUpdateMoviesRequest.base_request:type_name -> proto.common.BaseRequest
	37, // 29: proto.movie.BulkUpdateMoviesRequest.updates:type_name -> proto.movie.BulkUpdateMoviesRequest.UpdatesEntry
	0,  // 30: proto.movie.BulkUpdateMoviesRequest.new_rating:type_name -> proto.movie.ContentRating
	1,  // 31: proto.movie.BulkUpdateMoviesRequest.new_status:type_name -> proto.movie.MovieStatus
	40, // 32: proto.movie.BulkUpdateMoviesResponse.base_response:type_name -> proto.common.BaseResponse
	39, // 33: proto.movie.BulkDeleteMoviesRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 34: proto.movie.BulkDeleteMoviesResponse.base_response:type_name -> proto.common.BaseResponse
	39, // 35: proto.movie.ValidateMovieRequest.base_request:type_name -> proto.common.BaseRequest
	2,  // 36: proto.movie.ValidateMovieRequest.movie:type_name -> proto.movie.Movie
	40, // 37: proto.movie.ValidateMovieResponse.base_response:type_name -> proto.common.BaseResponse
	39, // 38: proto.movie.PublishMovieRequest.base_request:type_name -> proto.common.BaseRequest
	38, // 39: proto.movie.PublishMovieRequest.publish_date:type_name -> proto.common.DateTime
	40, // 40: proto.movie.PublishMovieResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 41: proto.movie.PublishMovieResponse.movie:type_name -> proto.movie.Movie
	38, // 42: proto.movie.PublishMovieResponse.published_at:type_name -> proto.common.DateTime
	39, // 43: proto.movie.UnpublishMovieRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 44: proto.movie.UnpublishMovieResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 45: proto.movie.UnpublishMovieResponse.movie:type_name -> proto.movie.Movie
	38, // 46: proto.movie.UnpublishMovieResponse.unpublished_at:type_name -> proto.common.DateTime
	39, // 47: proto.movie.SearchMoviesRequest.base_request:type_name -> proto.common.BaseRequest
	0,  // 48: proto.movie.SearchMoviesRequest.max_rating:type_name -> proto.movie.ContentRating
	41, // 49: proto.movie.SearchMoviesRequest.pagination:type_name -> proto.common.PaginationRequest
	40, // 50: proto.movie.SearchMoviesResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 51: proto.movie.SearchMoviesResponse.movies:type_name -> proto.movie.Movie
	42, // 52: proto.movie.SearchMoviesResponse.pagination:type_name -> proto.common.PaginationResponse
	39, // 53: proto.movie.GetPopularMoviesRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 54: proto.movie.GetPopularMoviesResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 55: proto.movie.GetPopularMoviesResponse.movies:type_name -> proto.movie.Movie
	39, // 56: proto.movie.GetTrendingMoviesRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 57: proto.movie.GetTrendingMoviesResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 58: proto.movie.GetTrendingMoviesResponse.movies:type_name -> proto.movie.Movie
	39, // 59: proto.movie.GetSimilarMoviesRequest.base_request:type_name -> proto.common.BaseRequest
	40, // 60: proto.movie.GetSimilarMoviesResponse.base_response:type_name -> proto.common.BaseResponse
	2,  // 61: proto.movie.GetSimilarMoviesResponse.movies:type_name -> proto.movie.Movie
	62, // [62:62] is the sub-list for method output_type
	62, // [62:62] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_movie_movie_req_res_proto_init() }
func file_movie_movie_req_res_proto_init() {
	if File_movie_movie_req_res_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_movie_movie_req_res_proto_rawDesc), len(file_movie_movie_req_res_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_movie_movie_req_res_proto_goTypes,
		DependencyIndexes: file_movie_movie_req_res_proto_depIdxs,
		EnumInfos:         file_movie_movie_req_res_proto_enumTypes,
		MessageInfos:      file_movie_movie_req_res_proto_msgTypes,
	}.Build()
	File_movie_movie_req_res_proto = out.File
	file_movie_movie_req_res_proto_goTypes = nil
	file_movie_movie_req_res_proto_depIdxs = nil
}
