// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: common/pagination.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sort direction enumeration
type SortDirection int32

const (
	SortDirection_SORT_DIRECTION_UNSPECIFIED SortDirection = 0
	SortDirection_SORT_DIRECTION_ASC         SortDirection = 1 // Ascending order
	SortDirection_SORT_DIRECTION_DESC        SortDirection = 2 // Descending order
)

// Enum value maps for SortDirection.
var (
	SortDirection_name = map[int32]string{
		0: "SORT_DIRECTION_UNSPECIFIED",
		1: "SORT_DIRECTION_ASC",
		2: "SORT_DIRECTION_DESC",
	}
	SortDirection_value = map[string]int32{
		"SORT_DIRECTION_UNSPECIFIED": 0,
		"SORT_DIRECTION_ASC":         1,
		"SORT_DIRECTION_DESC":        2,
	}
)

func (x SortDirection) Enum() *SortDirection {
	p := new(SortDirection)
	*p = x
	return p
}

func (x SortDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_common_pagination_proto_enumTypes[0].Descriptor()
}

func (SortDirection) Type() protoreflect.EnumType {
	return &file_common_pagination_proto_enumTypes[0]
}

func (x SortDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortDirection.Descriptor instead.
func (SortDirection) EnumDescriptor() ([]byte, []int) {
	return file_common_pagination_proto_rawDescGZIP(), []int{0}
}

// Filter operator enumeration
type FilterOperator int32

const (
	FilterOperator_FILTER_OPERATOR_UNSPECIFIED   FilterOperator = 0
	FilterOperator_FILTER_OPERATOR_EQUALS        FilterOperator = 1  // Equal to
	FilterOperator_FILTER_OPERATOR_NOT_EQUALS    FilterOperator = 2  // Not equal to
	FilterOperator_FILTER_OPERATOR_GREATER_THAN  FilterOperator = 3  // Greater than
	FilterOperator_FILTER_OPERATOR_LESS_THAN     FilterOperator = 4  // Less than
	FilterOperator_FILTER_OPERATOR_GREATER_EQUAL FilterOperator = 5  // Greater than or equal to
	FilterOperator_FILTER_OPERATOR_LESS_EQUAL    FilterOperator = 6  // Less than or equal to
	FilterOperator_FILTER_OPERATOR_CONTAINS      FilterOperator = 7  // Contains
	FilterOperator_FILTER_OPERATOR_STARTS_WITH   FilterOperator = 8  // Starts with
	FilterOperator_FILTER_OPERATOR_ENDS_WITH     FilterOperator = 9  // Ends with
	FilterOperator_FILTER_OPERATOR_IN            FilterOperator = 10 // In list of values
	FilterOperator_FILTER_OPERATOR_NOT_IN        FilterOperator = 11 // Not in list of values
	FilterOperator_FILTER_OPERATOR_BETWEEN       FilterOperator = 12 // Between two values
	FilterOperator_FILTER_OPERATOR_IS_NULL       FilterOperator = 13 // Is null
	FilterOperator_FILTER_OPERATOR_IS_NOT_NULL   FilterOperator = 14 // Is not null
)

// Enum value maps for FilterOperator.
var (
	FilterOperator_name = map[int32]string{
		0:  "FILTER_OPERATOR_UNSPECIFIED",
		1:  "FILTER_OPERATOR_EQUALS",
		2:  "FILTER_OPERATOR_NOT_EQUALS",
		3:  "FILTER_OPERATOR_GREATER_THAN",
		4:  "FILTER_OPERATOR_LESS_THAN",
		5:  "FILTER_OPERATOR_GREATER_EQUAL",
		6:  "FILTER_OPERATOR_LESS_EQUAL",
		7:  "FILTER_OPERATOR_CONTAINS",
		8:  "FILTER_OPERATOR_STARTS_WITH",
		9:  "FILTER_OPERATOR_ENDS_WITH",
		10: "FILTER_OPERATOR_IN",
		11: "FILTER_OPERATOR_NOT_IN",
		12: "FILTER_OPERATOR_BETWEEN",
		13: "FILTER_OPERATOR_IS_NULL",
		14: "FILTER_OPERATOR_IS_NOT_NULL",
	}
	FilterOperator_value = map[string]int32{
		"FILTER_OPERATOR_UNSPECIFIED":   0,
		"FILTER_OPERATOR_EQUALS":        1,
		"FILTER_OPERATOR_NOT_EQUALS":    2,
		"FILTER_OPERATOR_GREATER_THAN":  3,
		"FILTER_OPERATOR_LESS_THAN":     4,
		"FILTER_OPERATOR_GREATER_EQUAL": 5,
		"FILTER_OPERATOR_LESS_EQUAL":    6,
		"FILTER_OPERATOR_CONTAINS":      7,
		"FILTER_OPERATOR_STARTS_WITH":   8,
		"FILTER_OPERATOR_ENDS_WITH":     9,
		"FILTER_OPERATOR_IN":            10,
		"FILTER_OPERATOR_NOT_IN":        11,
		"FILTER_OPERATOR_BETWEEN":       12,
		"FILTER_OPERATOR_IS_NULL":       13,
		"FILTER_OPERATOR_IS_NOT_NULL":   14,
	}
)

func (x FilterOperator) Enum() *FilterOperator {
	p := new(FilterOperator)
	*p = x
	return p
}

func (x FilterOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_common_pagination_proto_enumTypes[1].Descriptor()
}

func (FilterOperator) Type() protoreflect.EnumType {
	return &file_common_pagination_proto_enumTypes[1]
}

func (x FilterOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterOperator.Descriptor instead.
func (FilterOperator) EnumDescriptor() ([]byte, []int) {
	return file_common_pagination_proto_rawDescGZIP(), []int{1}
}

// Pagination request parameters
type PaginationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageNumber    int32                  `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`       // Page number (1-based)
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`             // Number of items per page
	Cursor        string                 `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`                                  // Cursor for cursor-based pagination
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`                                   // Maximum number of items to return
	IncludeTotal  bool                   `protobuf:"varint,5,opt,name=include_total,json=includeTotal,proto3" json:"include_total,omitempty"` // Whether to include total count
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	mi := &file_common_pagination_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_pagination_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_common_pagination_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *PaginationRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *PaginationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationRequest) GetIncludeTotal() bool {
	if x != nil {
		return x.IncludeTotal
	}
	return false
}

// Pagination response information
type PaginationResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CurrentPage        int32                  `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`                          // Current page number
	PageSize           int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                   // Items per page
	TotalPages         int32                  `protobuf:"varint,3,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"`                             // Total number of pages
	TotalItems         int64                  `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`                             // Total number of items
	ItemsOnCurrentPage int32                  `protobuf:"varint,5,opt,name=items_on_current_page,json=itemsOnCurrentPage,proto3" json:"items_on_current_page,omitempty"` // Items on current page
	NextCursor         string                 `protobuf:"bytes,6,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`                              // Cursor for next page
	PreviousCursor     string                 `protobuf:"bytes,7,opt,name=previous_cursor,json=previousCursor,proto3" json:"previous_cursor,omitempty"`                  // Cursor for previous page
	HasNext            bool                   `protobuf:"varint,8,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`                                      // Whether there's a next page
	HasPrevious        bool                   `protobuf:"varint,9,opt,name=has_previous,json=hasPrevious,proto3" json:"has_previous,omitempty"`                          // Whether there's a previous page
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	mi := &file_common_pagination_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_pagination_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_common_pagination_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationResponse) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginationResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationResponse) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *PaginationResponse) GetTotalItems() int64 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *PaginationResponse) GetItemsOnCurrentPage() int32 {
	if x != nil {
		return x.ItemsOnCurrentPage
	}
	return 0
}

func (x *PaginationResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *PaginationResponse) GetPreviousCursor() string {
	if x != nil {
		return x.PreviousCursor
	}
	return ""
}

func (x *PaginationResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *PaginationResponse) GetHasPrevious() bool {
	if x != nil {
		return x.HasPrevious
	}
	return false
}

// Sort options for list operations
type SortOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`                                          // Field to sort by
	Direction     SortDirection          `protobuf:"varint,2,opt,name=direction,proto3,enum=proto.common.SortDirection" json:"direction,omitempty"` // Sort direction
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortOption) Reset() {
	*x = SortOption{}
	mi := &file_common_pagination_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortOption) ProtoMessage() {}

func (x *SortOption) ProtoReflect() protoreflect.Message {
	mi := &file_common_pagination_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortOption.ProtoReflect.Descriptor instead.
func (*SortOption) Descriptor() ([]byte, []int) {
	return file_common_pagination_proto_rawDescGZIP(), []int{2}
}

func (x *SortOption) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SortOption) GetDirection() SortDirection {
	if x != nil {
		return x.Direction
	}
	return SortDirection_SORT_DIRECTION_UNSPECIFIED
}

// Filter options for list operations
type FilterOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`                                         // Field to filter by
	Operator      FilterOperator         `protobuf:"varint,2,opt,name=operator,proto3,enum=proto.common.FilterOperator" json:"operator,omitempty"` // Filter operator
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                                         // Filter value
	Values        []string               `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`                                       // Multiple filter values
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilterOption) Reset() {
	*x = FilterOption{}
	mi := &file_common_pagination_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilterOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterOption) ProtoMessage() {}

func (x *FilterOption) ProtoReflect() protoreflect.Message {
	mi := &file_common_pagination_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterOption.ProtoReflect.Descriptor instead.
func (*FilterOption) Descriptor() ([]byte, []int) {
	return file_common_pagination_proto_rawDescGZIP(), []int{3}
}

func (x *FilterOption) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FilterOption) GetOperator() FilterOperator {
	if x != nil {
		return x.Operator
	}
	return FilterOperator_FILTER_OPERATOR_UNSPECIFIED
}

func (x *FilterOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FilterOption) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_common_pagination_proto protoreflect.FileDescriptor

const file_common_pagination_proto_rawDesc = "" +
	"\n" +
	"\x17common/pagination.proto\x12\fproto.common\"\xa4\x01\n" +
	"\x11PaginationRequest\x12\x1f\n" +
	"\vpage_number\x18\x01 \x01(\x05R\n" +
	"pageNumber\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12#\n" +
	"\rinclude_total\x18\x05 \x01(\bR\fincludeTotal\"\xd1\x02\n" +
	"\x12PaginationResponse\x12!\n" +
	"\fcurrent_page\x18\x01 \x01(\x05R\vcurrentPage\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vtotal_pages\x18\x03 \x01(\x05R\n" +
	"totalPages\x12\x1f\n" +
	"\vtotal_items\x18\x04 \x01(\x03R\n" +
	"totalItems\x121\n" +
	"\x15items_on_current_page\x18\x05 \x01(\x05R\x12itemsOnCurrentPage\x12\x1f\n" +
	"\vnext_cursor\x18\x06 \x01(\tR\n" +
	"nextCursor\x12'\n" +
	"\x0fprevious_cursor\x18\a \x01(\tR\x0epreviousCursor\x12\x19\n" +
	"\bhas_next\x18\b \x01(\bR\ahasNext\x12!\n" +
	"\fhas_previous\x18\t \x01(\bR\vhasPrevious\"]\n" +
	"\n" +
	"SortOption\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x129\n" +
	"\tdirection\x18\x02 \x01(\x0e2\x1b.proto.common.SortDirectionR\tdirection\"\x8c\x01\n" +
	"\fFilterOption\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x128\n" +
	"\boperator\x18\x02 \x01(\x0e2\x1c.proto.common.FilterOperatorR\boperator\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x16\n" +
	"\x06values\x18\x04 \x03(\tR\x06values*`\n" +
	"\rSortDirection\x12\x1e\n" +
	"\x1aSORT_DIRECTION_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12SORT_DIRECTION_ASC\x10\x01\x12\x17\n" +
	"\x13SORT_DIRECTION_DESC\x10\x02*\xde\x03\n" +
	"\x0eFilterOperator\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16FILTER_OPERATOR_EQUALS\x10\x01\x12\x1e\n" +
	"\x1aFILTER_OPERATOR_NOT_EQUALS\x10\x02\x12 \n" +
	"\x1cFILTER_OPERATOR_GREATER_THAN\x10\x03\x12\x1d\n" +
	"\x19FILTER_OPERATOR_LESS_THAN\x10\x04\x12!\n" +
	"\x1dFILTER_OPERATOR_GREATER_EQUAL\x10\x05\x12\x1e\n" +
	"\x1aFILTER_OPERATOR_LESS_EQUAL\x10\x06\x12\x1c\n" +
	"\x18FILTER_OPERATOR_CONTAINS\x10\a\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_STARTS_WITH\x10\b\x12\x1d\n" +
	"\x19FILTER_OPERATOR_ENDS_WITH\x10\t\x12\x16\n" +
	"\x12FILTER_OPERATOR_IN\x10\n" +
	"\x12\x1a\n" +
	"\x16FILTER_OPERATOR_NOT_IN\x10\v\x12\x1b\n" +
	"\x17FILTER_OPERATOR_BETWEEN\x10\f\x12\x1b\n" +
	"\x17FILTER_OPERATOR_IS_NULL\x10\r\x12\x1f\n" +
	"\x1bFILTER_OPERATOR_IS_NOT_NULL\x10\x0eBk\n" +
	"\x1ecom.movieplatform.proto.commonB\x0fPaginationProtoP\x01Z6github.com/movie-stream-platform/movie-proto-go/commonb\x06proto3"

var (
	file_common_pagination_proto_rawDescOnce sync.Once
	file_common_pagination_proto_rawDescData []byte
)

func file_common_pagination_proto_rawDescGZIP() []byte {
	file_common_pagination_proto_rawDescOnce.Do(func() {
		file_common_pagination_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_pagination_proto_rawDesc), len(file_common_pagination_proto_rawDesc)))
	})
	return file_common_pagination_proto_rawDescData
}

var file_common_pagination_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_pagination_proto_goTypes = []any{
	(SortDirection)(0),         // 0: proto.common.SortDirection
	(FilterOperator)(0),        // 1: proto.common.FilterOperator
	(*PaginationRequest)(nil),  // 2: proto.common.PaginationRequest
	(*PaginationResponse)(nil), // 3: proto.common.PaginationResponse
	(*SortOption)(nil),         // 4: proto.common.SortOption
	(*FilterOption)(nil),       // 5: proto.common.FilterOption
}
var file_common_pagination_proto_depIdxs = []int32{
	0, // 0: proto.common.SortOption.direction:type_name -> proto.common.SortDirection
	1, // 1: proto.common.FilterOption.operator:type_name -> proto.common.FilterOperator
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_pagination_proto_init() }
func file_common_pagination_proto_init() {
	if File_common_pagination_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_pagination_proto_rawDesc), len(file_common_pagination_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_pagination_proto_goTypes,
		DependencyIndexes: file_common_pagination_proto_depIdxs,
		EnumInfos:         file_common_pagination_proto_enumTypes,
		MessageInfos:      file_common_pagination_proto_msgTypes,
	}.Build()
	File_common_pagination_proto = out.File
	file_common_pagination_proto_goTypes = nil
	file_common_pagination_proto_depIdxs = nil
}
