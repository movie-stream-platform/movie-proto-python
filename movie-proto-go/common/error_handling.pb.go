// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: common/error_handling.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HTTP-compatible status codes for gRPC responses
type HttpStatusCode int32

const (
	HttpStatusCode_HTTP_STATUS_CODE_UNSPECIFIED HttpStatusCode = 0
	// 2xx Success
	HttpStatusCode_HTTP_STATUS_CODE_OK         HttpStatusCode = 200
	HttpStatusCode_HTTP_STATUS_CODE_CREATED    HttpStatusCode = 201
	HttpStatusCode_HTTP_STATUS_CODE_ACCEPTED   HttpStatusCode = 202
	HttpStatusCode_HTTP_STATUS_CODE_NO_CONTENT HttpStatusCode = 204
	// 4xx Client Errors
	HttpStatusCode_HTTP_STATUS_CODE_BAD_REQUEST          HttpStatusCode = 400
	HttpStatusCode_HTTP_STATUS_CODE_UNAUTHORIZED         HttpStatusCode = 401
	HttpStatusCode_HTTP_STATUS_CODE_FORBIDDEN            HttpStatusCode = 403
	HttpStatusCode_HTTP_STATUS_CODE_NOT_FOUND            HttpStatusCode = 404
	HttpStatusCode_HTTP_STATUS_CODE_METHOD_NOT_ALLOWED   HttpStatusCode = 405
	HttpStatusCode_HTTP_STATUS_CODE_CONFLICT             HttpStatusCode = 409
	HttpStatusCode_HTTP_STATUS_CODE_UNPROCESSABLE_ENTITY HttpStatusCode = 422
	HttpStatusCode_HTTP_STATUS_CODE_TOO_MANY_REQUESTS    HttpStatusCode = 429
	// 5xx Server Errors
	HttpStatusCode_HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR HttpStatusCode = 500
	HttpStatusCode_HTTP_STATUS_CODE_NOT_IMPLEMENTED       HttpStatusCode = 501
	HttpStatusCode_HTTP_STATUS_CODE_BAD_GATEWAY           HttpStatusCode = 502
	HttpStatusCode_HTTP_STATUS_CODE_SERVICE_UNAVAILABLE   HttpStatusCode = 503
	HttpStatusCode_HTTP_STATUS_CODE_GATEWAY_TIMEOUT       HttpStatusCode = 504
)

// Enum value maps for HttpStatusCode.
var (
	HttpStatusCode_name = map[int32]string{
		0:   "HTTP_STATUS_CODE_UNSPECIFIED",
		200: "HTTP_STATUS_CODE_OK",
		201: "HTTP_STATUS_CODE_CREATED",
		202: "HTTP_STATUS_CODE_ACCEPTED",
		204: "HTTP_STATUS_CODE_NO_CONTENT",
		400: "HTTP_STATUS_CODE_BAD_REQUEST",
		401: "HTTP_STATUS_CODE_UNAUTHORIZED",
		403: "HTTP_STATUS_CODE_FORBIDDEN",
		404: "HTTP_STATUS_CODE_NOT_FOUND",
		405: "HTTP_STATUS_CODE_METHOD_NOT_ALLOWED",
		409: "HTTP_STATUS_CODE_CONFLICT",
		422: "HTTP_STATUS_CODE_UNPROCESSABLE_ENTITY",
		429: "HTTP_STATUS_CODE_TOO_MANY_REQUESTS",
		500: "HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR",
		501: "HTTP_STATUS_CODE_NOT_IMPLEMENTED",
		502: "HTTP_STATUS_CODE_BAD_GATEWAY",
		503: "HTTP_STATUS_CODE_SERVICE_UNAVAILABLE",
		504: "HTTP_STATUS_CODE_GATEWAY_TIMEOUT",
	}
	HttpStatusCode_value = map[string]int32{
		"HTTP_STATUS_CODE_UNSPECIFIED":           0,
		"HTTP_STATUS_CODE_OK":                    200,
		"HTTP_STATUS_CODE_CREATED":               201,
		"HTTP_STATUS_CODE_ACCEPTED":              202,
		"HTTP_STATUS_CODE_NO_CONTENT":            204,
		"HTTP_STATUS_CODE_BAD_REQUEST":           400,
		"HTTP_STATUS_CODE_UNAUTHORIZED":          401,
		"HTTP_STATUS_CODE_FORBIDDEN":             403,
		"HTTP_STATUS_CODE_NOT_FOUND":             404,
		"HTTP_STATUS_CODE_METHOD_NOT_ALLOWED":    405,
		"HTTP_STATUS_CODE_CONFLICT":              409,
		"HTTP_STATUS_CODE_UNPROCESSABLE_ENTITY":  422,
		"HTTP_STATUS_CODE_TOO_MANY_REQUESTS":     429,
		"HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR": 500,
		"HTTP_STATUS_CODE_NOT_IMPLEMENTED":       501,
		"HTTP_STATUS_CODE_BAD_GATEWAY":           502,
		"HTTP_STATUS_CODE_SERVICE_UNAVAILABLE":   503,
		"HTTP_STATUS_CODE_GATEWAY_TIMEOUT":       504,
	}
)

func (x HttpStatusCode) Enum() *HttpStatusCode {
	p := new(HttpStatusCode)
	*p = x
	return p
}

func (x HttpStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_error_handling_proto_enumTypes[0].Descriptor()
}

func (HttpStatusCode) Type() protoreflect.EnumType {
	return &file_common_error_handling_proto_enumTypes[0]
}

func (x HttpStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HttpStatusCode.Descriptor instead.
func (HttpStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_common_error_handling_proto_rawDescGZIP(), []int{0}
}

// Common error codes used across services
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// Authentication & Authorization
	ErrorCode_ERROR_CODE_UNAUTHORIZED             ErrorCode = 1001
	ErrorCode_ERROR_CODE_FORBIDDEN                ErrorCode = 1002
	ErrorCode_ERROR_CODE_TOKEN_EXPIRED            ErrorCode = 1003
	ErrorCode_ERROR_CODE_INVALID_TOKEN            ErrorCode = 1004
	ErrorCode_ERROR_CODE_INSUFFICIENT_PERMISSIONS ErrorCode = 1005
	// Validation Errors
	ErrorCode_ERROR_CODE_VALIDATION_FAILED      ErrorCode = 2001
	ErrorCode_ERROR_CODE_REQUIRED_FIELD_MISSING ErrorCode = 2002
	ErrorCode_ERROR_CODE_INVALID_FORMAT         ErrorCode = 2003
	ErrorCode_ERROR_CODE_VALUE_TOO_LONG         ErrorCode = 2004
	ErrorCode_ERROR_CODE_VALUE_TOO_SHORT        ErrorCode = 2005
	ErrorCode_ERROR_CODE_INVALID_RANGE          ErrorCode = 2006
	// Resource Errors
	ErrorCode_ERROR_CODE_RESOURCE_NOT_FOUND      ErrorCode = 3001
	ErrorCode_ERROR_CODE_RESOURCE_ALREADY_EXISTS ErrorCode = 3002
	ErrorCode_ERROR_CODE_RESOURCE_CONFLICT       ErrorCode = 3003
	ErrorCode_ERROR_CODE_RESOURCE_DELETED        ErrorCode = 3004
	// Business Logic Errors
	ErrorCode_ERROR_CODE_INVALID_OPERATION     ErrorCode = 4001
	ErrorCode_ERROR_CODE_OPERATION_NOT_ALLOWED ErrorCode = 4002
	ErrorCode_ERROR_CODE_QUOTA_EXCEEDED        ErrorCode = 4003
	ErrorCode_ERROR_CODE_RATE_LIMIT_EXCEEDED   ErrorCode = 4004
	// System Errors
	ErrorCode_ERROR_CODE_INTERNAL_ERROR         ErrorCode = 5001
	ErrorCode_ERROR_CODE_SERVICE_UNAVAILABLE    ErrorCode = 5002
	ErrorCode_ERROR_CODE_DATABASE_ERROR         ErrorCode = 5003
	ErrorCode_ERROR_CODE_EXTERNAL_SERVICE_ERROR ErrorCode = 5004
	ErrorCode_ERROR_CODE_TIMEOUT                ErrorCode = 5005
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "ERROR_CODE_UNSPECIFIED",
		1001: "ERROR_CODE_UNAUTHORIZED",
		1002: "ERROR_CODE_FORBIDDEN",
		1003: "ERROR_CODE_TOKEN_EXPIRED",
		1004: "ERROR_CODE_INVALID_TOKEN",
		1005: "ERROR_CODE_INSUFFICIENT_PERMISSIONS",
		2001: "ERROR_CODE_VALIDATION_FAILED",
		2002: "ERROR_CODE_REQUIRED_FIELD_MISSING",
		2003: "ERROR_CODE_INVALID_FORMAT",
		2004: "ERROR_CODE_VALUE_TOO_LONG",
		2005: "ERROR_CODE_VALUE_TOO_SHORT",
		2006: "ERROR_CODE_INVALID_RANGE",
		3001: "ERROR_CODE_RESOURCE_NOT_FOUND",
		3002: "ERROR_CODE_RESOURCE_ALREADY_EXISTS",
		3003: "ERROR_CODE_RESOURCE_CONFLICT",
		3004: "ERROR_CODE_RESOURCE_DELETED",
		4001: "ERROR_CODE_INVALID_OPERATION",
		4002: "ERROR_CODE_OPERATION_NOT_ALLOWED",
		4003: "ERROR_CODE_QUOTA_EXCEEDED",
		4004: "ERROR_CODE_RATE_LIMIT_EXCEEDED",
		5001: "ERROR_CODE_INTERNAL_ERROR",
		5002: "ERROR_CODE_SERVICE_UNAVAILABLE",
		5003: "ERROR_CODE_DATABASE_ERROR",
		5004: "ERROR_CODE_EXTERNAL_SERVICE_ERROR",
		5005: "ERROR_CODE_TIMEOUT",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":              0,
		"ERROR_CODE_UNAUTHORIZED":             1001,
		"ERROR_CODE_FORBIDDEN":                1002,
		"ERROR_CODE_TOKEN_EXPIRED":            1003,
		"ERROR_CODE_INVALID_TOKEN":            1004,
		"ERROR_CODE_INSUFFICIENT_PERMISSIONS": 1005,
		"ERROR_CODE_VALIDATION_FAILED":        2001,
		"ERROR_CODE_REQUIRED_FIELD_MISSING":   2002,
		"ERROR_CODE_INVALID_FORMAT":           2003,
		"ERROR_CODE_VALUE_TOO_LONG":           2004,
		"ERROR_CODE_VALUE_TOO_SHORT":          2005,
		"ERROR_CODE_INVALID_RANGE":            2006,
		"ERROR_CODE_RESOURCE_NOT_FOUND":       3001,
		"ERROR_CODE_RESOURCE_ALREADY_EXISTS":  3002,
		"ERROR_CODE_RESOURCE_CONFLICT":        3003,
		"ERROR_CODE_RESOURCE_DELETED":         3004,
		"ERROR_CODE_INVALID_OPERATION":        4001,
		"ERROR_CODE_OPERATION_NOT_ALLOWED":    4002,
		"ERROR_CODE_QUOTA_EXCEEDED":           4003,
		"ERROR_CODE_RATE_LIMIT_EXCEEDED":      4004,
		"ERROR_CODE_INTERNAL_ERROR":           5001,
		"ERROR_CODE_SERVICE_UNAVAILABLE":      5002,
		"ERROR_CODE_DATABASE_ERROR":           5003,
		"ERROR_CODE_EXTERNAL_SERVICE_ERROR":   5004,
		"ERROR_CODE_TIMEOUT":                  5005,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_error_handling_proto_enumTypes[1].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_common_error_handling_proto_enumTypes[1]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_common_error_handling_proto_rawDescGZIP(), []int{1}
}

// Error context for additional information
type ErrorContext struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServiceName    string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`                                                      // Service where error occurred
	Operation      string                 `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`                                                                             // Operation being performed
	ResourceType   string                 `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`                                                   // Type of resource involved
	ResourceId     string                 `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`                                                         // ID of resource involved
	Parameters     map[string]string      `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Operation parameters
	StackTrace     string                 `protobuf:"bytes,6,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`                                                         // Stack trace (for debugging)
	ErrorTimestamp int64                  `protobuf:"varint,7,opt,name=error_timestamp,json=errorTimestamp,proto3" json:"error_timestamp,omitempty"`                                            // When error occurred
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ErrorContext) Reset() {
	*x = ErrorContext{}
	mi := &file_common_error_handling_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorContext) ProtoMessage() {}

func (x *ErrorContext) ProtoReflect() protoreflect.Message {
	mi := &file_common_error_handling_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorContext.ProtoReflect.Descriptor instead.
func (*ErrorContext) Descriptor() ([]byte, []int) {
	return file_common_error_handling_proto_rawDescGZIP(), []int{0}
}

func (x *ErrorContext) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ErrorContext) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ErrorContext) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *ErrorContext) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *ErrorContext) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ErrorContext) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *ErrorContext) GetErrorTimestamp() int64 {
	if x != nil {
		return x.ErrorTimestamp
	}
	return 0
}

var File_common_error_handling_proto protoreflect.FileDescriptor

const file_common_error_handling_proto_rawDesc = "" +
	"\n" +
	"\x1bcommon/error_handling.proto\x12\fproto.common\"\xea\x02\n" +
	"\fErrorContext\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1c\n" +
	"\toperation\x18\x02 \x01(\tR\toperation\x12#\n" +
	"\rresource_type\x18\x03 \x01(\tR\fresourceType\x12\x1f\n" +
	"\vresource_id\x18\x04 \x01(\tR\n" +
	"resourceId\x12J\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2*.proto.common.ErrorContext.ParametersEntryR\n" +
	"parameters\x12\x1f\n" +
	"\vstack_trace\x18\x06 \x01(\tR\n" +
	"stackTrace\x12'\n" +
	"\x0ferror_timestamp\x18\a \x01(\x03R\x0eerrorTimestamp\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x9e\x05\n" +
	"\x0eHttpStatusCode\x12 \n" +
	"\x1cHTTP_STATUS_CODE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x13HTTP_STATUS_CODE_OK\x10\xc8\x01\x12\x1d\n" +
	"\x18HTTP_STATUS_CODE_CREATED\x10\xc9\x01\x12\x1e\n" +
	"\x19HTTP_STATUS_CODE_ACCEPTED\x10\xca\x01\x12 \n" +
	"\x1bHTTP_STATUS_CODE_NO_CONTENT\x10\xcc\x01\x12!\n" +
	"\x1cHTTP_STATUS_CODE_BAD_REQUEST\x10\x90\x03\x12\"\n" +
	"\x1dHTTP_STATUS_CODE_UNAUTHORIZED\x10\x91\x03\x12\x1f\n" +
	"\x1aHTTP_STATUS_CODE_FORBIDDEN\x10\x93\x03\x12\x1f\n" +
	"\x1aHTTP_STATUS_CODE_NOT_FOUND\x10\x94\x03\x12(\n" +
	"#HTTP_STATUS_CODE_METHOD_NOT_ALLOWED\x10\x95\x03\x12\x1e\n" +
	"\x19HTTP_STATUS_CODE_CONFLICT\x10\x99\x03\x12*\n" +
	"%HTTP_STATUS_CODE_UNPROCESSABLE_ENTITY\x10\xa6\x03\x12'\n" +
	"\"HTTP_STATUS_CODE_TOO_MANY_REQUESTS\x10\xad\x03\x12+\n" +
	"&HTTP_STATUS_CODE_INTERNAL_SERVER_ERROR\x10\xf4\x03\x12%\n" +
	" HTTP_STATUS_CODE_NOT_IMPLEMENTED\x10\xf5\x03\x12!\n" +
	"\x1cHTTP_STATUS_CODE_BAD_GATEWAY\x10\xf6\x03\x12)\n" +
	"$HTTP_STATUS_CODE_SERVICE_UNAVAILABLE\x10\xf7\x03\x12%\n" +
	" HTTP_STATUS_CODE_GATEWAY_TIMEOUT\x10\xf8\x03*\xda\x06\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x17ERROR_CODE_UNAUTHORIZED\x10\xe9\a\x12\x19\n" +
	"\x14ERROR_CODE_FORBIDDEN\x10\xea\a\x12\x1d\n" +
	"\x18ERROR_CODE_TOKEN_EXPIRED\x10\xeb\a\x12\x1d\n" +
	"\x18ERROR_CODE_INVALID_TOKEN\x10\xec\a\x12(\n" +
	"#ERROR_CODE_INSUFFICIENT_PERMISSIONS\x10\xed\a\x12!\n" +
	"\x1cERROR_CODE_VALIDATION_FAILED\x10\xd1\x0f\x12&\n" +
	"!ERROR_CODE_REQUIRED_FIELD_MISSING\x10\xd2\x0f\x12\x1e\n" +
	"\x19ERROR_CODE_INVALID_FORMAT\x10\xd3\x0f\x12\x1e\n" +
	"\x19ERROR_CODE_VALUE_TOO_LONG\x10\xd4\x0f\x12\x1f\n" +
	"\x1aERROR_CODE_VALUE_TOO_SHORT\x10\xd5\x0f\x12\x1d\n" +
	"\x18ERROR_CODE_INVALID_RANGE\x10\xd6\x0f\x12\"\n" +
	"\x1dERROR_CODE_RESOURCE_NOT_FOUND\x10\xb9\x17\x12'\n" +
	"\"ERROR_CODE_RESOURCE_ALREADY_EXISTS\x10\xba\x17\x12!\n" +
	"\x1cERROR_CODE_RESOURCE_CONFLICT\x10\xbb\x17\x12 \n" +
	"\x1bERROR_CODE_RESOURCE_DELETED\x10\xbc\x17\x12!\n" +
	"\x1cERROR_CODE_INVALID_OPERATION\x10\xa1\x1f\x12%\n" +
	" ERROR_CODE_OPERATION_NOT_ALLOWED\x10\xa2\x1f\x12\x1e\n" +
	"\x19ERROR_CODE_QUOTA_EXCEEDED\x10\xa3\x1f\x12#\n" +
	"\x1eERROR_CODE_RATE_LIMIT_EXCEEDED\x10\xa4\x1f\x12\x1e\n" +
	"\x19ERROR_CODE_INTERNAL_ERROR\x10\x89'\x12#\n" +
	"\x1eERROR_CODE_SERVICE_UNAVAILABLE\x10\x8a'\x12\x1e\n" +
	"\x19ERROR_CODE_DATABASE_ERROR\x10\x8b'\x12&\n" +
	"!ERROR_CODE_EXTERNAL_SERVICE_ERROR\x10\x8c'\x12\x17\n" +
	"\x12ERROR_CODE_TIMEOUT\x10\x8d'Bn\n" +
	"\x1ecom.movieplatform.proto.commonB\x12ErrorHandlingProtoP\x01Z6github.com/movie-stream-platform/movie-proto-go/commonb\x06proto3"

var (
	file_common_error_handling_proto_rawDescOnce sync.Once
	file_common_error_handling_proto_rawDescData []byte
)

func file_common_error_handling_proto_rawDescGZIP() []byte {
	file_common_error_handling_proto_rawDescOnce.Do(func() {
		file_common_error_handling_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_error_handling_proto_rawDesc), len(file_common_error_handling_proto_rawDesc)))
	})
	return file_common_error_handling_proto_rawDescData
}

var file_common_error_handling_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_error_handling_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_error_handling_proto_goTypes = []any{
	(HttpStatusCode)(0),  // 0: proto.common.HttpStatusCode
	(ErrorCode)(0),       // 1: proto.common.ErrorCode
	(*ErrorContext)(nil), // 2: proto.common.ErrorContext
	nil,                  // 3: proto.common.ErrorContext.ParametersEntry
}
var file_common_error_handling_proto_depIdxs = []int32{
	3, // 0: proto.common.ErrorContext.parameters:type_name -> proto.common.ErrorContext.ParametersEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_error_handling_proto_init() }
func file_common_error_handling_proto_init() {
	if File_common_error_handling_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_error_handling_proto_rawDesc), len(file_common_error_handling_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_error_handling_proto_goTypes,
		DependencyIndexes: file_common_error_handling_proto_depIdxs,
		EnumInfos:         file_common_error_handling_proto_enumTypes,
		MessageInfos:      file_common_error_handling_proto_msgTypes,
	}.Build()
	File_common_error_handling_proto = out.File
	file_common_error_handling_proto_goTypes = nil
	file_common_error_handling_proto_depIdxs = nil
}
