// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.12
// source: common/common_types.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Phone number types
type PhoneNumberType int32

const (
	PhoneNumberType_PHONE_NUMBER_TYPE_UNSPECIFIED PhoneNumberType = 0
	PhoneNumberType_PHONE_NUMBER_TYPE_MOBILE      PhoneNumberType = 1 // Mobile phone
	PhoneNumberType_PHONE_NUMBER_TYPE_HOME        PhoneNumberType = 2 // Home phone
	PhoneNumberType_PHONE_NUMBER_TYPE_WORK        PhoneNumberType = 3 // Work phone
	PhoneNumberType_PHONE_NUMBER_TYPE_FAX         PhoneNumberType = 4 // Fax number
)

// Enum value maps for PhoneNumberType.
var (
	PhoneNumberType_name = map[int32]string{
		0: "PHONE_NUMBER_TYPE_UNSPECIFIED",
		1: "PHONE_NUMBER_TYPE_MOBILE",
		2: "PHONE_NUMBER_TYPE_HOME",
		3: "PHONE_NUMBER_TYPE_WORK",
		4: "PHONE_NUMBER_TYPE_FAX",
	}
	PhoneNumberType_value = map[string]int32{
		"PHONE_NUMBER_TYPE_UNSPECIFIED": 0,
		"PHONE_NUMBER_TYPE_MOBILE":      1,
		"PHONE_NUMBER_TYPE_HOME":        2,
		"PHONE_NUMBER_TYPE_WORK":        3,
		"PHONE_NUMBER_TYPE_FAX":         4,
	}
)

func (x PhoneNumberType) Enum() *PhoneNumberType {
	p := new(PhoneNumberType)
	*p = x
	return p
}

func (x PhoneNumberType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PhoneNumberType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_common_types_proto_enumTypes[0].Descriptor()
}

func (PhoneNumberType) Type() protoreflect.EnumType {
	return &file_common_common_types_proto_enumTypes[0]
}

func (x PhoneNumberType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PhoneNumberType.Descriptor instead.
func (PhoneNumberType) EnumDescriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{0}
}

// UUID representation
type UUID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"` // UUID string representation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UUID) Reset() {
	*x = UUID{}
	mi := &file_common_common_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{0}
}

func (x *UUID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Date and time information
type DateTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                 // Unix timestamp in milliseconds
	IsoString     string                 `protobuf:"bytes,2,opt,name=iso_string,json=isoString,proto3" json:"iso_string,omitempty"` // ISO 8601 formatted string
	Timezone      string                 `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`                    // Timezone identifier
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateTime) Reset() {
	*x = DateTime{}
	mi := &file_common_common_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTime) ProtoMessage() {}

func (x *DateTime) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTime.ProtoReflect.Descriptor instead.
func (*DateTime) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{1}
}

func (x *DateTime) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DateTime) GetIsoString() string {
	if x != nil {
		return x.IsoString
	}
	return ""
}

func (x *DateTime) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

// Geographic location information
type Location struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Latitude      float64                `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`                        // Latitude coordinate
	Longitude     float64                `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`                      // Longitude coordinate
	CountryCode   string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` // ISO country code
	CountryName   string                 `protobuf:"bytes,4,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"` // Country name
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`                              // Region/state
	City          string                 `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`                                  // City name
	PostalCode    string                 `protobuf:"bytes,7,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`    // Postal code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_common_common_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{2}
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Location) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Location) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

func (x *Location) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Location) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Location) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

// Currency and monetary amounts
type Money struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CurrencyCode    string                 `protobuf:"bytes,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`          // ISO currency code (e.g., USD, EUR)
	AmountCents     int64                  `protobuf:"varint,2,opt,name=amount_cents,json=amountCents,proto3" json:"amount_cents,omitempty"`            // Amount in smallest currency unit (cents)
	FormattedAmount string                 `protobuf:"bytes,3,opt,name=formatted_amount,json=formattedAmount,proto3" json:"formatted_amount,omitempty"` // Human-readable formatted amount
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Money) Reset() {
	*x = Money{}
	mi := &file_common_common_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{3}
}

func (x *Money) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *Money) GetAmountCents() int64 {
	if x != nil {
		return x.AmountCents
	}
	return 0
}

func (x *Money) GetFormattedAmount() string {
	if x != nil {
		return x.FormattedAmount
	}
	return ""
}

// File and media information
type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`                // Unique file identifier
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`                          // Original filename
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // MIME content type
	FileSize      int64                  `protobuf:"varint,4,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`         // File size in bytes
	Url           string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`                                    // File URL
	Checksum      string                 `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`                          // File checksum/hash
	UploadedAt    *DateTime              `protobuf:"bytes,7,opt,name=uploaded_at,json=uploadedAt,proto3" json:"uploaded_at,omitempty"`    // Upload timestamp
	UploadedBy    string                 `protobuf:"bytes,8,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`    // User who uploaded the file
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_common_common_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{4}
}

func (x *FileInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileInfo) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *FileInfo) GetUploadedAt() *DateTime {
	if x != nil {
		return x.UploadedAt
	}
	return nil
}

func (x *FileInfo) GetUploadedBy() string {
	if x != nil {
		return x.UploadedBy
	}
	return ""
}

// Language and localization
type Language struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                               // ISO language code (e.g., en, es, fr)
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                               // Language name in English
	NativeName    string                 `protobuf:"bytes,3,opt,name=native_name,json=nativeName,proto3" json:"native_name,omitempty"` // Language name in native script
	IsRtl         bool                   `protobuf:"varint,4,opt,name=is_rtl,json=isRtl,proto3" json:"is_rtl,omitempty"`               // Right-to-left language
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Language) Reset() {
	*x = Language{}
	mi := &file_common_common_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{5}
}

func (x *Language) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Language) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Language) GetNativeName() string {
	if x != nil {
		return x.NativeName
	}
	return ""
}

func (x *Language) GetIsRtl() bool {
	if x != nil {
		return x.IsRtl
	}
	return false
}

// Version information
type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Major         int32                  `protobuf:"varint,1,opt,name=major,proto3" json:"major,omitempty"`                               // Major version number
	Minor         int32                  `protobuf:"varint,2,opt,name=minor,proto3" json:"minor,omitempty"`                               // Minor version number
	Patch         int32                  `protobuf:"varint,3,opt,name=patch,proto3" json:"patch,omitempty"`                               // Patch version number
	Build         string                 `protobuf:"bytes,4,opt,name=build,proto3" json:"build,omitempty"`                                // Build identifier
	FullVersion   string                 `protobuf:"bytes,5,opt,name=full_version,json=fullVersion,proto3" json:"full_version,omitempty"` // Full version string
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_common_common_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{6}
}

func (x *Version) GetMajor() int32 {
	if x != nil {
		return x.Major
	}
	return 0
}

func (x *Version) GetMinor() int32 {
	if x != nil {
		return x.Minor
	}
	return 0
}

func (x *Version) GetPatch() int32 {
	if x != nil {
		return x.Patch
	}
	return 0
}

func (x *Version) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *Version) GetFullVersion() string {
	if x != nil {
		return x.FullVersion
	}
	return ""
}

// Address information
type Address struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	StreetAddress   string                 `protobuf:"bytes,1,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`      // Street address line 1
	StreetAddress_2 string                 `protobuf:"bytes,2,opt,name=street_address_2,json=streetAddress2,proto3" json:"street_address_2,omitempty"` // Street address line 2
	City            string                 `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`                                             // City
	State           string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`                                           // State/province
	PostalCode      string                 `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`               // Postal/ZIP code
	Country         string                 `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`                                       // Country
	Coordinates     *Location              `protobuf:"bytes,7,opt,name=coordinates,proto3" json:"coordinates,omitempty"`                               // Geographic coordinates
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_common_common_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{7}
}

func (x *Address) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

func (x *Address) GetStreetAddress_2() string {
	if x != nil {
		return x.StreetAddress_2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Address) GetCoordinates() *Location {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

// Phone number information
type PhoneNumber struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CountryCode     string                 `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`             // Country calling code
	NationalNumber  string                 `protobuf:"bytes,2,opt,name=national_number,json=nationalNumber,proto3" json:"national_number,omitempty"`    // National phone number
	FormattedNumber string                 `protobuf:"bytes,3,opt,name=formatted_number,json=formattedNumber,proto3" json:"formatted_number,omitempty"` // Formatted phone number
	Type            PhoneNumberType        `protobuf:"varint,4,opt,name=type,proto3,enum=proto.common.PhoneNumberType" json:"type,omitempty"`           // Type of phone number
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PhoneNumber) Reset() {
	*x = PhoneNumber{}
	mi := &file_common_common_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhoneNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumber) ProtoMessage() {}

func (x *PhoneNumber) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumber.ProtoReflect.Descriptor instead.
func (*PhoneNumber) Descriptor() ([]byte, []int) {
	return file_common_common_types_proto_rawDescGZIP(), []int{8}
}

func (x *PhoneNumber) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *PhoneNumber) GetNationalNumber() string {
	if x != nil {
		return x.NationalNumber
	}
	return ""
}

func (x *PhoneNumber) GetFormattedNumber() string {
	if x != nil {
		return x.FormattedNumber
	}
	return ""
}

func (x *PhoneNumber) GetType() PhoneNumberType {
	if x != nil {
		return x.Type
	}
	return PhoneNumberType_PHONE_NUMBER_TYPE_UNSPECIFIED
}

var File_common_common_types_proto protoreflect.FileDescriptor

const file_common_common_types_proto_rawDesc = "" +
	"\n" +
	"\x19common/common_types.proto\x12\fproto.common\"\x1c\n" +
	"\x04UUID\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"c\n" +
	"\bDateTime\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"iso_string\x18\x02 \x01(\tR\tisoString\x12\x1a\n" +
	"\btimezone\x18\x03 \x01(\tR\btimezone\"\xd7\x01\n" +
	"\bLocation\x12\x1a\n" +
	"\blatitude\x18\x01 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x02 \x01(\x01R\tlongitude\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12!\n" +
	"\fcountry_name\x18\x04 \x01(\tR\vcountryName\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\x12\x12\n" +
	"\x04city\x18\x06 \x01(\tR\x04city\x12\x1f\n" +
	"\vpostal_code\x18\a \x01(\tR\n" +
	"postalCode\"z\n" +
	"\x05Money\x12#\n" +
	"\rcurrency_code\x18\x01 \x01(\tR\fcurrencyCode\x12!\n" +
	"\famount_cents\x18\x02 \x01(\x03R\vamountCents\x12)\n" +
	"\x10formatted_amount\x18\x03 \x01(\tR\x0fformattedAmount\"\x87\x02\n" +
	"\bFileInfo\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\tR\x06fileId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x1b\n" +
	"\tfile_size\x18\x04 \x01(\x03R\bfileSize\x12\x10\n" +
	"\x03url\x18\x05 \x01(\tR\x03url\x12\x1a\n" +
	"\bchecksum\x18\x06 \x01(\tR\bchecksum\x127\n" +
	"\vuploaded_at\x18\a \x01(\v2\x16.proto.common.DateTimeR\n" +
	"uploadedAt\x12\x1f\n" +
	"\vuploaded_by\x18\b \x01(\tR\n" +
	"uploadedBy\"j\n" +
	"\bLanguage\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vnative_name\x18\x03 \x01(\tR\n" +
	"nativeName\x12\x15\n" +
	"\x06is_rtl\x18\x04 \x01(\bR\x05isRtl\"\x84\x01\n" +
	"\aVersion\x12\x14\n" +
	"\x05major\x18\x01 \x01(\x05R\x05major\x12\x14\n" +
	"\x05minor\x18\x02 \x01(\x05R\x05minor\x12\x14\n" +
	"\x05patch\x18\x03 \x01(\x05R\x05patch\x12\x14\n" +
	"\x05build\x18\x04 \x01(\tR\x05build\x12!\n" +
	"\ffull_version\x18\x05 \x01(\tR\vfullVersion\"\xf9\x01\n" +
	"\aAddress\x12%\n" +
	"\x0estreet_address\x18\x01 \x01(\tR\rstreetAddress\x12(\n" +
	"\x10street_address_2\x18\x02 \x01(\tR\x0estreetAddress2\x12\x12\n" +
	"\x04city\x18\x03 \x01(\tR\x04city\x12\x14\n" +
	"\x05state\x18\x04 \x01(\tR\x05state\x12\x1f\n" +
	"\vpostal_code\x18\x05 \x01(\tR\n" +
	"postalCode\x12\x18\n" +
	"\acountry\x18\x06 \x01(\tR\acountry\x128\n" +
	"\vcoordinates\x18\a \x01(\v2\x16.proto.common.LocationR\vcoordinates\"\xb7\x01\n" +
	"\vPhoneNumber\x12!\n" +
	"\fcountry_code\x18\x01 \x01(\tR\vcountryCode\x12'\n" +
	"\x0fnational_number\x18\x02 \x01(\tR\x0enationalNumber\x12)\n" +
	"\x10formatted_number\x18\x03 \x01(\tR\x0fformattedNumber\x121\n" +
	"\x04type\x18\x04 \x01(\x0e2\x1d.proto.common.PhoneNumberTypeR\x04type*\xa5\x01\n" +
	"\x0fPhoneNumberType\x12!\n" +
	"\x1dPHONE_NUMBER_TYPE_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18PHONE_NUMBER_TYPE_MOBILE\x10\x01\x12\x1a\n" +
	"\x16PHONE_NUMBER_TYPE_HOME\x10\x02\x12\x1a\n" +
	"\x16PHONE_NUMBER_TYPE_WORK\x10\x03\x12\x19\n" +
	"\x15PHONE_NUMBER_TYPE_FAX\x10\x04Bl\n" +
	"\x1ecom.movieplatform.proto.commonB\x10CommonTypesProtoP\x01Z6github.com/movie-stream-platform/movie-proto-go/commonb\x06proto3"

var (
	file_common_common_types_proto_rawDescOnce sync.Once
	file_common_common_types_proto_rawDescData []byte
)

func file_common_common_types_proto_rawDescGZIP() []byte {
	file_common_common_types_proto_rawDescOnce.Do(func() {
		file_common_common_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_common_types_proto_rawDesc), len(file_common_common_types_proto_rawDesc)))
	})
	return file_common_common_types_proto_rawDescData
}

var file_common_common_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_common_types_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_common_common_types_proto_goTypes = []any{
	(PhoneNumberType)(0), // 0: proto.common.PhoneNumberType
	(*UUID)(nil),         // 1: proto.common.UUID
	(*DateTime)(nil),     // 2: proto.common.DateTime
	(*Location)(nil),     // 3: proto.common.Location
	(*Money)(nil),        // 4: proto.common.Money
	(*FileInfo)(nil),     // 5: proto.common.FileInfo
	(*Language)(nil),     // 6: proto.common.Language
	(*Version)(nil),      // 7: proto.common.Version
	(*Address)(nil),      // 8: proto.common.Address
	(*PhoneNumber)(nil),  // 9: proto.common.PhoneNumber
}
var file_common_common_types_proto_depIdxs = []int32{
	2, // 0: proto.common.FileInfo.uploaded_at:type_name -> proto.common.DateTime
	3, // 1: proto.common.Address.coordinates:type_name -> proto.common.Location
	0, // 2: proto.common.PhoneNumber.type:type_name -> proto.common.PhoneNumberType
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_common_common_types_proto_init() }
func file_common_common_types_proto_init() {
	if File_common_common_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_common_types_proto_rawDesc), len(file_common_common_types_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_common_types_proto_goTypes,
		DependencyIndexes: file_common_common_types_proto_depIdxs,
		EnumInfos:         file_common_common_types_proto_enumTypes,
		MessageInfos:      file_common_common_types_proto_msgTypes,
	}.Build()
	File_common_common_types_proto = out.File
	file_common_common_types_proto_goTypes = nil
	file_common_common_types_proto_depIdxs = nil
}
