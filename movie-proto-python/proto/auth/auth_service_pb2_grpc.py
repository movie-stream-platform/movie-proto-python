# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from auth import auth_req_res_pb2 as auth_dot_auth__req__res__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in auth/auth_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class AuthenticationServiceStub(object):
    """Authentication service for user login, registration, and management
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/proto.auth.AuthenticationService/Register',
                request_serializer=auth_dot_auth__req__res__pb2.RegisterRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.RegisterResponse.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/proto.auth.AuthenticationService/Login',
                request_serializer=auth_dot_auth__req__res__pb2.LoginRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.Logout = channel.unary_unary(
                '/proto.auth.AuthenticationService/Logout',
                request_serializer=auth_dot_auth__req__res__pb2.LogoutRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.LogoutResponse.FromString,
                _registered_method=True)
        self.ChangePassword = channel.unary_unary(
                '/proto.auth.AuthenticationService/ChangePassword',
                request_serializer=auth_dot_auth__req__res__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.ChangePasswordResponse.FromString,
                _registered_method=True)
        self.ResetPassword = channel.unary_unary(
                '/proto.auth.AuthenticationService/ResetPassword',
                request_serializer=auth_dot_auth__req__res__pb2.ResetPasswordRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.ResetPasswordResponse.FromString,
                _registered_method=True)
        self.ForgotPassword = channel.unary_unary(
                '/proto.auth.AuthenticationService/ForgotPassword',
                request_serializer=auth_dot_auth__req__res__pb2.ForgotPasswordRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.ForgotPasswordResponse.FromString,
                _registered_method=True)
        self.EnableMFA = channel.unary_unary(
                '/proto.auth.AuthenticationService/EnableMFA',
                request_serializer=auth_dot_auth__req__res__pb2.EnableMFARequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.EnableMFAResponse.FromString,
                _registered_method=True)
        self.VerifyMFA = channel.unary_unary(
                '/proto.auth.AuthenticationService/VerifyMFA',
                request_serializer=auth_dot_auth__req__res__pb2.VerifyMFARequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.VerifyMFAResponse.FromString,
                _registered_method=True)
        self.DisableMFA = channel.unary_unary(
                '/proto.auth.AuthenticationService/DisableMFA',
                request_serializer=auth_dot_auth__req__res__pb2.DisableMFARequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.DisableMFAResponse.FromString,
                _registered_method=True)
        self.VerifyEmail = channel.unary_unary(
                '/proto.auth.AuthenticationService/VerifyEmail',
                request_serializer=auth_dot_auth__req__res__pb2.VerifyEmailRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.VerifyEmailResponse.FromString,
                _registered_method=True)
        self.ResendVerification = channel.unary_unary(
                '/proto.auth.AuthenticationService/ResendVerification',
                request_serializer=auth_dot_auth__req__res__pb2.ResendVerificationRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.ResendVerificationResponse.FromString,
                _registered_method=True)
        self.RefreshToken = channel.unary_unary(
                '/proto.auth.AuthenticationService/RefreshToken',
                request_serializer=auth_dot_auth__req__res__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.RefreshTokenResponse.FromString,
                _registered_method=True)
        self.ValidateToken = channel.unary_unary(
                '/proto.auth.AuthenticationService/ValidateToken',
                request_serializer=auth_dot_auth__req__res__pb2.ValidateTokenRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.ValidateTokenResponse.FromString,
                _registered_method=True)
        self.RevokeToken = channel.unary_unary(
                '/proto.auth.AuthenticationService/RevokeToken',
                request_serializer=auth_dot_auth__req__res__pb2.RevokeTokenRequest.SerializeToString,
                response_deserializer=auth_dot_auth__req__res__pb2.RevokeTokenResponse.FromString,
                _registered_method=True)


class AuthenticationServiceServicer(object):
    """Authentication service for user login, registration, and management
    """

    def Register(self, request, context):
        """User Authentication
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassword(self, request, context):
        """Password Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgotPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableMFA(self, request, context):
        """Multi-Factor Authentication
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyMFA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableMFA(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyEmail(self, request, context):
        """Account Recovery
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResendVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshToken(self, request, context):
        """Token Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=auth_dot_auth__req__res__pb2.RegisterRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.RegisterResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=auth_dot_auth__req__res__pb2.LoginRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.LoginResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=auth_dot_auth__req__res__pb2.LogoutRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.LogoutResponse.SerializeToString,
            ),
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=auth_dot_auth__req__res__pb2.ChangePasswordRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.ChangePasswordResponse.SerializeToString,
            ),
            'ResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPassword,
                    request_deserializer=auth_dot_auth__req__res__pb2.ResetPasswordRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.ResetPasswordResponse.SerializeToString,
            ),
            'ForgotPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgotPassword,
                    request_deserializer=auth_dot_auth__req__res__pb2.ForgotPasswordRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.ForgotPasswordResponse.SerializeToString,
            ),
            'EnableMFA': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableMFA,
                    request_deserializer=auth_dot_auth__req__res__pb2.EnableMFARequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.EnableMFAResponse.SerializeToString,
            ),
            'VerifyMFA': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyMFA,
                    request_deserializer=auth_dot_auth__req__res__pb2.VerifyMFARequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.VerifyMFAResponse.SerializeToString,
            ),
            'DisableMFA': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableMFA,
                    request_deserializer=auth_dot_auth__req__res__pb2.DisableMFARequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.DisableMFAResponse.SerializeToString,
            ),
            'VerifyEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyEmail,
                    request_deserializer=auth_dot_auth__req__res__pb2.VerifyEmailRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.VerifyEmailResponse.SerializeToString,
            ),
            'ResendVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.ResendVerification,
                    request_deserializer=auth_dot_auth__req__res__pb2.ResendVerificationRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.ResendVerificationResponse.SerializeToString,
            ),
            'RefreshToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshToken,
                    request_deserializer=auth_dot_auth__req__res__pb2.RefreshTokenRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.RefreshTokenResponse.SerializeToString,
            ),
            'ValidateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateToken,
                    request_deserializer=auth_dot_auth__req__res__pb2.ValidateTokenRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.ValidateTokenResponse.SerializeToString,
            ),
            'RevokeToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeToken,
                    request_deserializer=auth_dot_auth__req__res__pb2.RevokeTokenRequest.FromString,
                    response_serializer=auth_dot_auth__req__res__pb2.RevokeTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.auth.AuthenticationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('proto.auth.AuthenticationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AuthenticationService(object):
    """Authentication service for user login, registration, and management
    """

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/Register',
            auth_dot_auth__req__res__pb2.RegisterRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.RegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/Login',
            auth_dot_auth__req__res__pb2.LoginRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/Logout',
            auth_dot_auth__req__res__pb2.LogoutRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.LogoutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/ChangePassword',
            auth_dot_auth__req__res__pb2.ChangePasswordRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.ChangePasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/ResetPassword',
            auth_dot_auth__req__res__pb2.ResetPasswordRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.ResetPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ForgotPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/ForgotPassword',
            auth_dot_auth__req__res__pb2.ForgotPasswordRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.ForgotPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EnableMFA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/EnableMFA',
            auth_dot_auth__req__res__pb2.EnableMFARequest.SerializeToString,
            auth_dot_auth__req__res__pb2.EnableMFAResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyMFA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/VerifyMFA',
            auth_dot_auth__req__res__pb2.VerifyMFARequest.SerializeToString,
            auth_dot_auth__req__res__pb2.VerifyMFAResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DisableMFA(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/DisableMFA',
            auth_dot_auth__req__res__pb2.DisableMFARequest.SerializeToString,
            auth_dot_auth__req__res__pb2.DisableMFAResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/VerifyEmail',
            auth_dot_auth__req__res__pb2.VerifyEmailRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.VerifyEmailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResendVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/ResendVerification',
            auth_dot_auth__req__res__pb2.ResendVerificationRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.ResendVerificationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RefreshToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/RefreshToken',
            auth_dot_auth__req__res__pb2.RefreshTokenRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.RefreshTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/ValidateToken',
            auth_dot_auth__req__res__pb2.ValidateTokenRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.ValidateTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RevokeToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.auth.AuthenticationService/RevokeToken',
            auth_dot_auth__req__res__pb2.RevokeTokenRequest.SerializeToString,
            auth_dot_auth__req__res__pb2.RevokeTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
