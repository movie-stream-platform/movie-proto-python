// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recommendation/recommendation_req_res.proto

package com.movieplatform.proto.recommendation;

public interface TrainRecommendationModelRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.recommendation.TrainRecommendationModelRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   * @return Whether the baseRequest field is set.
   */
  boolean hasBaseRequest();
  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   * @return The baseRequest.
   */
  com.movieplatform.proto.common.BaseRequest getBaseRequest();
  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   */
  com.movieplatform.proto.common.BaseRequestOrBuilder getBaseRequestOrBuilder();

  /**
   * <pre>
   * Type of model to train
   * </pre>
   *
   * <code>string model_type = 2;</code>
   * @return The modelType.
   */
  java.lang.String getModelType();
  /**
   * <pre>
   * Type of model to train
   * </pre>
   *
   * <code>string model_type = 2;</code>
   * @return The bytes for modelType.
   */
  com.google.protobuf.ByteString
      getModelTypeBytes();

  /**
   * <pre>
   * Training parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; training_params = 3;</code>
   */
  int getTrainingParamsCount();
  /**
   * <pre>
   * Training parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; training_params = 3;</code>
   */
  boolean containsTrainingParams(
      java.lang.String key);
  /**
   * Use {@link #getTrainingParamsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getTrainingParams();
  /**
   * <pre>
   * Training parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; training_params = 3;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getTrainingParamsMap();
  /**
   * <pre>
   * Training parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; training_params = 3;</code>
   */
  /* nullable */
java.lang.String getTrainingParamsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Training parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; training_params = 3;</code>
   */
  java.lang.String getTrainingParamsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Dataset IDs to use for training
   * </pre>
   *
   * <code>repeated string dataset_ids = 4;</code>
   * @return A list containing the datasetIds.
   */
  java.util.List<java.lang.String>
      getDatasetIdsList();
  /**
   * <pre>
   * Dataset IDs to use for training
   * </pre>
   *
   * <code>repeated string dataset_ids = 4;</code>
   * @return The count of datasetIds.
   */
  int getDatasetIdsCount();
  /**
   * <pre>
   * Dataset IDs to use for training
   * </pre>
   *
   * <code>repeated string dataset_ids = 4;</code>
   * @param index The index of the element to return.
   * @return The datasetIds at the given index.
   */
  java.lang.String getDatasetIds(int index);
  /**
   * <pre>
   * Dataset IDs to use for training
   * </pre>
   *
   * <code>repeated string dataset_ids = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the datasetIds at the given index.
   */
  com.google.protobuf.ByteString
      getDatasetIdsBytes(int index);

  /**
   * <pre>
   * Whether to do incremental training
   * </pre>
   *
   * <code>bool incremental_training = 5;</code>
   * @return The incrementalTraining.
   */
  boolean getIncrementalTraining();
}
