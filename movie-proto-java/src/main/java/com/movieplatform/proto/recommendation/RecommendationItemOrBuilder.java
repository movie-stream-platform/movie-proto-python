// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recommendation/recommendation_req_res.proto

package com.movieplatform.proto.recommendation;

public interface RecommendationItemOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.recommendation.RecommendationItem)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Content ID
   * </pre>
   *
   * <code>string content_id = 1;</code>
   * @return The contentId.
   */
  java.lang.String getContentId();
  /**
   * <pre>
   * Content ID
   * </pre>
   *
   * <code>string content_id = 1;</code>
   * @return The bytes for contentId.
   */
  com.google.protobuf.ByteString
      getContentIdBytes();

  /**
   * <pre>
   * Type of content
   * </pre>
   *
   * <code>string content_type = 2;</code>
   * @return The contentType.
   */
  java.lang.String getContentType();
  /**
   * <pre>
   * Type of content
   * </pre>
   *
   * <code>string content_type = 2;</code>
   * @return The bytes for contentType.
   */
  com.google.protobuf.ByteString
      getContentTypeBytes();

  /**
   * <pre>
   * Recommendation score
   * </pre>
   *
   * <code>float score = 3;</code>
   * @return The score.
   */
  float getScore();

  /**
   * <pre>
   * Reason for recommendation
   * </pre>
   *
   * <code>string reason = 4;</code>
   * @return The reason.
   */
  java.lang.String getReason();
  /**
   * <pre>
   * Reason for recommendation
   * </pre>
   *
   * <code>string reason = 4;</code>
   * @return The bytes for reason.
   */
  com.google.protobuf.ByteString
      getReasonBytes();

  /**
   * <pre>
   * Individual feature scores
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_scores = 5;</code>
   */
  int getFeatureScoresCount();
  /**
   * <pre>
   * Individual feature scores
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_scores = 5;</code>
   */
  boolean containsFeatureScores(
      java.lang.String key);
  /**
   * Use {@link #getFeatureScoresMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Float>
  getFeatureScores();
  /**
   * <pre>
   * Individual feature scores
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_scores = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.Float>
  getFeatureScoresMap();
  /**
   * <pre>
   * Individual feature scores
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_scores = 5;</code>
   */
  float getFeatureScoresOrDefault(
      java.lang.String key,
      float defaultValue);
  /**
   * <pre>
   * Individual feature scores
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_scores = 5;</code>
   */
  float getFeatureScoresOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * When recommendation was made
   * </pre>
   *
   * <code>.proto.common.DateTime recommended_at = 6;</code>
   * @return Whether the recommendedAt field is set.
   */
  boolean hasRecommendedAt();
  /**
   * <pre>
   * When recommendation was made
   * </pre>
   *
   * <code>.proto.common.DateTime recommended_at = 6;</code>
   * @return The recommendedAt.
   */
  com.movieplatform.proto.common.DateTime getRecommendedAt();
  /**
   * <pre>
   * When recommendation was made
   * </pre>
   *
   * <code>.proto.common.DateTime recommended_at = 6;</code>
   */
  com.movieplatform.proto.common.DateTimeOrBuilder getRecommendedAtOrBuilder();
}
