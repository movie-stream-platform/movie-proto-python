// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recommendation/recommendation_req_res.proto

package com.movieplatform.proto.recommendation;

public interface GetContentBasedRecommendationsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.recommendation.GetContentBasedRecommendationsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   * @return Whether the baseRequest field is set.
   */
  boolean hasBaseRequest();
  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   * @return The baseRequest.
   */
  com.movieplatform.proto.common.BaseRequest getBaseRequest();
  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   */
  com.movieplatform.proto.common.BaseRequestOrBuilder getBaseRequestOrBuilder();

  /**
   * <pre>
   * User ID for recommendations
   * </pre>
   *
   * <code>string user_id = 2;</code>
   * @return The userId.
   */
  java.lang.String getUserId();
  /**
   * <pre>
   * User ID for recommendations
   * </pre>
   *
   * <code>string user_id = 2;</code>
   * @return The bytes for userId.
   */
  com.google.protobuf.ByteString
      getUserIdBytes();

  /**
   * <pre>
   * Content ID to base recommendations on
   * </pre>
   *
   * <code>string content_id = 3;</code>
   * @return The contentId.
   */
  java.lang.String getContentId();
  /**
   * <pre>
   * Content ID to base recommendations on
   * </pre>
   *
   * <code>string content_id = 3;</code>
   * @return The bytes for contentId.
   */
  com.google.protobuf.ByteString
      getContentIdBytes();

  /**
   * <pre>
   * Types of content to recommend
   * </pre>
   *
   * <code>repeated string content_types = 4;</code>
   * @return A list containing the contentTypes.
   */
  java.util.List<java.lang.String>
      getContentTypesList();
  /**
   * <pre>
   * Types of content to recommend
   * </pre>
   *
   * <code>repeated string content_types = 4;</code>
   * @return The count of contentTypes.
   */
  int getContentTypesCount();
  /**
   * <pre>
   * Types of content to recommend
   * </pre>
   *
   * <code>repeated string content_types = 4;</code>
   * @param index The index of the element to return.
   * @return The contentTypes at the given index.
   */
  java.lang.String getContentTypes(int index);
  /**
   * <pre>
   * Types of content to recommend
   * </pre>
   *
   * <code>repeated string content_types = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the contentTypes at the given index.
   */
  com.google.protobuf.ByteString
      getContentTypesBytes(int index);

  /**
   * <pre>
   * Number of recommendations
   * </pre>
   *
   * <code>int32 limit = 5;</code>
   * @return The limit.
   */
  int getLimit();

  /**
   * <pre>
   * Minimum similarity threshold
   * </pre>
   *
   * <code>float min_similarity_score = 6;</code>
   * @return The minSimilarityScore.
   */
  float getMinSimilarityScore();

  /**
   * <pre>
   * Feature importance weights
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_weights = 7;</code>
   */
  int getFeatureWeightsCount();
  /**
   * <pre>
   * Feature importance weights
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_weights = 7;</code>
   */
  boolean containsFeatureWeights(
      java.lang.String key);
  /**
   * Use {@link #getFeatureWeightsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Float>
  getFeatureWeights();
  /**
   * <pre>
   * Feature importance weights
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_weights = 7;</code>
   */
  java.util.Map<java.lang.String, java.lang.Float>
  getFeatureWeightsMap();
  /**
   * <pre>
   * Feature importance weights
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_weights = 7;</code>
   */
  float getFeatureWeightsOrDefault(
      java.lang.String key,
      float defaultValue);
  /**
   * <pre>
   * Feature importance weights
   * </pre>
   *
   * <code>map&lt;string, float&gt; feature_weights = 7;</code>
   */
  float getFeatureWeightsOrThrow(
      java.lang.String key);
}
