// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: notification/notification_req_res.proto

package com.movieplatform.proto.notification;

public interface SendEmailTemplateRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.notification.SendEmailTemplateRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   * @return Whether the baseRequest field is set.
   */
  boolean hasBaseRequest();
  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   * @return The baseRequest.
   */
  com.movieplatform.proto.common.BaseRequest getBaseRequest();
  /**
   * <code>.proto.common.BaseRequest base_request = 1;</code>
   */
  com.movieplatform.proto.common.BaseRequestOrBuilder getBaseRequestOrBuilder();

  /**
   * <pre>
   * User ID to send email to
   * </pre>
   *
   * <code>string user_id = 2;</code>
   * @return The userId.
   */
  java.lang.String getUserId();
  /**
   * <pre>
   * User ID to send email to
   * </pre>
   *
   * <code>string user_id = 2;</code>
   * @return The bytes for userId.
   */
  com.google.protobuf.ByteString
      getUserIdBytes();

  /**
   * <pre>
   * Email template ID
   * </pre>
   *
   * <code>string template_id = 3;</code>
   * @return The templateId.
   */
  java.lang.String getTemplateId();
  /**
   * <pre>
   * Email template ID
   * </pre>
   *
   * <code>string template_id = 3;</code>
   * @return The bytes for templateId.
   */
  com.google.protobuf.ByteString
      getTemplateIdBytes();

  /**
   * <pre>
   * Template variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; template_vars = 4;</code>
   */
  int getTemplateVarsCount();
  /**
   * <pre>
   * Template variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; template_vars = 4;</code>
   */
  boolean containsTemplateVars(
      java.lang.String key);
  /**
   * Use {@link #getTemplateVarsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getTemplateVars();
  /**
   * <pre>
   * Template variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; template_vars = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getTemplateVarsMap();
  /**
   * <pre>
   * Template variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; template_vars = 4;</code>
   */
  /* nullable */
java.lang.String getTemplateVarsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Template variables
   * </pre>
   *
   * <code>map&lt;string, string&gt; template_vars = 4;</code>
   */
  java.lang.String getTemplateVarsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Override template subject
   * </pre>
   *
   * <code>string subject_override = 5;</code>
   * @return The subjectOverride.
   */
  java.lang.String getSubjectOverride();
  /**
   * <pre>
   * Override template subject
   * </pre>
   *
   * <code>string subject_override = 5;</code>
   * @return The bytes for subjectOverride.
   */
  com.google.protobuf.ByteString
      getSubjectOverrideBytes();

  /**
   * <pre>
   * Attachment URLs
   * </pre>
   *
   * <code>repeated string attachments = 6;</code>
   * @return A list containing the attachments.
   */
  java.util.List<java.lang.String>
      getAttachmentsList();
  /**
   * <pre>
   * Attachment URLs
   * </pre>
   *
   * <code>repeated string attachments = 6;</code>
   * @return The count of attachments.
   */
  int getAttachmentsCount();
  /**
   * <pre>
   * Attachment URLs
   * </pre>
   *
   * <code>repeated string attachments = 6;</code>
   * @param index The index of the element to return.
   * @return The attachments at the given index.
   */
  java.lang.String getAttachments(int index);
  /**
   * <pre>
   * Attachment URLs
   * </pre>
   *
   * <code>repeated string attachments = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the attachments at the given index.
   */
  com.google.protobuf.ByteString
      getAttachmentsBytes(int index);
}
