// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pagination.proto

package com.movieplatform.proto.common;

public interface PaginationResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.common.PaginationResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Current page number
   * </pre>
   *
   * <code>int32 current_page = 1;</code>
   * @return The currentPage.
   */
  int getCurrentPage();

  /**
   * <pre>
   * Items per page
   * </pre>
   *
   * <code>int32 page_size = 2;</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * Total number of pages
   * </pre>
   *
   * <code>int32 total_pages = 3;</code>
   * @return The totalPages.
   */
  int getTotalPages();

  /**
   * <pre>
   * Total number of items
   * </pre>
   *
   * <code>int64 total_items = 4;</code>
   * @return The totalItems.
   */
  long getTotalItems();

  /**
   * <pre>
   * Items on current page
   * </pre>
   *
   * <code>int32 items_on_current_page = 5;</code>
   * @return The itemsOnCurrentPage.
   */
  int getItemsOnCurrentPage();

  /**
   * <pre>
   * Cursor for next page
   * </pre>
   *
   * <code>string next_cursor = 6;</code>
   * @return The nextCursor.
   */
  java.lang.String getNextCursor();
  /**
   * <pre>
   * Cursor for next page
   * </pre>
   *
   * <code>string next_cursor = 6;</code>
   * @return The bytes for nextCursor.
   */
  com.google.protobuf.ByteString
      getNextCursorBytes();

  /**
   * <pre>
   * Cursor for previous page
   * </pre>
   *
   * <code>string previous_cursor = 7;</code>
   * @return The previousCursor.
   */
  java.lang.String getPreviousCursor();
  /**
   * <pre>
   * Cursor for previous page
   * </pre>
   *
   * <code>string previous_cursor = 7;</code>
   * @return The bytes for previousCursor.
   */
  com.google.protobuf.ByteString
      getPreviousCursorBytes();

  /**
   * <pre>
   * Whether there's a next page
   * </pre>
   *
   * <code>bool has_next = 8;</code>
   * @return The hasNext.
   */
  boolean getHasNext();

  /**
   * <pre>
   * Whether there's a previous page
   * </pre>
   *
   * <code>bool has_previous = 9;</code>
   * @return The hasPrevious.
   */
  boolean getHasPrevious();
}
