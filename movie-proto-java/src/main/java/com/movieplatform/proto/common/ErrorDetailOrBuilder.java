// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/base_response.proto

package com.movieplatform.proto.common;

public interface ErrorDetailOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.common.ErrorDetail)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Machine-readable error code
   * </pre>
   *
   * <code>string error_code = 1;</code>
   * @return The errorCode.
   */
  java.lang.String getErrorCode();
  /**
   * <pre>
   * Machine-readable error code
   * </pre>
   *
   * <code>string error_code = 1;</code>
   * @return The bytes for errorCode.
   */
  com.google.protobuf.ByteString
      getErrorCodeBytes();

  /**
   * <pre>
   * Field name if validation error
   * </pre>
   *
   * <code>string field_name = 2;</code>
   * @return The fieldName.
   */
  java.lang.String getFieldName();
  /**
   * <pre>
   * Field name if validation error
   * </pre>
   *
   * <code>string field_name = 2;</code>
   * @return The bytes for fieldName.
   */
  com.google.protobuf.ByteString
      getFieldNameBytes();

  /**
   * <pre>
   * Human-readable error message
   * </pre>
   *
   * <code>string error_message = 3;</code>
   * @return The errorMessage.
   */
  java.lang.String getErrorMessage();
  /**
   * <pre>
   * Human-readable error message
   * </pre>
   *
   * <code>string error_message = 3;</code>
   * @return The bytes for errorMessage.
   */
  com.google.protobuf.ByteString
      getErrorMessageBytes();

  /**
   * <pre>
   * Error severity level
   * </pre>
   *
   * <code>.proto.common.ErrorSeverity severity = 4;</code>
   * @return The enum numeric value on the wire for severity.
   */
  int getSeverityValue();
  /**
   * <pre>
   * Error severity level
   * </pre>
   *
   * <code>.proto.common.ErrorSeverity severity = 4;</code>
   * @return The severity.
   */
  com.movieplatform.proto.common.ErrorSeverity getSeverity();

  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 5;</code>
   */
  int getContextCount();
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 5;</code>
   */
  boolean containsContext(
      java.lang.String key);
  /**
   * Use {@link #getContextMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getContext();
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getContextMap();
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 5;</code>
   */
  /* nullable */
java.lang.String getContextOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Additional error context
   * </pre>
   *
   * <code>map&lt;string, string&gt; context = 5;</code>
   */
  java.lang.String getContextOrThrow(
      java.lang.String key);
}
