// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playback/playback_req_res.proto

package com.movieplatform.proto.playback;

public interface GetDRMLicenseResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.playback.GetDRMLicenseResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.proto.common.BaseResponse base_response = 1;</code>
   * @return Whether the baseResponse field is set.
   */
  boolean hasBaseResponse();
  /**
   * <code>.proto.common.BaseResponse base_response = 1;</code>
   * @return The baseResponse.
   */
  com.movieplatform.proto.common.BaseResponse getBaseResponse();
  /**
   * <code>.proto.common.BaseResponse base_response = 1;</code>
   */
  com.movieplatform.proto.common.BaseResponseOrBuilder getBaseResponseOrBuilder();

  /**
   * <pre>
   * License server URL
   * </pre>
   *
   * <code>string license_url = 2;</code>
   * @return The licenseUrl.
   */
  java.lang.String getLicenseUrl();
  /**
   * <pre>
   * License server URL
   * </pre>
   *
   * <code>string license_url = 2;</code>
   * @return The bytes for licenseUrl.
   */
  com.google.protobuf.ByteString
      getLicenseUrlBytes();

  /**
   * <pre>
   * License token
   * </pre>
   *
   * <code>string license_token = 3;</code>
   * @return The licenseToken.
   */
  java.lang.String getLicenseToken();
  /**
   * <pre>
   * License token
   * </pre>
   *
   * <code>string license_token = 3;</code>
   * @return The bytes for licenseToken.
   */
  com.google.protobuf.ByteString
      getLicenseTokenBytes();

  /**
   * <pre>
   * When license expires
   * </pre>
   *
   * <code>.proto.common.DateTime license_expires_at = 4;</code>
   * @return Whether the licenseExpiresAt field is set.
   */
  boolean hasLicenseExpiresAt();
  /**
   * <pre>
   * When license expires
   * </pre>
   *
   * <code>.proto.common.DateTime license_expires_at = 4;</code>
   * @return The licenseExpiresAt.
   */
  com.movieplatform.proto.common.DateTime getLicenseExpiresAt();
  /**
   * <pre>
   * When license expires
   * </pre>
   *
   * <code>.proto.common.DateTime license_expires_at = 4;</code>
   */
  com.movieplatform.proto.common.DateTimeOrBuilder getLicenseExpiresAtOrBuilder();

  /**
   * <pre>
   * License parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; license_params = 5;</code>
   */
  int getLicenseParamsCount();
  /**
   * <pre>
   * License parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; license_params = 5;</code>
   */
  boolean containsLicenseParams(
      java.lang.String key);
  /**
   * Use {@link #getLicenseParamsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLicenseParams();
  /**
   * <pre>
   * License parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; license_params = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLicenseParamsMap();
  /**
   * <pre>
   * License parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; license_params = 5;</code>
   */
  /* nullable */
java.lang.String getLicenseParamsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * License parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; license_params = 5;</code>
   */
  java.lang.String getLicenseParamsOrThrow(
      java.lang.String key);
}
