// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playback/playback_req_res.proto

package com.movieplatform.proto.playback;

public interface ContentProtectionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.playback.ContentProtection)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Content ID
   * </pre>
   *
   * <code>string content_id = 1;</code>
   * @return The contentId.
   */
  java.lang.String getContentId();
  /**
   * <pre>
   * Content ID
   * </pre>
   *
   * <code>string content_id = 1;</code>
   * @return The bytes for contentId.
   */
  com.google.protobuf.ByteString
      getContentIdBytes();

  /**
   * <pre>
   * Type of protection
   * </pre>
   *
   * <code>string protection_type = 2;</code>
   * @return The protectionType.
   */
  java.lang.String getProtectionType();
  /**
   * <pre>
   * Type of protection
   * </pre>
   *
   * <code>string protection_type = 2;</code>
   * @return The bytes for protectionType.
   */
  com.google.protobuf.ByteString
      getProtectionTypeBytes();

  /**
   * <pre>
   * Protection level
   * </pre>
   *
   * <code>string protection_level = 3;</code>
   * @return The protectionLevel.
   */
  java.lang.String getProtectionLevel();
  /**
   * <pre>
   * Protection level
   * </pre>
   *
   * <code>string protection_level = 3;</code>
   * @return The bytes for protectionLevel.
   */
  com.google.protobuf.ByteString
      getProtectionLevelBytes();

  /**
   * <pre>
   * Supported DRM systems
   * </pre>
   *
   * <code>repeated string drm_systems = 4;</code>
   * @return A list containing the drmSystems.
   */
  java.util.List<java.lang.String>
      getDrmSystemsList();
  /**
   * <pre>
   * Supported DRM systems
   * </pre>
   *
   * <code>repeated string drm_systems = 4;</code>
   * @return The count of drmSystems.
   */
  int getDrmSystemsCount();
  /**
   * <pre>
   * Supported DRM systems
   * </pre>
   *
   * <code>repeated string drm_systems = 4;</code>
   * @param index The index of the element to return.
   * @return The drmSystems at the given index.
   */
  java.lang.String getDrmSystems(int index);
  /**
   * <pre>
   * Supported DRM systems
   * </pre>
   *
   * <code>repeated string drm_systems = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the drmSystems at the given index.
   */
  com.google.protobuf.ByteString
      getDrmSystemsBytes(int index);

  /**
   * <pre>
   * Watermarking information
   * </pre>
   *
   * <code>string watermarking = 5;</code>
   * @return The watermarking.
   */
  java.lang.String getWatermarking();
  /**
   * <pre>
   * Watermarking information
   * </pre>
   *
   * <code>string watermarking = 5;</code>
   * @return The bytes for watermarking.
   */
  com.google.protobuf.ByteString
      getWatermarkingBytes();

  /**
   * <pre>
   * Protection parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; protection_params = 6;</code>
   */
  int getProtectionParamsCount();
  /**
   * <pre>
   * Protection parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; protection_params = 6;</code>
   */
  boolean containsProtectionParams(
      java.lang.String key);
  /**
   * Use {@link #getProtectionParamsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getProtectionParams();
  /**
   * <pre>
   * Protection parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; protection_params = 6;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getProtectionParamsMap();
  /**
   * <pre>
   * Protection parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; protection_params = 6;</code>
   */
  /* nullable */
java.lang.String getProtectionParamsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * Protection parameters
   * </pre>
   *
   * <code>map&lt;string, string&gt; protection_params = 6;</code>
   */
  java.lang.String getProtectionParamsOrThrow(
      java.lang.String key);
}
