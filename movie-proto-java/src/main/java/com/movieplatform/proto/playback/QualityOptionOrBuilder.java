// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: playback/playback_req_res.proto

package com.movieplatform.proto.playback;

public interface QualityOptionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:proto.playback.QualityOption)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Quality name (e.g., "1080p", "720p")
   * </pre>
   *
   * <code>string quality_name = 1;</code>
   * @return The qualityName.
   */
  java.lang.String getQualityName();
  /**
   * <pre>
   * Quality name (e.g., "1080p", "720p")
   * </pre>
   *
   * <code>string quality_name = 1;</code>
   * @return The bytes for qualityName.
   */
  com.google.protobuf.ByteString
      getQualityNameBytes();

  /**
   * <pre>
   * Bitrate in kbps
   * </pre>
   *
   * <code>int32 bitrate = 2;</code>
   * @return The bitrate.
   */
  int getBitrate();

  /**
   * <pre>
   * Video width
   * </pre>
   *
   * <code>int32 width = 3;</code>
   * @return The width.
   */
  int getWidth();

  /**
   * <pre>
   * Video height
   * </pre>
   *
   * <code>int32 height = 4;</code>
   * @return The height.
   */
  int getHeight();

  /**
   * <pre>
   * Video codec
   * </pre>
   *
   * <code>string codec = 5;</code>
   * @return The codec.
   */
  java.lang.String getCodec();
  /**
   * <pre>
   * Video codec
   * </pre>
   *
   * <code>string codec = 5;</code>
   * @return The bytes for codec.
   */
  com.google.protobuf.ByteString
      getCodecBytes();

  /**
   * <pre>
   * Whether quality is available
   * </pre>
   *
   * <code>bool available = 6;</code>
   * @return The available.
   */
  boolean getAvailable();

  /**
   * <pre>
   * Streaming URL for this quality
   * </pre>
   *
   * <code>string streaming_url = 7;</code>
   * @return The streamingUrl.
   */
  java.lang.String getStreamingUrl();
  /**
   * <pre>
   * Streaming URL for this quality
   * </pre>
   *
   * <code>string streaming_url = 7;</code>
   * @return The bytes for streamingUrl.
   */
  com.google.protobuf.ByteString
      getStreamingUrlBytes();
}
