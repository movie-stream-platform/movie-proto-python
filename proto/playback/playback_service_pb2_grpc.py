# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from playback import playback_req_res_pb2 as playback_dot_playback__req__res__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in playback/playback_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class PlaybackServiceStub(object):
    """Streaming and playback management service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePlaybackSession = channel.unary_unary(
                '/proto.playback.PlaybackService/CreatePlaybackSession',
                request_serializer=playback_dot_playback__req__res__pb2.CreatePlaybackSessionRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.CreatePlaybackSessionResponse.FromString,
                _registered_method=True)
        self.GetPlaybackSession = channel.unary_unary(
                '/proto.playback.PlaybackService/GetPlaybackSession',
                request_serializer=playback_dot_playback__req__res__pb2.GetPlaybackSessionRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackSessionResponse.FromString,
                _registered_method=True)
        self.UpdatePlaybackSession = channel.unary_unary(
                '/proto.playback.PlaybackService/UpdatePlaybackSession',
                request_serializer=playback_dot_playback__req__res__pb2.UpdatePlaybackSessionRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.UpdatePlaybackSessionResponse.FromString,
                _registered_method=True)
        self.EndPlaybackSession = channel.unary_unary(
                '/proto.playback.PlaybackService/EndPlaybackSession',
                request_serializer=playback_dot_playback__req__res__pb2.EndPlaybackSessionRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.EndPlaybackSessionResponse.FromString,
                _registered_method=True)
        self.StartPlayback = channel.unary_unary(
                '/proto.playback.PlaybackService/StartPlayback',
                request_serializer=playback_dot_playback__req__res__pb2.StartPlaybackRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.StartPlaybackResponse.FromString,
                _registered_method=True)
        self.PausePlayback = channel.unary_unary(
                '/proto.playback.PlaybackService/PausePlayback',
                request_serializer=playback_dot_playback__req__res__pb2.PausePlaybackRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.PausePlaybackResponse.FromString,
                _registered_method=True)
        self.ResumePlayback = channel.unary_unary(
                '/proto.playback.PlaybackService/ResumePlayback',
                request_serializer=playback_dot_playback__req__res__pb2.ResumePlaybackRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.ResumePlaybackResponse.FromString,
                _registered_method=True)
        self.StopPlayback = channel.unary_unary(
                '/proto.playback.PlaybackService/StopPlayback',
                request_serializer=playback_dot_playback__req__res__pb2.StopPlaybackRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.StopPlaybackResponse.FromString,
                _registered_method=True)
        self.SeekPlayback = channel.unary_unary(
                '/proto.playback.PlaybackService/SeekPlayback',
                request_serializer=playback_dot_playback__req__res__pb2.SeekPlaybackRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.SeekPlaybackResponse.FromString,
                _registered_method=True)
        self.UpdatePlaybackProgress = channel.unary_unary(
                '/proto.playback.PlaybackService/UpdatePlaybackProgress',
                request_serializer=playback_dot_playback__req__res__pb2.UpdatePlaybackProgressRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.UpdatePlaybackProgressResponse.FromString,
                _registered_method=True)
        self.GetPlaybackProgress = channel.unary_unary(
                '/proto.playback.PlaybackService/GetPlaybackProgress',
                request_serializer=playback_dot_playback__req__res__pb2.GetPlaybackProgressRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackProgressResponse.FromString,
                _registered_method=True)
        self.GetPlaybackHistory = channel.unary_unary(
                '/proto.playback.PlaybackService/GetPlaybackHistory',
                request_serializer=playback_dot_playback__req__res__pb2.GetPlaybackHistoryRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackHistoryResponse.FromString,
                _registered_method=True)
        self.GetAvailableQualities = channel.unary_unary(
                '/proto.playback.PlaybackService/GetAvailableQualities',
                request_serializer=playback_dot_playback__req__res__pb2.GetAvailableQualitiesRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetAvailableQualitiesResponse.FromString,
                _registered_method=True)
        self.ChangePlaybackQuality = channel.unary_unary(
                '/proto.playback.PlaybackService/ChangePlaybackQuality',
                request_serializer=playback_dot_playback__req__res__pb2.ChangePlaybackQualityRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.ChangePlaybackQualityResponse.FromString,
                _registered_method=True)
        self.GetAdaptiveBitrateInfo = channel.unary_unary(
                '/proto.playback.PlaybackService/GetAdaptiveBitrateInfo',
                request_serializer=playback_dot_playback__req__res__pb2.GetAdaptiveBitrateInfoRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetAdaptiveBitrateInfoResponse.FromString,
                _registered_method=True)
        self.GetStreamingURL = channel.unary_unary(
                '/proto.playback.PlaybackService/GetStreamingURL',
                request_serializer=playback_dot_playback__req__res__pb2.GetStreamingURLRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetStreamingURLResponse.FromString,
                _registered_method=True)
        self.ValidateStreamingAccess = channel.unary_unary(
                '/proto.playback.PlaybackService/ValidateStreamingAccess',
                request_serializer=playback_dot_playback__req__res__pb2.ValidateStreamingAccessRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.ValidateStreamingAccessResponse.FromString,
                _registered_method=True)
        self.GetStreamingMetrics = channel.unary_unary(
                '/proto.playback.PlaybackService/GetStreamingMetrics',
                request_serializer=playback_dot_playback__req__res__pb2.GetStreamingMetricsRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetStreamingMetricsResponse.FromString,
                _registered_method=True)
        self.TrackPlaybackEvent = channel.unary_unary(
                '/proto.playback.PlaybackService/TrackPlaybackEvent',
                request_serializer=playback_dot_playback__req__res__pb2.TrackPlaybackEventRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.TrackPlaybackEventResponse.FromString,
                _registered_method=True)
        self.GetPlaybackAnalytics = channel.unary_unary(
                '/proto.playback.PlaybackService/GetPlaybackAnalytics',
                request_serializer=playback_dot_playback__req__res__pb2.GetPlaybackAnalyticsRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackAnalyticsResponse.FromString,
                _registered_method=True)
        self.GetStreamingPerformance = channel.unary_unary(
                '/proto.playback.PlaybackService/GetStreamingPerformance',
                request_serializer=playback_dot_playback__req__res__pb2.GetStreamingPerformanceRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetStreamingPerformanceResponse.FromString,
                _registered_method=True)
        self.GetDRMLicense = channel.unary_unary(
                '/proto.playback.PlaybackService/GetDRMLicense',
                request_serializer=playback_dot_playback__req__res__pb2.GetDRMLicenseRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetDRMLicenseResponse.FromString,
                _registered_method=True)
        self.ValidateDRMToken = channel.unary_unary(
                '/proto.playback.PlaybackService/ValidateDRMToken',
                request_serializer=playback_dot_playback__req__res__pb2.ValidateDRMTokenRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.ValidateDRMTokenResponse.FromString,
                _registered_method=True)
        self.GetContentProtection = channel.unary_unary(
                '/proto.playback.PlaybackService/GetContentProtection',
                request_serializer=playback_dot_playback__req__res__pb2.GetContentProtectionRequest.SerializeToString,
                response_deserializer=playback_dot_playback__req__res__pb2.GetContentProtectionResponse.FromString,
                _registered_method=True)


class PlaybackServiceServicer(object):
    """Streaming and playback management service
    """

    def CreatePlaybackSession(self, request, context):
        """Session management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaybackSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlaybackSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndPlaybackSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartPlayback(self, request, context):
        """Playback control
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PausePlayback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumePlayback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopPlayback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SeekPlayback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlaybackProgress(self, request, context):
        """Progress tracking
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaybackProgress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaybackHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableQualities(self, request, context):
        """Quality adaptation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePlaybackQuality(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAdaptiveBitrateInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingURL(self, request, context):
        """Streaming management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateStreamingAccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackPlaybackEvent(self, request, context):
        """Analytics and monitoring
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaybackAnalytics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingPerformance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDRMLicense(self, request, context):
        """DRM and security
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateDRMToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContentProtection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlaybackServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePlaybackSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlaybackSession,
                    request_deserializer=playback_dot_playback__req__res__pb2.CreatePlaybackSessionRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.CreatePlaybackSessionResponse.SerializeToString,
            ),
            'GetPlaybackSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaybackSession,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackSessionRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetPlaybackSessionResponse.SerializeToString,
            ),
            'UpdatePlaybackSession': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlaybackSession,
                    request_deserializer=playback_dot_playback__req__res__pb2.UpdatePlaybackSessionRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.UpdatePlaybackSessionResponse.SerializeToString,
            ),
            'EndPlaybackSession': grpc.unary_unary_rpc_method_handler(
                    servicer.EndPlaybackSession,
                    request_deserializer=playback_dot_playback__req__res__pb2.EndPlaybackSessionRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.EndPlaybackSessionResponse.SerializeToString,
            ),
            'StartPlayback': grpc.unary_unary_rpc_method_handler(
                    servicer.StartPlayback,
                    request_deserializer=playback_dot_playback__req__res__pb2.StartPlaybackRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.StartPlaybackResponse.SerializeToString,
            ),
            'PausePlayback': grpc.unary_unary_rpc_method_handler(
                    servicer.PausePlayback,
                    request_deserializer=playback_dot_playback__req__res__pb2.PausePlaybackRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.PausePlaybackResponse.SerializeToString,
            ),
            'ResumePlayback': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumePlayback,
                    request_deserializer=playback_dot_playback__req__res__pb2.ResumePlaybackRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.ResumePlaybackResponse.SerializeToString,
            ),
            'StopPlayback': grpc.unary_unary_rpc_method_handler(
                    servicer.StopPlayback,
                    request_deserializer=playback_dot_playback__req__res__pb2.StopPlaybackRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.StopPlaybackResponse.SerializeToString,
            ),
            'SeekPlayback': grpc.unary_unary_rpc_method_handler(
                    servicer.SeekPlayback,
                    request_deserializer=playback_dot_playback__req__res__pb2.SeekPlaybackRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.SeekPlaybackResponse.SerializeToString,
            ),
            'UpdatePlaybackProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlaybackProgress,
                    request_deserializer=playback_dot_playback__req__res__pb2.UpdatePlaybackProgressRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.UpdatePlaybackProgressResponse.SerializeToString,
            ),
            'GetPlaybackProgress': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaybackProgress,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackProgressRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetPlaybackProgressResponse.SerializeToString,
            ),
            'GetPlaybackHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaybackHistory,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackHistoryRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetPlaybackHistoryResponse.SerializeToString,
            ),
            'GetAvailableQualities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableQualities,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetAvailableQualitiesRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetAvailableQualitiesResponse.SerializeToString,
            ),
            'ChangePlaybackQuality': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePlaybackQuality,
                    request_deserializer=playback_dot_playback__req__res__pb2.ChangePlaybackQualityRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.ChangePlaybackQualityResponse.SerializeToString,
            ),
            'GetAdaptiveBitrateInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdaptiveBitrateInfo,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetAdaptiveBitrateInfoRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetAdaptiveBitrateInfoResponse.SerializeToString,
            ),
            'GetStreamingURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingURL,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetStreamingURLRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetStreamingURLResponse.SerializeToString,
            ),
            'ValidateStreamingAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateStreamingAccess,
                    request_deserializer=playback_dot_playback__req__res__pb2.ValidateStreamingAccessRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.ValidateStreamingAccessResponse.SerializeToString,
            ),
            'GetStreamingMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingMetrics,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetStreamingMetricsRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetStreamingMetricsResponse.SerializeToString,
            ),
            'TrackPlaybackEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackPlaybackEvent,
                    request_deserializer=playback_dot_playback__req__res__pb2.TrackPlaybackEventRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.TrackPlaybackEventResponse.SerializeToString,
            ),
            'GetPlaybackAnalytics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaybackAnalytics,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetPlaybackAnalyticsRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetPlaybackAnalyticsResponse.SerializeToString,
            ),
            'GetStreamingPerformance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingPerformance,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetStreamingPerformanceRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetStreamingPerformanceResponse.SerializeToString,
            ),
            'GetDRMLicense': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDRMLicense,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetDRMLicenseRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetDRMLicenseResponse.SerializeToString,
            ),
            'ValidateDRMToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateDRMToken,
                    request_deserializer=playback_dot_playback__req__res__pb2.ValidateDRMTokenRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.ValidateDRMTokenResponse.SerializeToString,
            ),
            'GetContentProtection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContentProtection,
                    request_deserializer=playback_dot_playback__req__res__pb2.GetContentProtectionRequest.FromString,
                    response_serializer=playback_dot_playback__req__res__pb2.GetContentProtectionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.playback.PlaybackService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('proto.playback.PlaybackService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PlaybackService(object):
    """Streaming and playback management service
    """

    @staticmethod
    def CreatePlaybackSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/CreatePlaybackSession',
            playback_dot_playback__req__res__pb2.CreatePlaybackSessionRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.CreatePlaybackSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaybackSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetPlaybackSession',
            playback_dot_playback__req__res__pb2.GetPlaybackSessionRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetPlaybackSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlaybackSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/UpdatePlaybackSession',
            playback_dot_playback__req__res__pb2.UpdatePlaybackSessionRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.UpdatePlaybackSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EndPlaybackSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/EndPlaybackSession',
            playback_dot_playback__req__res__pb2.EndPlaybackSessionRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.EndPlaybackSessionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartPlayback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/StartPlayback',
            playback_dot_playback__req__res__pb2.StartPlaybackRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.StartPlaybackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PausePlayback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/PausePlayback',
            playback_dot_playback__req__res__pb2.PausePlaybackRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.PausePlaybackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResumePlayback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/ResumePlayback',
            playback_dot_playback__req__res__pb2.ResumePlaybackRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.ResumePlaybackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopPlayback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/StopPlayback',
            playback_dot_playback__req__res__pb2.StopPlaybackRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.StopPlaybackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SeekPlayback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/SeekPlayback',
            playback_dot_playback__req__res__pb2.SeekPlaybackRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.SeekPlaybackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePlaybackProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/UpdatePlaybackProgress',
            playback_dot_playback__req__res__pb2.UpdatePlaybackProgressRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.UpdatePlaybackProgressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaybackProgress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetPlaybackProgress',
            playback_dot_playback__req__res__pb2.GetPlaybackProgressRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetPlaybackProgressResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaybackHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetPlaybackHistory',
            playback_dot_playback__req__res__pb2.GetPlaybackHistoryRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetPlaybackHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAvailableQualities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetAvailableQualities',
            playback_dot_playback__req__res__pb2.GetAvailableQualitiesRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetAvailableQualitiesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangePlaybackQuality(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/ChangePlaybackQuality',
            playback_dot_playback__req__res__pb2.ChangePlaybackQualityRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.ChangePlaybackQualityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAdaptiveBitrateInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetAdaptiveBitrateInfo',
            playback_dot_playback__req__res__pb2.GetAdaptiveBitrateInfoRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetAdaptiveBitrateInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetStreamingURL',
            playback_dot_playback__req__res__pb2.GetStreamingURLRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetStreamingURLResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateStreamingAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/ValidateStreamingAccess',
            playback_dot_playback__req__res__pb2.ValidateStreamingAccessRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.ValidateStreamingAccessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetStreamingMetrics',
            playback_dot_playback__req__res__pb2.GetStreamingMetricsRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetStreamingMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TrackPlaybackEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/TrackPlaybackEvent',
            playback_dot_playback__req__res__pb2.TrackPlaybackEventRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.TrackPlaybackEventResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaybackAnalytics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetPlaybackAnalytics',
            playback_dot_playback__req__res__pb2.GetPlaybackAnalyticsRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetPlaybackAnalyticsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingPerformance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetStreamingPerformance',
            playback_dot_playback__req__res__pb2.GetStreamingPerformanceRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetStreamingPerformanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDRMLicense(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetDRMLicense',
            playback_dot_playback__req__res__pb2.GetDRMLicenseRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetDRMLicenseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateDRMToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/ValidateDRMToken',
            playback_dot_playback__req__res__pb2.ValidateDRMTokenRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.ValidateDRMTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetContentProtection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/proto.playback.PlaybackService/GetContentProtection',
            playback_dot_playback__req__res__pb2.GetContentProtectionRequest.SerializeToString,
            playback_dot_playback__req__res__pb2.GetContentProtectionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
